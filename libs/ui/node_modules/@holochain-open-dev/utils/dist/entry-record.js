import { decode } from "@msgpack/msgpack";
import { timestampToMillis } from "./timestamp.js";
export function decodeEntry(record) {
    const entry = record.entry?.Present?.entry;
    return decode(entry);
}
export class EntryRecord {
    constructor(record) {
        this.record = record;
    }
    get actionHash() {
        return this.record.signed_action.hashed.hash;
    }
    get action() {
        const action = this.record.signed_action.hashed.content;
        return {
            ...action,
            timestamp: timestampToMillis(action.timestamp),
        };
    }
    get entry() {
        return decodeEntry(this.record);
    }
    get entryHash() {
        return this.record.signed_action.hashed.content.entry_hash;
    }
}
export function decodeCountersignedEntry(record) {
    const entry = record.entry?.Present?.entry[1];
    return decode(entry);
}
export class CountersignedEntryRecord extends EntryRecord {
    get entry() {
        return decodeCountersignedEntry(this.record);
    }
}
//# sourceMappingURL=entry-record.js.map