import { Record } from "@holochain/client";
export declare function decodeEntry<T>(record: Record): T | undefined;
export declare class EntryRecord<T> {
    record: Record;
    constructor(record: Record);
    get actionHash(): Uint8Array;
    get action(): {
        timestamp: number;
        type: import("@holochain/client").ActionType.Dna;
        author: Uint8Array;
        hash: Uint8Array;
    } | {
        timestamp: number;
        type: import("@holochain/client").ActionType.AgentValidationPkg;
        author: Uint8Array;
        action_seq: number;
        prev_action: Uint8Array;
        membrane_proof: any;
    } | {
        timestamp: number;
        type: import("@holochain/client").ActionType.InitZomesComplete;
        author: Uint8Array;
        action_seq: number;
        prev_action: Uint8Array;
    } | {
        timestamp: number;
        type: import("@holochain/client").ActionType.CreateLink;
        author: Uint8Array;
        action_seq: number;
        prev_action: Uint8Array;
        base_address: Uint8Array;
        target_address: Uint8Array;
        zome_id: number;
        tag: any;
    } | {
        timestamp: number;
        type: import("@holochain/client").ActionType.DeleteLink;
        author: Uint8Array;
        action_seq: number;
        prev_action: Uint8Array;
        base_address: Uint8Array;
        link_add_address: Uint8Array;
    } | {
        timestamp: number;
        type: import("@holochain/client").ActionType.OpenChain;
        author: Uint8Array;
        action_seq: number;
        prev_action: Uint8Array;
        prev_dna_hash: Uint8Array;
    } | {
        timestamp: number;
        type: import("@holochain/client").ActionType.CloseChain;
        author: Uint8Array;
        action_seq: number;
        prev_action: Uint8Array;
        new_dna_hash: Uint8Array;
    } | {
        timestamp: number;
        type: import("@holochain/client").ActionType.Delete;
        author: Uint8Array;
        action_seq: number;
        prev_action: Uint8Array;
        deletes_address: Uint8Array;
        deletes_entry_address: Uint8Array;
    } | {
        timestamp: number;
        type: import("@holochain/client").ActionType.Create;
        author: Uint8Array;
        action_seq: number;
        prev_action: Uint8Array;
        entry_type: import("@holochain/client").EntryType;
        entry_hash: Uint8Array;
    } | {
        timestamp: number;
        type: import("@holochain/client").ActionType.Update;
        author: Uint8Array;
        action_seq: number;
        prev_action: Uint8Array;
        original_action_address: Uint8Array;
        original_entry_address: Uint8Array;
        entry_type: import("@holochain/client").EntryType;
        entry_hash: Uint8Array;
    };
    get entry(): T;
    get entryHash(): Uint8Array;
}
export declare function decodeCountersignedEntry<T>(record: Record): T | undefined;
export declare class CountersignedEntryRecord<T> extends EntryRecord<T> {
    get entry(): T;
}
