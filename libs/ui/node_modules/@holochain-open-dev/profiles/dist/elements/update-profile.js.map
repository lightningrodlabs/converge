{"version":3,"file":"update-profile.js","sourceRoot":"","sources":["../../src/elements/update-profile.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAC5C,OAAO,EAAE,SAAS,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AAC/C,OAAO,EAAE,eAAe,EAAE,MAAM,4BAA4B,CAAC;AAC7D,OAAO,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AAE5D,OAAO,6DAA6D,CAAC;AACrE,OAAO,6DAA6D,CAAC;AAErE,OAAO,mBAAmB,CAAC;AAG3B,OAAO,EAAE,oBAAoB,EAAE,MAAM,eAAe,CAAC;AAGrD;;;GAGG;AAGI,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,UAAU;IAAtC;;QAQL;;WAEG;QACK,eAAU,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAqD7E,CAAC;IAnDC,KAAK,CAAC,aAAa,CAAC,OAAgB;QAClC,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC/C,MAAM,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QAEpC,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,iBAAiB,EAAE;YACjC,MAAM,EAAE;gBACN,OAAO;aACR;YACD,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CACH,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,QAAQ,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE;YACpC,KAAK,SAAS;gBACZ,OAAO,IAAI,CAAA;;;;;eAKJ,CAAC;YACV,KAAK,UAAU;gBACb,OAAO,IAAI,CAAA;yBACM,IAAI;;qBAER,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK;8BAClB,GAAG,CAAC,gBAAgB,CAAC;0BACzB,CAAC,CAAc,EAAE,EAAE,CACjC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;yBACvB,CAAC;YACpB,KAAK,OAAO;gBACV,OAAO,IAAI,CAAA;sBACG,GAAG,CAAC,6BAA6B,CAAC;mBACrC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK;0BACpB,CAAC;SACtB;IACH,CAAC;IAED,MAAM,KAAK,MAAM;QACf,OAAO;YACL,YAAY;YACZ,GAAG,CAAA;;;;OAIF;SACF,CAAC;IACJ,CAAC;CACF,CAAA;AA1DC;IAFC,OAAO,CAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IAC3D,QAAQ,EAAE;4CACW;AANX,aAAa;IAFzB,SAAS,EAAE;IACX,aAAa,CAAC,gBAAgB,CAAC;GACnB,aAAa,CAgEzB;SAhEY,aAAa","sourcesContent":["import { html, css, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\nimport { consume } from \"@lit-labs/context\";\nimport { localized, msg } from \"@lit/localize\";\nimport { StoreSubscriber } from \"@holochain-open-dev/stores\";\nimport { sharedStyles } from \"@holochain-open-dev/elements\";\n\nimport \"@holochain-open-dev/elements/dist/elements/display-error.js\";\nimport \"@shoelace-style/shoelace/dist/components/spinner/spinner.js\";\n\nimport \"./edit-profile.js\";\n\nimport { ProfilesStore } from \"../profiles-store.js\";\nimport { profilesStoreContext } from \"../context.js\";\nimport { Profile } from \"../types.js\";\n\n/**\n * @element update-profile\n * @fires profile-updated - Fired after the profile has been created. Detail will have this shape: { profile: { nickname, fields } }\n */\n@localized()\n@customElement(\"update-profile\")\nexport class UpdateProfile extends LitElement {\n  /**\n   * Profiles store for this element, not required if you embed this element inside a <profiles-context>\n   */\n  @consume({ context: profilesStoreContext, subscribe: true })\n  @property()\n  store!: ProfilesStore;\n\n  /**\n   * @internal\n   */\n  private _myProfile = new StoreSubscriber(this, () => this.store.myProfile);\n\n  async updateProfile(profile: Profile) {\n    await this.store.client.updateProfile(profile);\n    await this.store.myProfile.reload();\n\n    this.dispatchEvent(\n      new CustomEvent(\"profile-updated\", {\n        detail: {\n          profile,\n        },\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  render() {\n    switch (this._myProfile.value.status) {\n      case \"pending\":\n        return html`<div\n          class=\"column\"\n          style=\"align-items: center; justify-content: center; flex: 1;\"\n        >\n          <sl-spinner></sl-spinner>\n        </div>`;\n      case \"complete\":\n        return html` <edit-profile\n          .allowCancel=${true}\n          style=\"margin-top: 16px; flex: 1\"\n          .profile=${this._myProfile.value.value}\n          .saveProfileLabel=${msg(\"Update Profile\")}\n          @save-profile=${(e: CustomEvent) =>\n            this.updateProfile(e.detail.profile)}\n        ></edit-profile>`;\n      case \"error\":\n        return html`<display-error\n          .headline=${msg(\"Error fetching your profile\")}\n          .error=${this._myProfile.value.error}\n        ></display-error>`;\n    }\n  }\n\n  static get styles() {\n    return [\n      sharedStyles,\n      css`\n        :host {\n          display: flex;\n        }\n      `,\n    ];\n  }\n}\n"]}