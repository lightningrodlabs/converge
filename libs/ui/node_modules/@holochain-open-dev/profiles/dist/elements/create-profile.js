import { __decorate } from "tslib";
import { html, LitElement } from "lit";
import { property, customElement } from "lit/decorators.js";
import { consume } from "@lit-labs/context";
import { localized, msg } from "@lit/localize";
import { sharedStyles, notifyError } from "@holochain-open-dev/elements";
import "@shoelace-style/shoelace/dist/components/alert/alert.js";
import "@shoelace-style/shoelace/dist/components/card/card.js";
import "./edit-profile.js";
import { profilesStoreContext } from "../context.js";
/**
 * A custom element that fires event on value change.
 *
 * @element create-profile
 * @fires profile-created - Fired after the profile has been created. Detail will have this shape: { profile: { nickname, fields } }
 */
let CreateProfile = class CreateProfile extends LitElement {
    /** Private properties */
    async createProfile(profile) {
        try {
            await this.store.client.createProfile(profile);
            this.dispatchEvent(new CustomEvent("profile-created", {
                detail: {
                    profile,
                },
                bubbles: true,
                composed: true,
            }));
            await this.store.myProfile.reload();
        }
        catch (e) {
            console.error(e);
            notifyError(msg("Error creating the profile"));
        }
    }
    render() {
        return html `
      <sl-card>
        <div class="column">
          <span
            class="title"
            style="margin-bottom: 16px; align-self: flex-start"
            >${msg("Create Profile")}</span
          >
          <edit-profile
            .saveProfileLabel=${msg("Create Profile")}
            .store=${this.store}
            @save-profile=${(e) => this.createProfile(e.detail.profile)}
          ></edit-profile></div
      ></sl-card>
    `;
    }
};
CreateProfile.styles = [sharedStyles];
__decorate([
    consume({ context: profilesStoreContext, subscribe: true }),
    property()
], CreateProfile.prototype, "store", void 0);
CreateProfile = __decorate([
    localized(),
    customElement("create-profile")
], CreateProfile);
export { CreateProfile };
//# sourceMappingURL=create-profile.js.map