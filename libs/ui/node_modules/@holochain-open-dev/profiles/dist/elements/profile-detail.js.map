{"version":3,"file":"profile-detail.js","sourceRoot":"","sources":["../../src/elements/profile-detail.ts"],"names":[],"mappings":"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","sourcesContent":["import { consume } from \"@lit-labs/context\";\nimport { AgentPubKey } from \"@holochain/client\";\nimport { html, LitElement } from \"lit\";\nimport { StoreSubscriber } from \"@holochain-open-dev/stores\";\nimport { customElement, property } from \"lit/decorators.js\";\nimport { localized, msg } from \"@lit/localize\";\nimport { hashProperty, sharedStyles } from \"@holochain-open-dev/elements\";\n\nimport \"@holochain-open-dev/elements/dist/elements/display-error.js\";\nimport \"@shoelace-style/shoelace/dist/components/skeleton/skeleton.js\";\nimport \"./agent-avatar.js\";\n\nimport { profilesStoreContext } from \"../context.js\";\nimport { ProfilesStore } from \"../profiles-store.js\";\nimport { Profile } from \"../types.js\";\n\n/**\n * @element profile-detail\n */\n@localized()\n@customElement(\"profile-detail\")\nexport class ProfileDetail extends LitElement {\n  /** Public properties */\n\n  /**\n   * REQUIRED. Public key identifying the agent for which the profile should be shown\n   */\n  @property(hashProperty(\"agent-pub-key\"))\n  agentPubKey!: AgentPubKey;\n\n  /**\n   * Profiles store for this element, not required if you embed this element inside a <profiles-context>\n   */\n  @consume({ context: profilesStoreContext, subscribe: true })\n  @property()\n  store!: ProfilesStore;\n\n  /** Private properties */\n\n  /**\n   * @internal\n   */\n  private _agentProfile = new StoreSubscriber(\n    this,\n    () => this.store.profiles.get(this.agentPubKey),\n    () => [this.agentPubKey]\n  );\n\n  getAdditionalFields(profile: Profile): Record<string, string> {\n    const fields: Record<string, string> = {};\n\n    for (const [key, value] of Object.entries(profile.fields)) {\n      if (key !== \"avatar\") {\n        fields[key] = value;\n      }\n    }\n\n    return fields;\n  }\n\n  renderAdditionalField(fieldId: string, fieldValue: string) {\n    return html`\n      <div class=\"column\" style=\"margin-top: 16px\">\n        <span style=\"margin-bottom: 8px; \">\n          <strong\n            >${fieldId.substring(0, 1).toUpperCase()}${fieldId.substring(\n              1\n            )}</strong\n          ></span\n        >\n        <span>${fieldValue}</span>\n      </div>\n    `;\n  }\n\n  renderProfile(profile: Profile | undefined) {\n    if (!profile)\n      return html`<div\n        class=\"column\"\n        style=\"align-items: center; justify-content: center; flex: 1;\"\n      >\n        <span class=\"placeholder\"\n          >${msg(\"This agent hasn't created a profile yet\")}</span\n        >\n      </div>`;\n\n    return html`\n      <div class=\"column\">\n        <div class=\"row\" style=\"align-items: center\">\n          <agent-avatar .agentPubKey=${this.agentPubKey}></agent-avatar>\n          <span style=\"font-size: 16px; margin-left: 8px;\"\n            >${profile.nickname}</span\n          >\n\n          <span style=\"flex: 1\"></span>\n\n          <slot name=\"action\"></slot>\n        </div>\n\n        ${Object.entries(this.getAdditionalFields(profile))\n          .filter(([, value]) => value !== \"\")\n          .map(([key, value]) => this.renderAdditionalField(key, value))}\n      </div>\n    `;\n  }\n\n  render() {\n    switch (this._agentProfile.value.status) {\n      case \"pending\":\n        return html`\n          <div class=\"column\">\n            <div class=\"row\" style=\"align-items: center\">\n              <sl-skeleton\n                effect=\"pulse\"\n                style=\"height: 32px; width: 32px; border-radius: 50%;\"\n              ></sl-skeleton>\n              <div>\n                <sl-skeleton\n                  effect=\"pulse\"\n                  style=\"width: 122px; margin-left: 8px;\"\n                ></sl-skeleton>\n              </div>\n            </div>\n\n            ${this.store.config.additionalFields.map(\n              () => html`\n                <sl-skeleton\n                  effect=\"pulse\"\n                  style=\"width: 200px; margin-top: 16px;\"\n                ></sl-skeleton>\n              `\n            )}\n          </div>\n        `;\n      case \"complete\":\n        return this.renderProfile(this._agentProfile.value.value);\n      case \"error\":\n        return html`<display-error\n          .headline=${msg(\"Error fetching the profile\")}\n          .error=${this._agentProfile.value.error}\n        ></display-error>`;\n    }\n  }\n\n  static styles = [sharedStyles];\n}\n"]}