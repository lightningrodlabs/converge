export class FormFieldController {
    constructor(host) {
        this.host = host;
        this.host.addController(this);
        this.handleFormData = this.handleFormData.bind(this);
        this.handleFormSubmit = this.handleFormSubmit.bind(this);
        this.handleFormReset = this.handleFormReset.bind(this);
    }
    closestElement(selector) {
        function __closestFrom(el) {
            if (!el || el === document || el === window)
                return null;
            if (el.assignedSlot)
                el = el.assignedSlot;
            const found = el.closest(selector);
            return found ? found : __closestFrom(el.getRootNode().host);
        }
        return __closestFrom(this.host);
    }
    hostConnected() {
        this.form = this.closestElement("form");
        if (this.form) {
            this.form.addEventListener("formdata", this.handleFormData);
            this.form.addEventListener("submit", this.handleFormSubmit);
            this.form.addEventListener("reset", this.handleFormReset);
            this.form.dispatchEvent(new CustomEvent("update-form"));
        }
    }
    hostDisconnected() {
        if (this.form) {
            this.form.removeEventListener("formdata", this.handleFormData);
            this.form.removeEventListener("submit", this.handleFormSubmit);
            this.form.removeEventListener("reset", this.handleFormReset);
            this.form = undefined;
        }
    }
    handleFormData(event) {
        const disabled = this.host.disabled;
        const name = this.host.name;
        const value = this.host.value;
        if (!disabled && name && value !== undefined) {
            if (Array.isArray(value)) {
                value.map((val) => event.formData.append(name, val));
            }
            else {
                event.formData.append(name, value);
            }
        }
    }
    handleFormSubmit(event) {
        const form = this.form;
        const disabled = this.host.disabled;
        const reportValidity = this.host.reportValidity;
        if (form &&
            !form.noValidate &&
            !disabled &&
            reportValidity &&
            !this.host.reportValidity()) {
            event.preventDefault();
            event.stopImmediatePropagation();
        }
    }
    handleFormReset(_event) {
        this.host.reset();
    }
}
//# sourceMappingURL=form-field-controller.js.map