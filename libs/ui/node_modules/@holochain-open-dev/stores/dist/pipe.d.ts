import { AsyncReadable } from "./async-readable.js";
export declare function pipe<T, U>(store: AsyncReadable<T>, fn1: (arg: T) => AsyncReadable<U>): AsyncReadable<U>;
export declare function pipe<T, U, V>(store: AsyncReadable<T>, fn1: (arg: T) => AsyncReadable<U>, fn2: (arg: U) => AsyncReadable<V>): AsyncReadable<V>;
export declare function pipe<T, U, V, W>(store: AsyncReadable<T>, fn1: (arg: T) => AsyncReadable<U>, fn2: (arg: U) => AsyncReadable<V>, fn3: (arg: V) => AsyncReadable<W>): AsyncReadable<W>;
export declare function pipe<T, U, V, W, X>(store: AsyncReadable<T>, fn1: (arg: T) => AsyncReadable<U>, fn2: (arg: U) => AsyncReadable<V>, fn3: (arg: V) => AsyncReadable<W>, fn4: (arg: W) => AsyncReadable<X>): AsyncReadable<X>;
export declare function pipe<T, U, V, W, X, Y>(store: AsyncReadable<T>, fn1: (arg: T) => AsyncReadable<U>, fn2: (arg: U) => AsyncReadable<V>, fn3: (arg: V) => AsyncReadable<W>, fn4: (arg: W) => AsyncReadable<X>, fn5: (arg: X) => AsyncReadable<Y>): AsyncReadable<Y>;
export declare function pipe<T, U, V, W, X, Y, Z>(store: AsyncReadable<T>, fn1: (arg: T) => AsyncReadable<U>, fn2: (arg: U) => AsyncReadable<V>, fn3: (arg: V) => AsyncReadable<W>, fn4: (arg: W) => AsyncReadable<X>, fn5: (arg: X) => AsyncReadable<Y>, fn6: (arg: Y) => AsyncReadable<Z>): AsyncReadable<Z>;
