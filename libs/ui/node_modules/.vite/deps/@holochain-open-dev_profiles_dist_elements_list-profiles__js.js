import "./chunk-ESIWSSXQ.js";
import "./chunk-H7YIJVQP.js";
import "./chunk-OZCCVK7E.js";
import "./chunk-AXFKINVK.js";
import {
  localized,
  msg
} from "./chunk-VJMV55IO.js";
import {
  sharedStyles
} from "./chunk-WEAYHYO7.js";
import {
  StoreSubscriber
} from "./chunk-4Z3R6YLO.js";
import "./chunk-22VNO7Y6.js";
import "./chunk-IFZRPEIZ.js";
import "./chunk-CCLU3OJM.js";
import "./chunk-2AWGVYMQ.js";
import "./chunk-ZPGR2TPQ.js";
import {
  __decorate
} from "./chunk-GXRAUBTD.js";
import {
  consume,
  profilesStoreContext
} from "./chunk-Z4I2FY2W.js";
import "./chunk-IGAVQDRX.js";
import "./chunk-WQJA2ZTO.js";
import "./chunk-XHTW3CQQ.js";
import {
  customElement,
  property
} from "./chunk-LLKFEKJC.js";
import {
  LitElement,
  html
} from "./chunk-KJJ2SZCS.js";
import "./chunk-HKTNVJXR.js";
import {
  css
} from "./chunk-QK5UQRR6.js";
import "./chunk-PDNTOHOW.js";
import "./chunk-TCQZMY3T.js";

// node_modules/@holochain-open-dev/profiles/dist/elements/list-profiles.js
var ListProfiles = class ListProfiles2 extends LitElement {
  constructor() {
    super(...arguments);
    this._allProfiles = new StoreSubscriber(this, () => this.store.allProfiles);
  }
  initials(nickname) {
    return nickname.split(" ").map((name) => name[0]).join("");
  }
  fireAgentSelected(agentPubKey) {
    if (agentPubKey) {
      this.dispatchEvent(new CustomEvent("agent-selected", {
        bubbles: true,
        composed: true,
        detail: {
          agentPubKey
        }
      }));
    }
  }
  renderList(profiles) {
    if (profiles.size === 0)
      return html`<span>${msg("There are no created profiles yet")} ></span>`;
    return html`
      <div style="min-width: 80px; flex: 1;" }>
        ${Array.from(profiles.entries()).map(([agent_pub_key, profile]) => html`
            <div class="row" style="align-items: center; margin-bottom: 16px;">
              <agent-avatar
                style="margin-right: 8px;"
                .agentPubKey=${agent_pub_key}
                @click=${() => this.fireAgentSelected(agent_pub_key)}
              >
              </agent-avatar
              ><span> ${profile.nickname}</span>
            </div>
          `)}
      </div>
    `;
  }
  render() {
    switch (this._allProfiles.value.status) {
      case "pending":
        return html`<div class="column center-content">
          <profile-list-item-skeleton> </profile-list-item-skeleton>
          <profile-list-item-skeleton> </profile-list-item-skeleton>
          <profile-list-item-skeleton> </profile-list-item-skeleton>
        </div>`;
      case "error":
        return html`<display-error
          .headline=${msg("Error fetching the profiles for all agents")}
          .error=${this._allProfiles.value.error}
        ></display-error>`;
      case "complete":
        return this.renderList(this._allProfiles.value.value);
    }
  }
};
ListProfiles.styles = [
  sharedStyles,
  css`
      :host {
        display: flex;
      }
    `
];
__decorate([
  consume({ context: profilesStoreContext, subscribe: true }),
  property()
], ListProfiles.prototype, "store", void 0);
ListProfiles = __decorate([
  localized(),
  customElement("list-profiles")
], ListProfiles);
export {
  ListProfiles
};
//# sourceMappingURL=@holochain-open-dev_profiles_dist_elements_list-profiles__js.js.map
