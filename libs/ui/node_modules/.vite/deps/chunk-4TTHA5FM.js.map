{
  "version": 3,
  "sources": ["../../../../node_modules/@shoelace-style/shoelace/dist/chunks/chunk.7BLP64MK.js", "../../../../node_modules/lit-html/src/static.ts", "../../../../node_modules/@shoelace-style/shoelace/dist/chunks/chunk.YPHHGIDO.js"],
  "sourcesContent": ["import {\n  component_styles_default\n} from \"./chunk.TUVJKY7S.js\";\n\n// src/components/icon-button/icon-button.styles.ts\nimport { css } from \"lit\";\nvar icon_button_styles_default = css`\n  ${component_styles_default}\n\n  :host {\n    display: inline-block;\n    color: var(--sl-color-neutral-600);\n  }\n\n  .icon-button {\n    flex: 0 0 auto;\n    display: flex;\n    align-items: center;\n    background: none;\n    border: none;\n    border-radius: var(--sl-border-radius-medium);\n    font-size: inherit;\n    color: inherit;\n    padding: var(--sl-spacing-x-small);\n    cursor: pointer;\n    transition: var(--sl-transition-x-fast) color;\n    -webkit-appearance: none;\n  }\n\n  .icon-button:hover:not(.icon-button--disabled),\n  .icon-button:focus-visible:not(.icon-button--disabled) {\n    color: var(--sl-color-primary-600);\n  }\n\n  .icon-button:active:not(.icon-button--disabled) {\n    color: var(--sl-color-primary-700);\n  }\n\n  .icon-button:focus {\n    outline: none;\n  }\n\n  .icon-button--disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .icon-button:focus-visible {\n    outline: var(--sl-focus-ring);\n    outline-offset: var(--sl-focus-ring-offset);\n  }\n\n  .icon-button__icon {\n    pointer-events: none;\n  }\n`;\n\nexport {\n  icon_button_styles_default\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Any new exports need to be added to the export statement in\n// `packages/lit/src/index.all.ts`.\n\nimport {html as coreHtml, svg as coreSvg, TemplateResult} from './lit-html.js';\n\nexport interface StaticValue {\n  /** The value to interpolate as-is into the template. */\n  _$litStatic$: string;\n\n  /**\n   * A value that can't be decoded from ordinary JSON, make it harder for\n   * a attacker-controlled data that goes through JSON.parse to produce a valid\n   * StaticValue.\n   */\n  r: typeof brand;\n}\n\n/**\n * Prevents JSON injection attacks.\n *\n * The goals of this brand:\n *   1) fast to check\n *   2) code is small on the wire\n *   3) multiple versions of Lit in a single page will all produce mutually\n *      interoperable StaticValues\n *   4) normal JSON.parse (without an unusual reviver) can not produce a\n *      StaticValue\n *\n * Symbols satisfy (1), (2), and (4). We use Symbol.for to satisfy (3), but\n * we don't care about the key, so we break ties via (2) and use the empty\n * string.\n */\nconst brand = Symbol.for('');\n\n/** Safely extracts the string part of a StaticValue. */\nconst unwrapStaticValue = (value: unknown): string | undefined => {\n  if ((value as Partial<StaticValue>)?.r !== brand) {\n    return undefined;\n  }\n  return (value as Partial<StaticValue>)?.['_$litStatic$'];\n};\n\n/**\n * Wraps a string so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Note that this function is unsafe to use on untrusted content, as it will be\n * directly parsed into HTML. Do not pass user input to this function\n * without sanitizing it.\n *\n * Static values can be changed, but they will cause a complete re-render\n * since they effectively create a new template.\n */\nexport const unsafeStatic = (value: string): StaticValue => ({\n  ['_$litStatic$']: value,\n  r: brand,\n});\n\nconst textFromStatic = (value: StaticValue) => {\n  if (value['_$litStatic$'] !== undefined) {\n    return value['_$litStatic$'];\n  } else {\n    throw new Error(\n      `Value passed to 'literal' function must be a 'literal' result: ${value}. Use 'unsafeStatic' to pass non-literal values, but\n            take care to ensure page security.`\n    );\n  }\n};\n\n/**\n * Tags a string literal so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * The only values that may be used in template expressions are other tagged\n * `literal` results or `unsafeStatic` values (note that untrusted content\n * should never be passed to `unsafeStatic`).\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Static values can be changed, but they will cause a complete re-render since\n * they effectively create a new template.\n */\nexport const literal = (\n  strings: TemplateStringsArray,\n  ...values: unknown[]\n): StaticValue => ({\n  ['_$litStatic$']: values.reduce(\n    (acc, v, idx) => acc + textFromStatic(v as StaticValue) + strings[idx + 1],\n    strings[0]\n  ) as string,\n  r: brand,\n});\n\nconst stringsCache = new Map<string, TemplateStringsArray>();\n\n/**\n * Wraps a lit-html template tag (`html` or `svg`) to add static value support.\n */\nexport const withStatic =\n  (coreTag: typeof coreHtml | typeof coreSvg) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult => {\n    const l = values.length;\n    let staticValue: string | undefined;\n    let dynamicValue: unknown;\n    const staticStrings: Array<string> = [];\n    const dynamicValues: Array<unknown> = [];\n    let i = 0;\n    let hasStatics = false;\n    let s: string;\n\n    while (i < l) {\n      s = strings[i];\n      // Collect any unsafeStatic values, and their following template strings\n      // so that we treat a run of template strings and unsafe static values as\n      // a single template string.\n      while (\n        i < l &&\n        ((dynamicValue = values[i]),\n        (staticValue = unwrapStaticValue(dynamicValue))) !== undefined\n      ) {\n        s += staticValue + strings[++i];\n        hasStatics = true;\n      }\n      // If the last value is static, we don't need to push it.\n      if (i !== l) {\n        dynamicValues.push(dynamicValue);\n      }\n      staticStrings.push(s);\n      i++;\n    }\n    // If the last value isn't static (which would have consumed the last\n    // string), then we need to add the last string.\n    if (i === l) {\n      staticStrings.push(strings[l]);\n    }\n\n    if (hasStatics) {\n      const key = staticStrings.join('$$lit$$');\n      strings = stringsCache.get(key)!;\n      if (strings === undefined) {\n        // Beware: in general this pattern is unsafe, and doing so may bypass\n        // lit's security checks and allow an attacker to execute arbitrary\n        // code and inject arbitrary content.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (staticStrings as any).raw = staticStrings;\n        stringsCache.set(\n          key,\n          (strings = staticStrings as unknown as TemplateStringsArray)\n        );\n      }\n      values = dynamicValues;\n    }\n    return coreTag(strings, ...values);\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const html = withStatic(coreHtml);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const svg = withStatic(coreSvg);\n", "import {\n  icon_button_styles_default\n} from \"./chunk.7BLP64MK.js\";\nimport {\n  SlIcon\n} from \"./chunk.VM7JFKRR.js\";\nimport {\n  ShoelaceElement\n} from \"./chunk.5C2L26HG.js\";\nimport {\n  __decorateClass\n} from \"./chunk.5F6CPPXO.js\";\n\n// src/components/icon-button/icon-button.component.ts\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { html, literal } from \"lit/static-html.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { property, query, state } from \"lit/decorators.js\";\nvar SlIconButton = class extends ShoelaceElement {\n  constructor() {\n    super(...arguments);\n    this.hasFocus = false;\n    this.label = \"\";\n    this.disabled = false;\n  }\n  handleBlur() {\n    this.hasFocus = false;\n    this.emit(\"sl-blur\");\n  }\n  handleFocus() {\n    this.hasFocus = true;\n    this.emit(\"sl-focus\");\n  }\n  handleClick(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  /** Simulates a click on the icon button. */\n  click() {\n    this.button.click();\n  }\n  /** Sets focus on the icon button. */\n  focus(options) {\n    this.button.focus(options);\n  }\n  /** Removes focus from the icon button. */\n  blur() {\n    this.button.blur();\n  }\n  render() {\n    const isLink = this.href ? true : false;\n    const tag = isLink ? literal`a` : literal`button`;\n    return html`\n      <${tag}\n        part=\"base\"\n        class=${classMap({\n      \"icon-button\": true,\n      \"icon-button--disabled\": !isLink && this.disabled,\n      \"icon-button--focused\": this.hasFocus\n    })}\n        ?disabled=${ifDefined(isLink ? void 0 : this.disabled)}\n        type=${ifDefined(isLink ? void 0 : \"button\")}\n        href=${ifDefined(isLink ? this.href : void 0)}\n        target=${ifDefined(isLink ? this.target : void 0)}\n        download=${ifDefined(isLink ? this.download : void 0)}\n        rel=${ifDefined(isLink && this.target ? \"noreferrer noopener\" : void 0)}\n        role=${ifDefined(isLink ? void 0 : \"button\")}\n        aria-disabled=${this.disabled ? \"true\" : \"false\"}\n        aria-label=\"${this.label}\"\n        tabindex=${this.disabled ? \"-1\" : \"0\"}\n        @blur=${this.handleBlur}\n        @focus=${this.handleFocus}\n        @click=${this.handleClick}\n      >\n        <sl-icon\n          class=\"icon-button__icon\"\n          name=${ifDefined(this.name)}\n          library=${ifDefined(this.library)}\n          src=${ifDefined(this.src)}\n          aria-hidden=\"true\"\n        ></sl-icon>\n      </${tag}>\n    `;\n  }\n};\nSlIconButton.styles = icon_button_styles_default;\nSlIconButton.dependencies = { \"sl-icon\": SlIcon };\n__decorateClass([\n  query(\".icon-button\")\n], SlIconButton.prototype, \"button\", 2);\n__decorateClass([\n  state()\n], SlIconButton.prototype, \"hasFocus\", 2);\n__decorateClass([\n  property()\n], SlIconButton.prototype, \"name\", 2);\n__decorateClass([\n  property()\n], SlIconButton.prototype, \"library\", 2);\n__decorateClass([\n  property()\n], SlIconButton.prototype, \"src\", 2);\n__decorateClass([\n  property()\n], SlIconButton.prototype, \"href\", 2);\n__decorateClass([\n  property()\n], SlIconButton.prototype, \"target\", 2);\n__decorateClass([\n  property()\n], SlIconButton.prototype, \"download\", 2);\n__decorateClass([\n  property()\n], SlIconButton.prototype, \"label\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], SlIconButton.prototype, \"disabled\", 2);\n\nexport {\n  SlIconButton\n};\n"],
  "mappings": "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",
  "names": ["html", "svg", "html"]
}
