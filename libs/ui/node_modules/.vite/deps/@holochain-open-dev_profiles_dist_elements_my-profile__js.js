import "./chunk-4VBEA5G5.js";
import "./chunk-H7YIJVQP.js";
import "./chunk-OZCCVK7E.js";
import "./chunk-AXFKINVK.js";
import "./chunk-5HU42PV4.js";
import {
  SlIconButton
} from "./chunk-4TTHA5FM.js";
import {
  localized,
  msg
} from "./chunk-VJMV55IO.js";
import {
  mdiPencil,
  sharedStyles,
  wrapPathInSvg
} from "./chunk-WEAYHYO7.js";
import "./chunk-DURKRWBH.js";
import {
  StoreSubscriber
} from "./chunk-4Z3R6YLO.js";
import "./chunk-22VNO7Y6.js";
import "./chunk-IFZRPEIZ.js";
import "./chunk-CCLU3OJM.js";
import "./chunk-2AWGVYMQ.js";
import "./chunk-ZPGR2TPQ.js";
import {
  __decorate
} from "./chunk-GXRAUBTD.js";
import {
  consume,
  profilesStoreContext
} from "./chunk-Z4I2FY2W.js";
import "./chunk-IGAVQDRX.js";
import "./chunk-WQJA2ZTO.js";
import "./chunk-3UHMJHWB.js";
import "./chunk-XHTW3CQQ.js";
import {
  customElement,
  property,
  state
} from "./chunk-LLKFEKJC.js";
import {
  LitElement,
  html
} from "./chunk-KJJ2SZCS.js";
import "./chunk-HKTNVJXR.js";
import {
  css
} from "./chunk-QK5UQRR6.js";
import "./chunk-PDNTOHOW.js";
import "./chunk-TCQZMY3T.js";

// ../node_modules/@shoelace-style/shoelace/dist/chunks/chunk.YCXWCKER.js
SlIconButton.define("sl-icon-button");

// node_modules/@holochain-open-dev/profiles/dist/elements/update-profile.js
var UpdateProfile = class UpdateProfile2 extends LitElement {
  constructor() {
    super(...arguments);
    this._myProfile = new StoreSubscriber(this, () => this.store.myProfile);
  }
  async updateProfile(profile) {
    await this.store.client.updateProfile(profile);
    await this.store.myProfile.reload();
    this.dispatchEvent(new CustomEvent("profile-updated", {
      detail: {
        profile
      },
      bubbles: true,
      composed: true
    }));
  }
  render() {
    switch (this._myProfile.value.status) {
      case "pending":
        return html`<div
          class="column"
          style="align-items: center; justify-content: center; flex: 1;"
        >
          <sl-spinner></sl-spinner>
        </div>`;
      case "complete":
        return html` <edit-profile
          .allowCancel=${true}
          style="margin-top: 16px; flex: 1"
          .profile=${this._myProfile.value.value}
          .saveProfileLabel=${msg("Update Profile")}
          @save-profile=${(e) => this.updateProfile(e.detail.profile)}
        ></edit-profile>`;
      case "error":
        return html`<display-error
          .headline=${msg("Error fetching your profile")}
          .error=${this._myProfile.value.error}
        ></display-error>`;
    }
  }
  static get styles() {
    return [
      sharedStyles,
      css`
        :host {
          display: flex;
        }
      `
    ];
  }
};
__decorate([
  consume({ context: profilesStoreContext, subscribe: true }),
  property()
], UpdateProfile.prototype, "store", void 0);
UpdateProfile = __decorate([
  localized(),
  customElement("update-profile")
], UpdateProfile);

// node_modules/@holochain-open-dev/profiles/dist/elements/my-profile.js
var MyProfile = class MyProfile2 extends LitElement {
  constructor() {
    super(...arguments);
    this._editing = false;
  }
  render() {
    if (this._editing)
      return html`<update-profile
        @profile-updated=${() => this._editing = false}
        @cancel-edit-profile=${() => this._editing = false}
      ></update-profile>`;
    return html`
      <profile-detail .agentPubKey=${this.store.client.client.myPubKey}>
        <sl-icon-button
          src="${wrapPathInSvg(mdiPencil)}"
          slot="action"
          @click=${() => this._editing = true}
        ></sl-icon-button>
      </profile-detail>
    `;
  }
};
MyProfile.styles = [sharedStyles];
__decorate([
  consume({ context: profilesStoreContext, subscribe: true }),
  property()
], MyProfile.prototype, "store", void 0);
__decorate([
  state()
], MyProfile.prototype, "_editing", void 0);
MyProfile = __decorate([
  customElement("my-profile")
], MyProfile);
export {
  MyProfile
};
//# sourceMappingURL=@holochain-open-dev_profiles_dist_elements_my-profile__js.js.map
