import {
  gBase64
} from "./chunk-2AWGVYMQ.js";
import {
  Directive,
  directive
} from "./chunk-XHTW3CQQ.js";
import {
  property
} from "./chunk-LLKFEKJC.js";
import {
  LitElement
} from "./chunk-KJJ2SZCS.js";
import {
  css
} from "./chunk-QK5UQRR6.js";

// node_modules/@holochain-open-dev/elements/dist/shared-styles.js
var sharedStyles = [
  css`
    .row {
      display: flex;
      flex-direction: row;
    }
    .column {
      display: flex;
      flex-direction: column;
    }
    .small-margin {
      margin-top: 6px;
    }
    .big-margin {
      margin-top: 23px;
    }

    .fill {
      flex: 1;
      height: 100%;
    }

    .title {
      font-size: 20px;
    }

    .center-content {
      align-items: center;
      justify-content: center;
    }

    .placeholder {
      color: var(--sl-color-gray-700);
    }

    .flex-scrollable-parent {
      position: relative;
      display: flex;
      flex: 1;
    }

    .flex-scrollable-container {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }

    .flex-scrollable-x {
      max-width: 100%;
      overflow-x: auto;
    }
    .flex-scrollable-y {
      max-height: 100%;
      overflow-y: auto;
    }
    :host {
      color: var(--sl-color-neutral-1000);
    }

    sl-card {
      display: flex;
    }
    sl-card::part(base) {
      flex: 1;
    }
    sl-card::part(body) {
      display: flex;
      flex: 1;
    }
    sl-drawer::part(body) {
      display: flex;
    }
  `
];

// node_modules/@holochain-open-dev/elements/node_modules/@holochain/client/lib/api/admin/types.js
var CellType;
(function(CellType2) {
  CellType2["Provisioned"] = "provisioned";
  CellType2["Cloned"] = "cloned";
  CellType2["Stem"] = "stem";
})(CellType || (CellType = {}));
var CellProvisioningStrategy;
(function(CellProvisioningStrategy2) {
  CellProvisioningStrategy2["Create"] = "create";
  CellProvisioningStrategy2["UseExisting"] = "use_existing";
  CellProvisioningStrategy2["CreateIfNoExists"] = "create_if_no_exists";
})(CellProvisioningStrategy || (CellProvisioningStrategy = {}));
var AppStatusFilter;
(function(AppStatusFilter2) {
  AppStatusFilter2["Enabled"] = "enabled";
  AppStatusFilter2["Disabled"] = "disabled";
  AppStatusFilter2["Running"] = "running";
  AppStatusFilter2["Stopped"] = "stopped";
  AppStatusFilter2["Paused"] = "paused";
})(AppStatusFilter || (AppStatusFilter = {}));

// node_modules/@holochain-open-dev/elements/node_modules/@holochain/client/lib/utils/base64.js
function decodeHashFromBase64(hash) {
  return gBase64.toUint8Array(hash.slice(1));
}
function encodeHashToBase64(hash) {
  return `u${gBase64.fromUint8Array(hash, true)}`;
}

// node_modules/@holochain-open-dev/elements/node_modules/@holochain/client/lib/api/zome-call-signing.js
if (!globalThis.crypto) {
  import("./node_crypto-ZKBL4SRI.js").then((webcrypto) => globalThis.crypto = webcrypto);
}

// node_modules/@holochain-open-dev/elements/node_modules/@holochain/client/lib/environments/launcher.js
var __HC_LAUNCHER_ENV__ = "__HC_LAUNCHER_ENV__";
var isLauncher = globalThis.window && __HC_LAUNCHER_ENV__ in globalThis.window;

// node_modules/@holochain-open-dev/elements/node_modules/@holochain/client/lib/hdk/capabilities.js
var GrantedFunctionsType;
(function(GrantedFunctionsType2) {
  GrantedFunctionsType2["All"] = "All";
  GrantedFunctionsType2["Listed"] = "Listed";
})(GrantedFunctionsType || (GrantedFunctionsType = {}));

// node_modules/@holochain-open-dev/elements/node_modules/@holochain/client/lib/hdk/action.js
var ActionType;
(function(ActionType2) {
  ActionType2["Dna"] = "Dna";
  ActionType2["AgentValidationPkg"] = "AgentValidationPkg";
  ActionType2["InitZomesComplete"] = "InitZomesComplete";
  ActionType2["CreateLink"] = "CreateLink";
  ActionType2["DeleteLink"] = "DeleteLink";
  ActionType2["OpenChain"] = "OpenChain";
  ActionType2["CloseChain"] = "CloseChain";
  ActionType2["Create"] = "Create";
  ActionType2["Update"] = "Update";
  ActionType2["Delete"] = "Delete";
})(ActionType || (ActionType = {}));

// node_modules/@holochain-open-dev/elements/node_modules/@holochain/client/lib/hdk/dht-ops.js
var DhtOpType;
(function(DhtOpType2) {
  DhtOpType2["StoreRecord"] = "StoreRecord";
  DhtOpType2["StoreEntry"] = "StoreEntry";
  DhtOpType2["RegisterAgentActivity"] = "RegisterAgentActivity";
  DhtOpType2["RegisterUpdatedContent"] = "RegisterUpdatedContent";
  DhtOpType2["RegisterUpdatedRecord"] = "RegisterUpdatedRecord";
  DhtOpType2["RegisterDeletedBy"] = "RegisterDeletedBy";
  DhtOpType2["RegisterDeletedEntryAction"] = "RegisterDeletedEntryAction";
  DhtOpType2["RegisterAddLink"] = "RegisterAddLink";
  DhtOpType2["RegisterRemoveLink"] = "RegisterRemoveLink";
})(DhtOpType || (DhtOpType = {}));

// node_modules/@holochain-open-dev/elements/dist/holo-hash-property.js
function hashProperty(attributeName) {
  return {
    attribute: attributeName,
    type: Object,
    hasChanged: (oldVal, newVal) => (oldVal == null ? void 0 : oldVal.toString()) !== (newVal == null ? void 0 : newVal.toString()),
    converter: (s) => s && s.length > 0 && decodeHashFromBase64(s)
  };
}

// node_modules/@holochain-open-dev/elements/dist/icon.js
function wrapPathInSvg(path) {
  return `data:image/svg+xml;utf8,${wrapPathInSvgWithoutPrefix(path)}`;
}
function wrapPathInSvgWithoutPrefix(path) {
  return `<svg style='fill: currentColor' viewBox='0 0 24 24'><path d='${path}'></path></svg>`;
}

// ../node_modules/@mdi/js/mdi.js
var mdiAlertCircleOutline = "M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z";
var mdiInformationOutline = "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z";
var mdiPencil = "M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z";
var mdiPlus = "M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z";

// node_modules/@holochain-open-dev/elements/dist/form-field-controller.js
var FormFieldController = class {
  constructor(host) {
    this.host = host;
    this.host.addController(this);
    this.handleFormData = this.handleFormData.bind(this);
    this.handleFormSubmit = this.handleFormSubmit.bind(this);
    this.handleFormReset = this.handleFormReset.bind(this);
  }
  closestElement(selector) {
    function __closestFrom(el) {
      if (!el || el === document || el === window)
        return null;
      if (el.assignedSlot)
        el = el.assignedSlot;
      const found = el.closest(selector);
      return found ? found : __closestFrom(el.getRootNode().host);
    }
    return __closestFrom(this.host);
  }
  hostConnected() {
    this.form = this.closestElement("form");
    if (this.form) {
      this.form.addEventListener("formdata", this.handleFormData);
      this.form.addEventListener("submit", this.handleFormSubmit);
      this.form.addEventListener("reset", this.handleFormReset);
      this.form.dispatchEvent(new CustomEvent("update-form"));
    }
  }
  hostDisconnected() {
    if (this.form) {
      this.form.removeEventListener("formdata", this.handleFormData);
      this.form.removeEventListener("submit", this.handleFormSubmit);
      this.form.removeEventListener("reset", this.handleFormReset);
      this.form = void 0;
    }
  }
  handleFormData(event) {
    const disabled = this.host.disabled;
    const name = this.host.name;
    const value = this.host.value;
    if (!disabled && name && value !== void 0) {
      if (Array.isArray(value)) {
        value.map((val) => event.formData.append(name, val));
      } else {
        event.formData.append(name, value);
      }
    }
  }
  handleFormSubmit(event) {
    const form = this.form;
    const disabled = this.host.disabled;
    const reportValidity = this.host.reportValidity;
    if (form && !form.noValidate && !disabled && reportValidity && !this.host.reportValidity()) {
      event.preventDefault();
      event.stopImmediatePropagation();
    }
  }
  handleFormReset(_event) {
    this.host.reset();
  }
};

// node_modules/@holochain-open-dev/elements/dist/on-submit.js
function holoHashValue(value) {
  if (typeof value === "string" && value.split(",").length === 39)
    return new Uint8Array(value.split(",").map((s) => parseInt(s, 10)));
  return value;
}
function serialize(form) {
  const formData = new FormData(form);
  const object = {};
  formData.forEach((value, key) => {
    if (Reflect.has(object, key)) {
      const entry = object[key];
      if (Array.isArray(entry)) {
        entry.push(holoHashValue(value));
      } else {
        object[key] = [object[key], holoHashValue(value)];
      }
    } else {
      object[key] = holoHashValue(value);
    }
  });
  return object;
}
var OnSubmitDirective = class extends Directive {
  constructor() {
    super(...arguments);
    this.initialized = false;
  }
  update(part, props) {
    if (!this.initialized) {
      this.initialized = true;
      const form = part.element;
      form.addEventListener("update-form", (e) => {
        if (this.listener) {
          part.element.removeEventListener("submit", this.listener);
        }
        this.listener = (e2) => {
          e2.preventDefault();
          const formData = serialize(part.element);
          props[0](formData);
        };
        part.element.addEventListener("submit", this.listener);
      });
    }
    setTimeout(() => {
      if (this.listener) {
        part.element.removeEventListener("submit", this.listener);
      }
      this.listener = (e) => {
        e.preventDefault();
        const formData = serialize(part.element);
        props[0](formData);
      };
      part.element.addEventListener("submit", this.listener);
    }, 100);
  }
  render(_onSubmitCallback) {
    return ``;
  }
};
var onSubmit = directive(OnSubmitDirective);

// node_modules/@holochain-open-dev/elements/dist/notify.js
function escapeHtml(html) {
  const div = document.createElement("div");
  div.textContent = html;
  return div.innerHTML;
}
function notify(message, variant = "primary", iconPath = mdiInformationOutline, duration = 3e3) {
  const alert = Object.assign(document.createElement("sl-alert"), {
    variant,
    closable: true,
    duration,
    innerHTML: `
        <sl-icon src="${wrapPathInSvg(iconPath)}" slot="icon"></sl-icon>
        ${escapeHtml(message)}
      `
  });
  document.body.append(alert);
  return alert.toast();
}
function notifyError(message) {
  return notify(message, "danger", mdiAlertCircleOutline);
}

// ../node_modules/@shoelace-style/shoelace/dist/chunks/chunk.TUVJKY7S.js
var component_styles_default = css`
  :host {
    box-sizing: border-box;
  }

  :host *,
  :host *::before,
  :host *::after {
    box-sizing: inherit;
  }

  [hidden] {
    display: none !important;
  }
`;

// ../node_modules/@shoelace-style/shoelace/dist/chunks/chunk.5F6CPPXO.js
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};

// ../node_modules/@shoelace-style/shoelace/dist/chunks/chunk.5C2L26HG.js
var ShoelaceElement = class extends LitElement {
  constructor() {
    super();
    Object.entries(this.constructor.dependencies).forEach(([name, component]) => {
      this.constructor.define(name, component);
    });
  }
  emit(name, options) {
    const event = new CustomEvent(name, __spreadValues({
      bubbles: true,
      cancelable: false,
      composed: true,
      detail: {}
    }, options));
    this.dispatchEvent(event);
    return event;
  }
  /* eslint-enable */
  static define(name, elementConstructor = this, options = {}) {
    const currentlyRegisteredConstructor = customElements.get(name);
    if (!currentlyRegisteredConstructor) {
      customElements.define(name, class extends elementConstructor {
      }, options);
      return;
    }
    let newVersion = " (unknown version)";
    let existingVersion = newVersion;
    if ("version" in elementConstructor && elementConstructor.version) {
      newVersion = " v" + elementConstructor.version;
    }
    if ("version" in currentlyRegisteredConstructor && currentlyRegisteredConstructor.version) {
      existingVersion = " v" + currentlyRegisteredConstructor.version;
    }
    if (newVersion && existingVersion && newVersion === existingVersion) {
      return;
    }
    console.warn(
      `Attempted to register <${name}>${newVersion}, but <${name}>${existingVersion} has already been registered.`
    );
  }
};
ShoelaceElement.version = "2.7.0";
ShoelaceElement.dependencies = {};
__decorateClass([
  property()
], ShoelaceElement.prototype, "dir", 2);
__decorateClass([
  property()
], ShoelaceElement.prototype, "lang", 2);

export {
  sharedStyles,
  FormFieldController,
  onSubmit,
  encodeHashToBase64,
  hashProperty,
  wrapPathInSvg,
  mdiAlertCircleOutline,
  mdiPencil,
  mdiPlus,
  notifyError,
  component_styles_default,
  __spreadValues,
  __spreadProps,
  __decorateClass,
  ShoelaceElement
};
//# sourceMappingURL=chunk-WEAYHYO7.js.map
