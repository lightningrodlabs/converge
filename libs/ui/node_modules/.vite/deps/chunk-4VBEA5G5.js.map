{
  "version": 3,
  "sources": ["../../@holochain-open-dev/profiles/src/elements/profile-detail.ts"],
  "sourcesContent": ["import { consume } from \"@lit-labs/context\";\nimport { AgentPubKey } from \"@holochain/client\";\nimport { html, LitElement } from \"lit\";\nimport { StoreSubscriber } from \"@holochain-open-dev/stores\";\nimport { customElement, property } from \"lit/decorators.js\";\nimport { localized, msg } from \"@lit/localize\";\nimport { hashProperty, sharedStyles } from \"@holochain-open-dev/elements\";\n\nimport \"@holochain-open-dev/elements/dist/elements/display-error.js\";\nimport \"@shoelace-style/shoelace/dist/components/skeleton/skeleton.js\";\nimport \"./agent-avatar.js\";\n\nimport { profilesStoreContext } from \"../context.js\";\nimport { ProfilesStore } from \"../profiles-store.js\";\nimport { Profile } from \"../types.js\";\n\n/**\n * @element profile-detail\n */\n@localized()\n@customElement(\"profile-detail\")\nexport class ProfileDetail extends LitElement {\n  /** Public properties */\n\n  /**\n   * REQUIRED. Public key identifying the agent for which the profile should be shown\n   */\n  @property(hashProperty(\"agent-pub-key\"))\n  agentPubKey!: AgentPubKey;\n\n  /**\n   * Profiles store for this element, not required if you embed this element inside a <profiles-context>\n   */\n  @consume({ context: profilesStoreContext, subscribe: true })\n  @property()\n  store!: ProfilesStore;\n\n  /** Private properties */\n\n  /**\n   * @internal\n   */\n  private _agentProfile = new StoreSubscriber(\n    this,\n    () => this.store.profiles.get(this.agentPubKey),\n    () => [this.agentPubKey]\n  );\n\n  getAdditionalFields(profile: Profile): Record<string, string> {\n    const fields: Record<string, string> = {};\n\n    for (const [key, value] of Object.entries(profile.fields)) {\n      if (key !== \"avatar\") {\n        fields[key] = value;\n      }\n    }\n\n    return fields;\n  }\n\n  renderAdditionalField(fieldId: string, fieldValue: string) {\n    return html`\n      <div class=\"column\" style=\"margin-top: 16px\">\n        <span style=\"margin-bottom: 8px; \">\n          <strong\n            >${fieldId.substring(0, 1).toUpperCase()}${fieldId.substring(\n              1\n            )}</strong\n          ></span\n        >\n        <span>${fieldValue}</span>\n      </div>\n    `;\n  }\n\n  renderProfile(profile: Profile | undefined) {\n    if (!profile)\n      return html`<div\n        class=\"column\"\n        style=\"align-items: center; justify-content: center; flex: 1;\"\n      >\n        <span class=\"placeholder\"\n          >${msg(\"This agent hasn't created a profile yet\")}</span\n        >\n      </div>`;\n\n    return html`\n      <div class=\"column\">\n        <div class=\"row\" style=\"align-items: center\">\n          <agent-avatar .agentPubKey=${this.agentPubKey}></agent-avatar>\n          <span style=\"font-size: 16px; margin-left: 8px;\"\n            >${profile.nickname}</span\n          >\n\n          <span style=\"flex: 1\"></span>\n\n          <slot name=\"action\"></slot>\n        </div>\n\n        ${Object.entries(this.getAdditionalFields(profile))\n          .filter(([, value]) => value !== \"\")\n          .map(([key, value]) => this.renderAdditionalField(key, value))}\n      </div>\n    `;\n  }\n\n  render() {\n    switch (this._agentProfile.value.status) {\n      case \"pending\":\n        return html`\n          <div class=\"column\">\n            <div class=\"row\" style=\"align-items: center\">\n              <sl-skeleton\n                effect=\"pulse\"\n                style=\"height: 32px; width: 32px; border-radius: 50%;\"\n              ></sl-skeleton>\n              <div>\n                <sl-skeleton\n                  effect=\"pulse\"\n                  style=\"width: 122px; margin-left: 8px;\"\n                ></sl-skeleton>\n              </div>\n            </div>\n\n            ${this.store.config.additionalFields.map(\n              () => html`\n                <sl-skeleton\n                  effect=\"pulse\"\n                  style=\"width: 200px; margin-top: 16px;\"\n                ></sl-skeleton>\n              `\n            )}\n          </div>\n        `;\n      case \"complete\":\n        return this.renderProfile(this._agentProfile.value.value);\n      case \"error\":\n        return html`<display-error\n          .headline=${msg(\"Error fetching the profile\")}\n          .error=${this._agentProfile.value.error}\n        ></display-error>`;\n    }\n  }\n\n  static styles = [sharedStyles];\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBO,IAAM,gBAAN,MAAMA,uBAAsB,WAAU;EAAtC,cAAA;;AAqBG,SAAA,gBAAgB,IAAI,gBAC1B,MACA,MAAM,KAAK,MAAM,SAAS,IAAI,KAAK,WAAW,GAC9C,MAAM,CAAC,KAAK,WAAW,CAAC;EAoG5B;EAjGE,oBAAoB,SAAgB;AAClC,UAAM,SAAiC,CAAA;AAEvC,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,QAAQ,MAAM,GAAG;AACzD,UAAI,QAAQ,UAAU;AACpB,eAAO,GAAG,IAAI;;;AAIlB,WAAO;EACT;EAEA,sBAAsB,SAAiB,YAAkB;AACvD,WAAO;;;;eAII,QAAQ,UAAU,GAAG,CAAC,EAAE,YAAW,CAAE,GAAG,QAAQ,UACjD,CAAC,CACF;;;gBAGG,UAAU;;;EAGxB;EAEA,cAAc,SAA4B;AACxC,QAAI,CAAC;AACH,aAAO;;;;;aAKA,IAAI,yCAAyC,CAAC;;;AAIvD,WAAO;;;uCAG4B,KAAK,WAAW;;eAExC,QAAQ,QAAQ;;;;;;;;UAQrB,OAAO,QAAQ,KAAK,oBAAoB,OAAO,CAAC,EAC/C,OAAO,CAAC,CAAC,EAAE,KAAK,MAAM,UAAU,EAAE,EAClC,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM,KAAK,sBAAsB,KAAK,KAAK,CAAC,CAAC;;;EAGtE;EAEA,SAAM;AACJ,YAAQ,KAAK,cAAc,MAAM,QAAQ;MACvC,KAAK;AACH,eAAO;;;;;;;;;;;;;;;cAeD,KAAK,MAAM,OAAO,iBAAiB,IACnC,MAAM;;;;;eAKL,CACF;;;MAGP,KAAK;AACH,eAAO,KAAK,cAAc,KAAK,cAAc,MAAM,KAAK;MAC1D,KAAK;AACH,eAAO;sBACO,IAAI,4BAA4B,CAAC;mBACpC,KAAK,cAAc,MAAM,KAAK;;;EAG/C;;AAEO,cAAA,SAAS,CAAC,YAAY;AApH7B,WAAA;EADC,SAAS,aAAa,eAAe,CAAC;;AAQvC,WAAA;EAFC,QAAQ,EAAE,SAAS,sBAAsB,WAAW,KAAI,CAAE;EAC1D,SAAQ;;AAbE,gBAAa,WAAA;EAFzB,UAAS;EACT,cAAc,gBAAgB;GAClB,aAAa;",
  "names": ["ProfileDetail"]
}
