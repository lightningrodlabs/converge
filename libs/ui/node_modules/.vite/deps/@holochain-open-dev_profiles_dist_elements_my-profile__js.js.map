{
  "version": 3,
  "sources": ["../../../../node_modules/@shoelace-style/shoelace/dist/chunks/chunk.YCXWCKER.js", "../../@holochain-open-dev/profiles/src/elements/update-profile.ts", "../../@holochain-open-dev/profiles/src/elements/my-profile.ts"],
  "sourcesContent": ["import {\n  SlIconButton\n} from \"./chunk.YPHHGIDO.js\";\n\n// src/components/icon-button/icon-button.ts\nvar icon_button_default = SlIconButton;\nSlIconButton.define(\"sl-icon-button\");\n\nexport {\n  icon_button_default\n};\n", "import { html, css, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\nimport { consume } from \"@lit-labs/context\";\nimport { localized, msg } from \"@lit/localize\";\nimport { StoreSubscriber } from \"@holochain-open-dev/stores\";\nimport { sharedStyles } from \"@holochain-open-dev/elements\";\n\nimport \"@holochain-open-dev/elements/dist/elements/display-error.js\";\nimport \"@shoelace-style/shoelace/dist/components/spinner/spinner.js\";\n\nimport \"./edit-profile.js\";\n\nimport { ProfilesStore } from \"../profiles-store.js\";\nimport { profilesStoreContext } from \"../context.js\";\nimport { Profile } from \"../types.js\";\n\n/**\n * @element update-profile\n * @fires profile-updated - Fired after the profile has been created. Detail will have this shape: { profile: { nickname, fields } }\n */\n@localized()\n@customElement(\"update-profile\")\nexport class UpdateProfile extends LitElement {\n  /**\n   * Profiles store for this element, not required if you embed this element inside a <profiles-context>\n   */\n  @consume({ context: profilesStoreContext, subscribe: true })\n  @property()\n  store!: ProfilesStore;\n\n  /**\n   * @internal\n   */\n  private _myProfile = new StoreSubscriber(this, () => this.store.myProfile);\n\n  async updateProfile(profile: Profile) {\n    await this.store.client.updateProfile(profile);\n    await this.store.myProfile.reload();\n\n    this.dispatchEvent(\n      new CustomEvent(\"profile-updated\", {\n        detail: {\n          profile,\n        },\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  render() {\n    switch (this._myProfile.value.status) {\n      case \"pending\":\n        return html`<div\n          class=\"column\"\n          style=\"align-items: center; justify-content: center; flex: 1;\"\n        >\n          <sl-spinner></sl-spinner>\n        </div>`;\n      case \"complete\":\n        return html` <edit-profile\n          .allowCancel=${true}\n          style=\"margin-top: 16px; flex: 1\"\n          .profile=${this._myProfile.value.value}\n          .saveProfileLabel=${msg(\"Update Profile\")}\n          @save-profile=${(e: CustomEvent) =>\n            this.updateProfile(e.detail.profile)}\n        ></edit-profile>`;\n      case \"error\":\n        return html`<display-error\n          .headline=${msg(\"Error fetching your profile\")}\n          .error=${this._myProfile.value.error}\n        ></display-error>`;\n    }\n  }\n\n  static get styles() {\n    return [\n      sharedStyles,\n      css`\n        :host {\n          display: flex;\n        }\n      `,\n    ];\n  }\n}\n", "import { consume } from \"@lit-labs/context\";\nimport { html, LitElement } from \"lit\";\nimport { property, state, customElement } from \"lit/decorators.js\";\nimport { sharedStyles, wrapPathInSvg } from \"@holochain-open-dev/elements\";\nimport { mdiPencil } from \"@mdi/js\";\n\nimport \"@shoelace-style/shoelace/dist/components/icon-button/icon-button.js\";\n\nimport { profilesStoreContext } from \"../context.js\";\nimport { ProfilesStore } from \"../profiles-store.js\";\n\nimport \"./update-profile.js\";\nimport \"./profile-detail.js\";\n\n/**\n * @element my-profile\n */\n@customElement(\"my-profile\")\nexport class MyProfile extends LitElement {\n  /**\n   * Profiles store for this element, not required if you embed this element inside a <profiles-context>\n   */\n  @consume({ context: profilesStoreContext, subscribe: true })\n  @property()\n  store!: ProfilesStore;\n\n  /** Private properties */\n\n  /**\n   * @internal\n   */\n  @state()\n  private _editing = false;\n\n  render() {\n    if (this._editing)\n      return html`<update-profile\n        @profile-updated=${() => (this._editing = false)}\n        @cancel-edit-profile=${() => (this._editing = false)}\n      ></update-profile>`;\n\n    return html`\n      <profile-detail .agentPubKey=${this.store.client.client.myPubKey}>\n        <sl-icon-button\n          src=\"${wrapPathInSvg(mdiPencil)}\"\n          slot=\"action\"\n          @click=${() => (this._editing = true)}\n        ></sl-icon-button>\n      </profile-detail>\n    `;\n  }\n\n  static styles = [sharedStyles];\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,aAAa,OAAO,gBAAgB;;;ACgB7B,IAAM,gBAAN,MAAMA,uBAAsB,WAAU;EAAtC,cAAA;;AAWG,SAAA,aAAa,IAAI,gBAAgB,MAAM,MAAM,KAAK,MAAM,SAAS;EAqD3E;EAnDE,MAAM,cAAc,SAAgB;AAClC,UAAM,KAAK,MAAM,OAAO,cAAc,OAAO;AAC7C,UAAM,KAAK,MAAM,UAAU,OAAM;AAEjC,SAAK,cACH,IAAI,YAAY,mBAAmB;MACjC,QAAQ;QACN;;MAEF,SAAS;MACT,UAAU;KACX,CAAC;EAEN;EAEA,SAAM;AACJ,YAAQ,KAAK,WAAW,MAAM,QAAQ;MACpC,KAAK;AACH,eAAO;;;;;;MAMT,KAAK;AACH,eAAO;yBACU,IAAI;;qBAER,KAAK,WAAW,MAAM,KAAK;8BAClB,IAAI,gBAAgB,CAAC;0BACzB,CAAC,MACf,KAAK,cAAc,EAAE,OAAO,OAAO,CAAC;;MAE1C,KAAK;AACH,eAAO;sBACO,IAAI,6BAA6B,CAAC;mBACrC,KAAK,WAAW,MAAM,KAAK;;;EAG5C;EAEA,WAAW,SAAM;AACf,WAAO;MACL;MACA;;;;;;EAMJ;;AAzDA,WAAA;EAFC,QAAQ,EAAE,SAAS,sBAAsB,WAAW,KAAI,CAAE;EAC1D,SAAQ;;AALE,gBAAa,WAAA;EAFzB,UAAS;EACT,cAAc,gBAAgB;GAClB,aAAa;;;ACJnB,IAAM,YAAN,MAAMC,mBAAkB,WAAU;EAAlC,cAAA;;AAcG,SAAA,WAAW;EAqBrB;EAnBE,SAAM;AACJ,QAAI,KAAK;AACP,aAAO;2BACc,MAAO,KAAK,WAAW,KAAM;+BACzB,MAAO,KAAK,WAAW,KAAM;;AAGxD,WAAO;qCAC0B,KAAK,MAAM,OAAO,OAAO,QAAQ;;iBAErD,cAAc,SAAS,CAAC;;mBAEtB,MAAO,KAAK,WAAW,IAAK;;;;EAI7C;;AAEO,UAAA,SAAS,CAAC,YAAY;AA5B7B,WAAA;EAFC,QAAQ,EAAE,SAAS,sBAAsB,WAAW,KAAI,CAAE;EAC1D,SAAQ;;AAST,WAAA;EADC,MAAK;;AAbK,YAAS,WAAA;EADrB,cAAc,YAAY;GACd,SAAS;",
  "names": ["UpdateProfile", "MyProfile"]
}
