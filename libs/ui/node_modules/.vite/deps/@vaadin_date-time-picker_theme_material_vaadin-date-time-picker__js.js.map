{
  "version": 3,
  "sources": ["../../../../node_modules/@vaadin/vaadin-material-styles/version.js", "../../../../node_modules/@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js", "../../../../node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js", "../../../../node_modules/@vaadin/vaadin-material-styles/color.js", "../../../../node_modules/@vaadin/input-container/theme/material/vaadin-input-container-styles.js", "../../../../node_modules/@polymer/polymer/lib/utils/boot.js", "../../../../node_modules/@polymer/polymer/lib/utils/resolve-url.js", "../../../../node_modules/@polymer/polymer/lib/utils/settings.js", "../../../../node_modules/@polymer/polymer/lib/utils/mixin.js", "../../../../node_modules/@polymer/polymer/lib/elements/dom-module.js", "../../../../node_modules/@polymer/polymer/lib/utils/style-gather.js", "../../../../node_modules/@polymer/polymer/lib/utils/wrap.js", "../../../../node_modules/@polymer/polymer/lib/utils/path.js", "../../../../node_modules/@polymer/polymer/lib/utils/case-map.js", "../../../../node_modules/@polymer/polymer/lib/utils/async.js", "../../../../node_modules/@polymer/polymer/lib/mixins/properties-changed.js", "../../../../node_modules/@polymer/polymer/lib/mixins/property-accessors.js", "../../../../node_modules/@polymer/polymer/lib/mixins/template-stamp.js", "../../../../node_modules/@polymer/polymer/lib/mixins/property-effects.js", "../../../../node_modules/@polymer/polymer/lib/utils/telemetry.js", "../../../../node_modules/@polymer/polymer/lib/mixins/properties-mixin.js", "../../../../node_modules/@polymer/polymer/lib/mixins/element-mixin.js", "../../../../node_modules/@polymer/polymer/lib/utils/html-tag.js", "../../../../node_modules/@polymer/polymer/polymer-element.js", "../../../../node_modules/@vaadin/component-base/src/dir-helper.js", "../../../../node_modules/@vaadin/component-base/src/dir-mixin.js", "../../../../node_modules/@vaadin/input-container/src/vaadin-input-container.js", "../../../../node_modules/@vaadin/vaadin-material-styles/typography.js", "../../../../node_modules/@vaadin/vaadin-material-styles/shadow.js", "../../../../node_modules/@vaadin/vaadin-material-styles/mixins/overlay.js", "../../../../node_modules/@vaadin/overlay/theme/material/vaadin-overlay-styles.js", "../../../../node_modules/@polymer/polymer/lib/utils/array-splice.js", "../../../../node_modules/@polymer/polymer/lib/utils/flattened-nodes-observer.js", "../../../../node_modules/@polymer/polymer/lib/utils/render-status.js", "../../../../node_modules/@polymer/polymer/lib/mixins/mutable-data.js", "../../../../node_modules/@polymer/polymer/lib/utils/templatize.js", "../../../../node_modules/@vaadin/component-base/src/browser-utils.js", "../../../../node_modules/@vaadin/component-base/src/controller-mixin.js", "../../../../node_modules/@vaadin/component-base/src/focus-utils.js", "../../../../node_modules/@vaadin/component-base/src/focus-trap-controller.js", "../../../../node_modules/@vaadin/overlay/src/vaadin-overlay.js", "../../../../node_modules/@vaadin/date-picker/theme/material/vaadin-date-picker-overlay-styles.js", "../../../../node_modules/@vaadin/vaadin-material-styles/font-icons.js", "../../../../node_modules/@vaadin/button/theme/material/vaadin-button-styles.js", "../../../../node_modules/@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js", "../../../../node_modules/@vaadin/vaadin-usage-statistics/vaadin-usage-statistics-collect.js", "../../../../node_modules/@vaadin/component-base/src/async.js", "../../../../node_modules/@vaadin/component-base/src/debounce.js", "../../../../node_modules/@vaadin/component-base/src/element-mixin.js", "../../../../node_modules/@vaadin/component-base/src/unique-id-utils.js", "../../../../node_modules/@vaadin/component-base/src/slot-controller.js", "../../../../node_modules/@vaadin/component-base/src/tooltip-controller.js", "../../../../node_modules/@vaadin/component-base/src/disabled-mixin.js", "../../../../node_modules/@vaadin/component-base/src/gestures.js", "../../../../node_modules/@vaadin/component-base/src/keyboard-mixin.js", "../../../../node_modules/@vaadin/component-base/src/active-mixin.js", "../../../../node_modules/@vaadin/component-base/src/focus-mixin.js", "../../../../node_modules/@vaadin/component-base/src/tabindex-mixin.js", "../../../../node_modules/@vaadin/button/src/vaadin-button-mixin.js", "../../../../node_modules/@vaadin/button/src/vaadin-button.js", "../../../../node_modules/@vaadin/date-picker/theme/material/vaadin-date-picker-overlay-content-styles.js", "../../../../node_modules/@vaadin/date-picker/theme/material/vaadin-month-calendar-styles.js", "../../../../node_modules/@vaadin/vaadin-material-styles/mixins/field-button.js", "../../../../node_modules/@vaadin/vaadin-material-styles/mixins/helper.js", "../../../../node_modules/@vaadin/vaadin-material-styles/mixins/required-field.js", "../../../../node_modules/@vaadin/vaadin-material-styles/mixins/input-field-shared.js", "../../../../node_modules/@vaadin/date-picker/theme/material/vaadin-date-picker-styles.js", "../../../../node_modules/@polymer/polymer/lib/mixins/disable-upgrade-mixin.js", "../../../../node_modules/@vaadin/component-base/src/dom-utils.js", "../../../../node_modules/@vaadin/overlay/src/vaadin-overlay-position-mixin.js", "../../../../node_modules/@vaadin/date-picker/src/vaadin-date-picker-styles.js", "../../../../node_modules/@vaadin/date-picker/src/vaadin-date-picker-overlay.js", "../../../../node_modules/@polymer/polymer/lib/utils/debounce.js", "../../../../node_modules/@polymer/polymer/lib/utils/flush.js", "../../../../node_modules/@polymer/polymer/lib/utils/hide-template-controls.js", "../../../../node_modules/@polymer/polymer/lib/elements/dom-repeat.js", "../../../../node_modules/@vaadin/date-picker/src/vaadin-date-picker-helper.js", "../../../../node_modules/@vaadin/date-picker/src/vaadin-month-calendar.js", "../../../../node_modules/@vaadin/date-picker/src/vaadin-infinite-scroller.js", "../../../../node_modules/@vaadin/component-base/src/media-query-controller.js", "../../../../node_modules/@vaadin/date-picker/src/vaadin-date-picker-overlay-content.js", "../../../../node_modules/@vaadin/field-base/src/delegate-focus-mixin.js", "../../../../node_modules/@vaadin/field-base/src/error-controller.js", "../../../../node_modules/@vaadin/field-base/src/field-aria-controller.js", "../../../../node_modules/@vaadin/field-base/src/helper-controller.js", "../../../../node_modules/@vaadin/field-base/src/label-controller.js", "../../../../node_modules/@vaadin/field-base/src/label-mixin.js", "../../../../node_modules/@vaadin/field-base/src/validate-mixin.js", "../../../../node_modules/@vaadin/field-base/src/field-mixin.js", "../../../../node_modules/@vaadin/field-base/src/delegate-state-mixin.js", "../../../../node_modules/@vaadin/field-base/src/input-mixin.js", "../../../../node_modules/@vaadin/field-base/src/input-constraints-mixin.js", "../../../../node_modules/@vaadin/field-base/src/slot-styles-mixin.js", "../../../../node_modules/@vaadin/field-base/src/input-control-mixin.js", "../../../../node_modules/@vaadin/field-base/src/input-controller.js", "../../../../node_modules/@vaadin/field-base/src/labelled-input-controller.js", "../../../../node_modules/@vaadin/field-base/src/styles/clear-button-styles.js", "../../../../node_modules/@vaadin/field-base/src/styles/field-shared-styles.js", "../../../../node_modules/@vaadin/field-base/src/styles/input-field-container-styles.js", "../../../../node_modules/@vaadin/field-base/src/styles/input-field-shared-styles.js", "../../../../node_modules/@vaadin/field-base/src/virtual-keyboard-controller.js", "../../../../node_modules/@vaadin/date-picker/src/vaadin-date-picker-mixin.js", "../../../../node_modules/@vaadin/date-picker/src/vaadin-date-picker.js", "../../../../node_modules/@vaadin/vaadin-material-styles/mixins/loader.js", "../../../../node_modules/@vaadin/vaadin-material-styles/mixins/menu-overlay.js", "../../../../node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-dropdown-styles.js", "../../../../node_modules/@vaadin/item/theme/material/vaadin-item-styles.js", "../../../../node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-item-styles.js", "../../../../node_modules/@vaadin/time-picker/theme/material/vaadin-time-picker-styles.js", "../../../../node_modules/@vaadin/combo-box/src/vaadin-combo-box-item.js", "../../../../node_modules/@vaadin/time-picker/src/vaadin-time-picker-item.js", "../../../../node_modules/@vaadin/component-base/src/iron-list-core.js", "../../../../node_modules/@vaadin/component-base/src/virtualizer-iron-list-adapter.js", "../../../../node_modules/@vaadin/component-base/src/virtualizer.js", "../../../../node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js", "../../../../node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller.js", "../../../../node_modules/@vaadin/time-picker/src/vaadin-time-picker-scroller.js", "../../../../node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay.js", "../../../../node_modules/@vaadin/time-picker/src/vaadin-time-picker-overlay.js", "../../../../node_modules/@vaadin/component-base/src/templates.js", "../../../../node_modules/@vaadin/combo-box/src/vaadin-combo-box-mixin.js", "../../../../node_modules/@vaadin/time-picker/src/vaadin-time-picker-combo-box.js", "../../../../node_modules/@vaadin/field-base/src/pattern-mixin.js", "../../../../node_modules/@vaadin/time-picker/src/vaadin-time-picker.js", "../../../../node_modules/@vaadin/custom-field/theme/material/vaadin-custom-field-styles.js", "../../../../node_modules/@vaadin/date-time-picker/theme/material/vaadin-date-time-picker-styles.js", "../../../../node_modules/@vaadin/date-time-picker/src/vaadin-date-time-picker-date-picker.js", "../../../../node_modules/@vaadin/date-time-picker/src/vaadin-date-time-picker-time-picker.js", "../../../../node_modules/@vaadin/component-base/src/slot-mixin.js", "../../../../node_modules/@vaadin/date-time-picker/src/vaadin-date-time-picker.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Dummy custom element used for collecting\n * development time usage statistics.\n *\n * @private\n */\nclass Material extends HTMLElement {\n  static get version() {\n    return '23.3.13';\n  }\n}\n\ncustomElements.define('vaadin-material-styles', Material);\n\nexport { Material };\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n/**\n * @polymerMixin\n */\nexport const ThemePropertyMixin = (superClass) =>\n  class VaadinThemePropertyMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Helper property with theme attribute value facilitating propagation\n         * in shadow DOM.\n         *\n         * Enables the component implementation to propagate the `theme`\n         * attribute value to the sub-components in Shadow DOM by binding\n         * the sub-component’s \"theme\" attribute to the `theme` property of\n         * the host.\n         *\n         * **NOTE:** Extending the mixin only provides the property for binding,\n         * and does not make the propagation alone.\n         *\n         * See [Styling Components: Sub-components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components/#sub-components).\n         * page for more information.\n         *\n         * @deprecated The `theme` property is not supposed for public use and will be dropped in Vaadin 24.\n         * Please, use the `theme` attribute instead.\n         * @protected\n         */\n        theme: {\n          type: String,\n          reflectToAttribute: true,\n          observer: '__deprecatedThemePropertyChanged',\n        },\n\n        /**\n         * Helper property with theme attribute value facilitating propagation\n         * in shadow DOM.\n         *\n         * Enables the component implementation to propagate the `theme`\n         * attribute value to the sub-components in Shadow DOM by binding\n         * the sub-component’s \"theme\" attribute to the `theme` property of\n         * the host.\n         *\n         * **NOTE:** Extending the mixin only provides the property for binding,\n         * and does not make the propagation alone.\n         *\n         * See [Styling Components: Sub-components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components/#sub-components).\n         * page for more information.\n         *\n         * @protected\n         */\n        _theme: {\n          type: String,\n          readOnly: true,\n        },\n      };\n    }\n\n    /** @private */\n    __deprecatedThemePropertyChanged(theme) {\n      this._set_theme(theme);\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css, CSSResult, unsafeCSS } from 'lit';\nimport { ThemePropertyMixin } from './vaadin-theme-property-mixin.js';\n\nexport { css, unsafeCSS };\n\n/**\n * @typedef {Object} Theme\n * @property {string} themeFor\n * @property {CSSResult[]} styles\n * @property {string | string[]} [include]\n * @property {string} [moduleId]\n *\n * @typedef {CSSResult[] | CSSResult} CSSResultGroup\n */\n\n/**\n * @type {Theme[]}\n */\nconst themeRegistry = [];\n\n/**\n * Registers CSS styles for a component type. Make sure to register the styles before\n * the first instance of a component of the type is attached to DOM.\n *\n * @param {string} themeFor The local/tag name of the component type to register the styles for\n * @param {CSSResultGroup} styles The CSS style rules to be registered for the component type\n * matching themeFor and included in the local scope of each component instance\n * @param {{moduleId?: string, include?: string | string[]}} options Additional options\n * @return {void}\n */\nexport function registerStyles(themeFor, styles, options = {}) {\n  if (themeFor) {\n    if (hasThemes(themeFor)) {\n      console.warn(`The custom element definition for \"${themeFor}\"\n      was finalized before a style module was registered.\n      Make sure to add component specific style modules before\n      importing the corresponding custom element.`);\n    }\n  }\n\n  styles = flattenStyles(styles);\n\n  if (window.Vaadin && window.Vaadin.styleModules) {\n    window.Vaadin.styleModules.registerStyles(themeFor, styles, options);\n  } else {\n    themeRegistry.push({\n      themeFor,\n      styles,\n      include: options.include,\n      moduleId: options.moduleId,\n    });\n  }\n}\n\n/**\n * Returns all registered themes. By default the themeRegistry is returned as is.\n * In case the style-modules adapter is imported, the themes are obtained from there instead\n * @returns {Theme[]}\n */\nfunction getAllThemes() {\n  if (window.Vaadin && window.Vaadin.styleModules) {\n    return window.Vaadin.styleModules.getAllThemes();\n  }\n  return themeRegistry;\n}\n\n/**\n * Returns true if the themeFor string matches the tag name\n * @param {string} themeFor\n * @param {string} tagName\n * @returns {boolean}\n */\nfunction matchesThemeFor(themeFor, tagName) {\n  return (themeFor || '').split(' ').some((themeForToken) => {\n    return new RegExp(`^${themeForToken.split('*').join('.*')}$`).test(tagName);\n  });\n}\n\n/**\n * Maps the moduleName to an include priority number which is used for\n * determining the order in which styles are applied.\n * @param {string} moduleName\n * @returns {number}\n */\nfunction getIncludePriority(moduleName = '') {\n  let includePriority = 0;\n  if (moduleName.startsWith('lumo-') || moduleName.startsWith('material-')) {\n    includePriority = 1;\n  } else if (moduleName.startsWith('vaadin-')) {\n    includePriority = 2;\n  }\n  return includePriority;\n}\n\n/**\n * Flattens the styles into a single array of styles.\n * @param {CSSResultGroup} styles\n * @param {CSSResult[]} result\n * @returns {CSSResult[]}\n */\nfunction flattenStyles(styles = []) {\n  return [styles].flat(Infinity).filter((style) => {\n    if (style instanceof CSSResult) {\n      return true;\n    }\n    console.warn('An item in styles is not of type CSSResult. Use `unsafeCSS` or `css`.');\n    return false;\n  });\n}\n\n/**\n * Gets an array of CSSResults matching the include property of the theme.\n * @param {Theme} theme\n * @returns {CSSResult[]}\n */\nfunction getIncludedStyles(theme) {\n  const includedStyles = [];\n  if (theme.include) {\n    [].concat(theme.include).forEach((includeModuleId) => {\n      const includedTheme = getAllThemes().find((s) => s.moduleId === includeModuleId);\n      if (includedTheme) {\n        includedStyles.push(...getIncludedStyles(includedTheme), ...includedTheme.styles);\n      } else {\n        console.warn(`Included moduleId ${includeModuleId} not found in style registry`);\n      }\n    }, theme.styles);\n  }\n  return includedStyles;\n}\n\n/**\n * Includes the styles to the template.\n * @param {CSSResult[]} styles\n * @param {HTMLTemplateElement} template\n */\nfunction addStylesToTemplate(styles, template) {\n  const styleEl = document.createElement('style');\n  styleEl.innerHTML = styles.map((style) => style.cssText).join('\\n');\n  template.content.appendChild(styleEl);\n}\n\n/**\n * Returns an array of themes that should be used for styling a component matching\n * the tag name. The array is sorted by the include order.\n * @param {string} tagName\n * @returns {Theme[]}\n */\nfunction getThemes(tagName) {\n  const defaultModuleName = `${tagName}-default-theme`;\n\n  const themes = getAllThemes()\n    // Filter by matching themeFor properties\n    .filter((theme) => theme.moduleId !== defaultModuleName && matchesThemeFor(theme.themeFor, tagName))\n    .map((theme) => ({\n      ...theme,\n      // Prepend styles from included themes\n      styles: [...getIncludedStyles(theme), ...theme.styles],\n      // Map moduleId to includePriority\n      includePriority: getIncludePriority(theme.moduleId),\n    }))\n    // Sort by includePriority\n    .sort((themeA, themeB) => themeB.includePriority - themeA.includePriority);\n\n  if (themes.length > 0) {\n    return themes;\n  }\n  // No theme modules found, return the default module if it exists\n  return getAllThemes().filter((theme) => theme.moduleId === defaultModuleName);\n}\n\n/**\n * Check if the custom element type has themes applied.\n * @param {string} tagName\n * @returns {boolean}\n */\nfunction hasThemes(tagName) {\n  return classHasThemes(customElements.get(tagName));\n}\n\n/**\n * Check if the custom element type has themes applied.\n * @param {Function} elementClass\n * @returns {boolean}\n */\nfunction classHasThemes(elementClass) {\n  return elementClass && Object.prototype.hasOwnProperty.call(elementClass, '__themes');\n}\n\n/**\n * @polymerMixin\n * @mixes ThemePropertyMixin\n */\nexport const ThemableMixin = (superClass) =>\n  class VaadinThemableMixin extends ThemePropertyMixin(superClass) {\n    /**\n     * Covers PolymerElement based component styling\n     * @protected\n     */\n    static finalize() {\n      super.finalize();\n\n      // Make sure not to run the logic intended for PolymerElement when LitElement is used.\n      if (this.elementStyles) {\n        return;\n      }\n\n      const template = this.prototype._template;\n      if (!template || classHasThemes(this)) {\n        return;\n      }\n\n      addStylesToTemplate(this.getStylesForThis(), template);\n    }\n\n    /**\n     * Covers LitElement based component styling\n     *\n     * @protected\n     */\n    static finalizeStyles(styles) {\n      // The \"styles\" object originates from the \"static get styles()\" function of\n      // a LitElement based component. The theme styles are added after it\n      // so that they can override the component styles.\n      const themeStyles = this.getStylesForThis();\n      return styles ? [...super.finalizeStyles(styles), ...themeStyles] : themeStyles;\n    }\n\n    /**\n     * Get styles for the component type\n     *\n     * @private\n     */\n    static getStylesForThis() {\n      const parent = Object.getPrototypeOf(this.prototype);\n      const inheritedThemes = (parent ? parent.constructor.__themes : []) || [];\n      this.__themes = [...inheritedThemes, ...getThemes(this.is)];\n      const themeStyles = this.__themes.flatMap((theme) => theme.styles);\n      // Remove duplicates\n      return themeStyles.filter((style, index) => index === themeStyles.lastIndexOf(style));\n    }\n  };\n\nexport { themeRegistry as __themeRegistry };\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport './version.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst colorLight = css`\n  :host {\n    /* Text colors */\n    --material-body-text-color: var(--light-theme-text-color, rgba(0, 0, 0, 0.87));\n    --material-secondary-text-color: var(--light-theme-secondary-color, rgba(0, 0, 0, 0.54));\n    --material-disabled-text-color: var(--light-theme-disabled-color, rgba(0, 0, 0, 0.38));\n\n    /* Primary colors */\n    --material-primary-color: var(--primary-color, #6200ee);\n    --material-primary-contrast-color: var(--dark-theme-base-color, #fff);\n    --material-primary-text-color: var(--material-primary-color);\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #b00020);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--light-theme-background-color, #fff);\n    --material-secondary-background-color: var(--light-theme-secondary-background-color, #f5f5f5);\n    --material-disabled-color: rgba(0, 0, 0, 0.26);\n\n    /* Divider colors */\n    --material-divider-color: rgba(0, 0, 0, 0.12);\n\n    /* Undocumented internal properties (prefixed with three dashes) */\n\n    /* Text field tweaks */\n    --_material-text-field-input-line-background-color: initial;\n    --_material-text-field-input-line-opacity: initial;\n    --_material-text-field-input-line-hover-opacity: initial;\n    --_material-text-field-focused-label-opacity: initial;\n\n    /* Button tweaks */\n    --_material-button-raised-background-color: initial;\n    --_material-button-outline-color: initial;\n\n    /* Grid tweaks */\n    --_material-grid-row-hover-background-color: initial;\n\n    /* Split layout tweaks */\n    --_material-split-layout-splitter-background-color: initial;\n\n    background-color: var(--material-background-color);\n    color: var(--material-body-text-color);\n  }\n\n  [theme~='dark'] {\n    /* Text colors */\n    --material-body-text-color: var(--dark-theme-text-color, rgba(255, 255, 255, 1));\n    --material-secondary-text-color: var(--dark-theme-secondary-color, rgba(255, 255, 255, 0.7));\n    --material-disabled-text-color: var(--dark-theme-disabled-color, rgba(255, 255, 255, 0.5));\n\n    /* Primary colors */\n    --material-primary-color: var(--light-primary-color, #7e3ff2);\n    --material-primary-text-color: #b794f6;\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #de2839);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--dark-theme-background-color, #303030);\n    --material-secondary-background-color: var(--dark-theme-secondary-background-color, #3b3b3b);\n    --material-disabled-color: rgba(255, 255, 255, 0.3);\n\n    /* Divider colors */\n    --material-divider-color: rgba(255, 255, 255, 0.12);\n\n    /* Undocumented internal properties (prefixed with three dashes) */\n\n    /* Text field tweaks */\n    --_material-text-field-input-line-background-color: #fff;\n    --_material-text-field-input-line-opacity: 0.7;\n    --_material-text-field-input-line-hover-opacity: 1;\n    --_material-text-field-focused-label-opacity: 1;\n\n    /* Button tweaks */\n    --_material-button-raised-background-color: rgba(255, 255, 255, 0.08);\n    --_material-button-outline-color: rgba(255, 255, 255, 0.2);\n\n    /* Grid tweaks */\n    --_material-grid-row-hover-background-color: rgba(255, 255, 255, 0.08);\n    --_material-grid-row-selected-overlay-opacity: 0.16;\n\n    /* Split layout tweaks */\n    --_material-split-layout-splitter-background-color: rgba(255, 255, 255, 0.8);\n\n    background-color: var(--material-background-color);\n    color: var(--material-body-text-color);\n  }\n\n  a {\n    color: inherit;\n  }\n`;\n\nregisterStyles('', colorLight, { moduleId: 'material-color-light' });\n\nconst colorDark = css`\n  :host {\n    /* Text colors */\n    --material-body-text-color: var(--dark-theme-text-color, rgba(255, 255, 255, 1));\n    --material-secondary-text-color: var(--dark-theme-secondary-color, rgba(255, 255, 255, 0.7));\n    --material-disabled-text-color: var(--dark-theme-disabled-color, rgba(255, 255, 255, 0.5));\n\n    /* Primary colors */\n    --material-primary-color: var(--light-primary-color, #7e3ff2);\n    --material-primary-text-color: #b794f6;\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #de2839);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--dark-theme-background-color, #303030);\n    --material-secondary-background-color: var(--dark-theme-secondary-background-color, #3b3b3b);\n    --material-disabled-color: rgba(255, 255, 255, 0.3);\n\n    /* Divider colors */\n    --material-divider-color: rgba(255, 255, 255, 0.12);\n\n    /* Undocumented internal properties (prefixed with three dashes) */\n\n    /* Text field tweaks */\n    --_material-text-field-input-line-background-color: #fff;\n    --_material-text-field-input-line-opacity: 0.7;\n    --_material-text-field-input-line-hover-opacity: 1;\n    --_material-text-field-focused-label-opacity: 1;\n\n    /* Button tweaks */\n    --_material-button-raised-background-color: rgba(255, 255, 255, 0.08);\n    --_material-button-outline-color: rgba(255, 255, 255, 0.2);\n\n    /* Grid tweaks */\n    --_material-grid-row-hover-background-color: rgba(255, 255, 255, 0.08);\n    --_material-grid-row-selected-overlay-opacity: 0.16;\n\n    /* Split layout tweaks */\n    --_material-split-layout-splitter-background-color: rgba(255, 255, 255, 0.8);\n\n    background-color: var(--material-background-color);\n    color: var(--material-body-text-color);\n  }\n`;\n\nregisterStyles('', colorDark, { moduleId: 'material-color-dark' });\n\nconst colorBase = css`\n  :host {\n    /* Text colors */\n    --material-body-text-color: var(--light-theme-text-color, rgba(0, 0, 0, 0.87));\n    --material-secondary-text-color: var(--light-theme-secondary-color, rgba(0, 0, 0, 0.54));\n    --material-disabled-text-color: var(--light-theme-disabled-color, rgba(0, 0, 0, 0.38));\n\n    /* Primary colors */\n    --material-primary-color: var(--primary-color, #6200ee);\n    --material-primary-contrast-color: var(--dark-theme-base-color, #fff);\n    --material-primary-text-color: var(--material-primary-color);\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #b00020);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--light-theme-background-color, #fff);\n    --material-secondary-background-color: var(--light-theme-secondary-background-color, #f5f5f5);\n    --material-disabled-color: rgba(0, 0, 0, 0.26);\n\n    /* Divider colors */\n    --material-divider-color: rgba(0, 0, 0, 0.12);\n  }\n`;\n\nconst $tpl = document.createElement('template');\n$tpl.innerHTML = `<style>${colorBase.toString().replace(':host', 'html')}</style>`;\ndocument.head.appendChild($tpl.content);\n\nexport { colorBase, colorDark, colorLight };\n", "import '@vaadin/vaadin-material-styles/color.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-input-container',\n  css`\n    :host {\n      position: relative;\n      top: -0.2px; /* NOTE(platosha): Adjusts for wrong flex baseline in Chrome & Safari */\n      height: 32px;\n      padding-left: 0;\n      padding-right: 0;\n      background-color: transparent;\n      margin: 0;\n    }\n\n    :host::before,\n    :host::after {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      height: 1px;\n      transform-origin: 50% 0%;\n      background-color: var(--_material-text-field-input-line-background-color, #000);\n      opacity: var(--_material-text-field-input-line-opacity, 0.42);\n    }\n\n    :host::after {\n      background-color: var(--material-primary-color);\n      opacity: 0;\n      height: 2px;\n      bottom: 0;\n      transform: scaleX(0);\n      transition: opacity 0.175s;\n    }\n\n    ::slotted(:not([slot$='fix'])) {\n      padding: 8px 0;\n    }\n\n    ::slotted([slot$='fix']) {\n      color: var(--material-secondary-text-color);\n    }\n\n    /* Disabled */\n    :host([disabled]) {\n      color: var(--material-disabled-text-color);\n    }\n\n    :host([disabled])::before {\n      background-color: transparent;\n      background-image: linear-gradient(\n        90deg,\n        var(--_material-text-field-input-line-background-color, #000) 0,\n        var(--_material-text-field-input-line-background-color, #000) 2px,\n        transparent 2px\n      );\n      background-size: 4px 1px;\n      background-repeat: repeat-x;\n    }\n\n    :host([disabled]) ::slotted(:not([slot$='fix'])) {\n      color: var(--material-disabled-text-color);\n      -webkit-text-fill-color: var(--material-disabled-text-color);\n    }\n\n    /* Invalid */\n    :host([invalid])::after {\n      background-color: var(--material-error-color);\n      opacity: 1;\n      transform: none;\n      transition: transform 0.175s, opacity 0.175s;\n    }\n  `,\n  { moduleId: 'material-input-container' },\n);\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* eslint-disable no-unused-vars */\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is replaced by the munged name for object[property]\n * We cannot alias this function, so we have to use a small shim that has the same behavior when not compiling.\n *\n * @param {?} prop Property name\n * @param {*} obj Reference object\n * @return {string} Potentially renamed property name\n */\nwindow.JSCompiler_renameProperty = function(prop, obj) {\n  return prop;\n};\n/* eslint-enable */\n\nexport {};\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nlet CSS_URL_RX = /(url\\()([^)]*)(\\))/g;\nlet ABS_URL = /(^\\/[^\\/])|(^#)|(^[\\w-\\d]*:)/;\nlet workingURL;\nlet resolveDoc;\n/**\n * Resolves the given URL against the provided `baseUri'.\n *\n * Note that this function performs no resolution for URLs that start\n * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\n * URL resolution, use `window.URL`.\n *\n * @param {string} url Input URL to resolve\n * @param {?string=} baseURI Base URI to resolve the URL against\n * @return {string} resolved URL\n */\nexport function resolveUrl(url, baseURI) {\n  if (url && ABS_URL.test(url)) {\n    return url;\n  }\n  if (url === '//') {\n    return url;\n  }\n  // Lazy feature detection.\n  if (workingURL === undefined) {\n    workingURL = false;\n    try {\n      const u = new URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      workingURL = (u.href === 'http://a/c%20d');\n    } catch (e) {\n      // silently fail\n    }\n  }\n  if (!baseURI) {\n    baseURI = document.baseURI || window.location.href;\n  }\n  if (workingURL) {\n    try {\n      return (new URL(url, baseURI)).href;\n    } catch (e) {\n      // Bad url or baseURI structure. Do not attempt to resolve.\n      return url;\n    }\n  }\n  // Fallback to creating an anchor into a disconnected document.\n  if (!resolveDoc) {\n    resolveDoc = document.implementation.createHTMLDocument('temp');\n    resolveDoc.base = resolveDoc.createElement('base');\n    resolveDoc.head.appendChild(resolveDoc.base);\n    resolveDoc.anchor = resolveDoc.createElement('a');\n    resolveDoc.body.appendChild(resolveDoc.anchor);\n  }\n  resolveDoc.base.href = baseURI;\n  resolveDoc.anchor.href = url;\n  return resolveDoc.anchor.href || url;\n\n}\n\n/**\n * Resolves any relative URL's in the given CSS text against the provided\n * `ownerDocument`'s `baseURI`.\n *\n * @param {string} cssText CSS text to process\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Processed CSS text with resolved URL's\n */\nexport function resolveCss(cssText, baseURI) {\n  return cssText.replace(CSS_URL_RX, function(m, pre, url, post) {\n    return pre + '\\'' +\n      resolveUrl(url.replace(/[\"']/g, ''), baseURI) +\n      '\\'' + post;\n  });\n}\n\n/**\n * Returns a path from a given `url`. The path includes the trailing\n * `/` from the url.\n *\n * @param {string} url Input URL to transform\n * @return {string} resolved path\n */\nexport function pathFromUrl(url) {\n  return url.substring(0, url.lastIndexOf('/') + 1);\n}\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\nimport { pathFromUrl } from './resolve-url.js';\nexport const useShadow = !(window.ShadyDOM) || !(window.ShadyDOM.inUse);\nexport const useNativeCSSProperties = Boolean(!window.ShadyCSS || window.ShadyCSS.nativeCss);\nexport const useNativeCustomElements = !(window.customElements.polyfillWrapFlushCallback);\nexport const supportsAdoptingStyleSheets = useShadow &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replaceSync' in CSSStyleSheet.prototype) &&\n    // Since spec may change, feature detect exact API we need\n    (() => {\n      try {\n        const sheet = new CSSStyleSheet();\n        sheet.replaceSync('');\n        const host = document.createElement('div');\n        host.attachShadow({mode: 'open'});\n        host.shadowRoot.adoptedStyleSheets = [sheet];\n        return (host.shadowRoot.adoptedStyleSheets[0] === sheet);\n      } catch(e) {\n        return false;\n      }\n    })();\n\n/**\n * Globally settable property that is automatically assigned to\n * `ElementMixin` instances, useful for binding in templates to\n * make URL's relative to an application's root.  Defaults to the main\n * document URL, but can be overridden by users.  It may be useful to set\n * `rootPath` to provide a stable application mount path when\n * using client side routing.\n */\nexport let rootPath = window.Polymer && window.Polymer.rootPath ||\n  pathFromUrl(document.baseURI || window.location.href);\n\n/**\n * Sets the global rootPath property used by `ElementMixin` and\n * available via `rootPath`.\n *\n * @param {string} path The new root path\n * @return {void}\n */\nexport const setRootPath = function(path) {\n  rootPath = path;\n};\n\n/**\n * A global callback used to sanitize any value before inserting it into the DOM.\n * The callback signature is:\n *\n *  function sanitizeDOMValue(value, name, type, node) { ... }\n *\n * Where:\n *\n * `value` is the value to sanitize.\n * `name` is the name of an attribute or property (for example, href).\n * `type` indicates where the value is being inserted: one of property, attribute, or text.\n * `node` is the node where the value is being inserted.\n *\n * @type {(function(*,string,string,?Node):*)|undefined}\n */\nexport let sanitizeDOMValue =\n  window.Polymer && window.Polymer.sanitizeDOMValue || undefined;\n\n/**\n * Sets the global sanitizeDOMValue available via this module's exported\n * `sanitizeDOMValue` variable.\n *\n * @param {(function(*,string,string,?Node):*)|undefined} newSanitizeDOMValue the global sanitizeDOMValue callback\n * @return {void}\n */\nexport const setSanitizeDOMValue = function(newSanitizeDOMValue) {\n  sanitizeDOMValue = newSanitizeDOMValue;\n};\n\n/**\n * Gets sanitizeDOMValue, for environments that don't well support `export let`.\n *\n * @return {(function(*,string,string,?Node):*)|undefined} sanitizeDOMValue\n */\nexport const getSanitizeDOMValue = function() {\n  return sanitizeDOMValue;\n};\n\n/**\n * Globally settable property to make Polymer Gestures use passive TouchEvent listeners when recognizing gestures.\n * When set to `true`, gestures made from touch will not be able to prevent scrolling, allowing for smoother\n * scrolling performance.\n * Defaults to `false` for backwards compatibility.\n */\nexport let passiveTouchGestures =\n  window.Polymer && window.Polymer.setPassiveTouchGestures || false;\n\n/**\n * Sets `passiveTouchGestures` globally for all elements using Polymer Gestures.\n *\n * @param {boolean} usePassive enable or disable passive touch gestures globally\n * @return {void}\n */\nexport const setPassiveTouchGestures = function(usePassive) {\n  passiveTouchGestures = usePassive;\n};\n\n/**\n * Setting to ensure Polymer template evaluation only occurs based on tempates\n * defined in trusted script.  When true, `<dom-module>` re-registration is\n * disallowed, `<dom-bind>` is disabled, and `<dom-if>`/`<dom-repeat>`\n * templates will only evaluate in the context of a trusted element template.\n */\nexport let strictTemplatePolicy =\n  window.Polymer && window.Polymer.strictTemplatePolicy || false;\n\n/**\n * Sets `strictTemplatePolicy` globally for all elements\n *\n * @param {boolean} useStrictPolicy enable or disable strict template policy\n *   globally\n * @return {void}\n */\nexport const setStrictTemplatePolicy = function(useStrictPolicy) {\n  strictTemplatePolicy = useStrictPolicy;\n};\n\n/**\n * Setting to enable dom-module lookup from Polymer.Element.  By default,\n * templates must be defined in script using the `static get template()`\n * getter and the `html` tag function.  To enable legacy loading of templates\n * via dom-module, set this flag to true.\n */\nexport let allowTemplateFromDomModule =\n  window.Polymer && window.Polymer.allowTemplateFromDomModule || false;\n\n/**\n * Sets `lookupTemplateFromDomModule` globally for all elements\n *\n * @param {boolean} allowDomModule enable or disable template lookup\n *   globally\n * @return {void}\n */\nexport const setAllowTemplateFromDomModule = function(allowDomModule) {\n  allowTemplateFromDomModule = allowDomModule;\n};\n\n/**\n * Setting to skip processing style includes and re-writing urls in css styles.\n * Normally \"included\" styles are pulled into the element and all urls in styles\n * are re-written to be relative to the containing script url.\n * If no includes or relative urls are used in styles, these steps can be\n * skipped as an optimization.\n */\nexport let legacyOptimizations =\n  window.Polymer && window.Polymer.legacyOptimizations || false;\n\n/**\n * Sets `legacyOptimizations` globally for all elements to enable optimizations\n * when only legacy based elements are used.\n *\n * @param {boolean} useLegacyOptimizations enable or disable legacy optimizations\n * includes and url rewriting\n * @return {void}\n */\nexport const setLegacyOptimizations = function(useLegacyOptimizations) {\n  legacyOptimizations = useLegacyOptimizations;\n};\n\n/**\n * Setting to add warnings useful when migrating from Polymer 1.x to 2.x.\n */\nexport let legacyWarnings =\n  window.Polymer && window.Polymer.legacyWarnings || false;\n\n/**\n * Sets `legacyWarnings` globally for all elements to migration warnings.\n *\n * @param {boolean} useLegacyWarnings enable or disable warnings\n * @return {void}\n */\nexport const setLegacyWarnings = function(useLegacyWarnings) {\n  legacyWarnings = useLegacyWarnings;\n};\n\n/**\n * Setting to perform initial rendering synchronously when running under ShadyDOM.\n * This matches the behavior of Polymer 1.\n */\nexport let syncInitialRender =\n  window.Polymer && window.Polymer.syncInitialRender || false;\n\n/**\n * Sets `syncInitialRender` globally for all elements to enable synchronous\n * initial rendering.\n *\n * @param {boolean} useSyncInitialRender enable or disable synchronous initial\n * rendering globally.\n * @return {void}\n */\nexport const setSyncInitialRender = function(useSyncInitialRender) {\n  syncInitialRender = useSyncInitialRender;\n};\n\n/**\n * Setting to retain the legacy Polymer 1 behavior for multi-property\n * observers around undefined values. Observers and computed property methods\n * are not called until no argument is undefined.\n */\nexport let legacyUndefined =\n  window.Polymer && window.Polymer.legacyUndefined || false;\n\n/**\n * Sets `legacyUndefined` globally for all elements to enable legacy\n * multi-property behavior for undefined values.\n *\n * @param {boolean} useLegacyUndefined enable or disable legacy\n * multi-property behavior for undefined.\n * @return {void}\n */\nexport const setLegacyUndefined = function(useLegacyUndefined) {\n  legacyUndefined = useLegacyUndefined;\n};\n\n/**\n * Setting to ensure computed properties are computed in order to ensure\n * re-computation never occurs in a given turn.\n */\nexport let orderedComputed =\n  window.Polymer && window.Polymer.orderedComputed || false;\n\n/**\n * Sets `orderedComputed` globally for all elements to enable ordered computed\n * property computation.\n *\n * @param {boolean} useOrderedComputed enable or disable ordered computed effects\n * @return {void}\n */\nexport const setOrderedComputed = function(useOrderedComputed) {\n  orderedComputed = useOrderedComputed;\n};\n\n/**\n * Setting to cancel synthetic click events fired by older mobile browsers. Modern browsers\n * no longer fire synthetic click events, and the cancellation behavior can interfere\n * when programmatically clicking on elements.\n */\nexport let cancelSyntheticClickEvents = true;\n\n/**\n * Sets `setCancelSyntheticEvents` globally for all elements to cancel synthetic click events.\n *\n * @param {boolean} useCancelSyntheticClickEvents enable or disable cancelling synthetic\n * events\n * @return {void}\n */\nexport const setCancelSyntheticClickEvents = function(useCancelSyntheticClickEvents) {\n  cancelSyntheticClickEvents = useCancelSyntheticClickEvents;\n};\n\n/**\n * Setting to remove nested templates inside `dom-if` and `dom-repeat` as\n * part of element template parsing.  This is a performance optimization that\n * eliminates most of the tax of needing two elements due to the loss of\n * type-extended templates as a result of the V1 specification changes.\n */\nexport let removeNestedTemplates =\n  window.Polymer && window.Polymer.removeNestedTemplates || false;\n\n/**\n * Sets `removeNestedTemplates` globally, to eliminate nested templates\n * inside `dom-if` and `dom-repeat` as part of template parsing.\n *\n * @param {boolean} useRemoveNestedTemplates enable or disable removing nested\n *   templates during parsing\n * @return {void}\n */\nexport const setRemoveNestedTemplates = function(useRemoveNestedTemplates) {\n  removeNestedTemplates = useRemoveNestedTemplates;\n};\n\n/**\n * Setting to place `dom-if` elements in a performance-optimized mode that takes\n * advantage of lighter-weight host runtime template stamping to eliminate the\n * need for an intermediate Templatizer `TemplateInstance` to mange the nodes\n * stamped by `dom-if`.  Under this setting, any Templatizer-provided API's\n * such as `modelForElement` will not be available for nodes stamped by\n * `dom-if`.\n */\nexport let fastDomIf = window.Polymer && window.Polymer.fastDomIf || false;\n\n/**\n * Sets `fastDomIf` globally, to put `dom-if` in a performance-optimized mode.\n *\n * @param {boolean} useFastDomIf enable or disable `dom-if` fast-mode\n * @return {void}\n */\nexport const setFastDomIf = function(useFastDomIf) {\n  fastDomIf = useFastDomIf;\n};\n\n/**\n * Setting to disable `dom-change` and `rendered-item-count` events from\n * `dom-if` and `dom-repeat`. Users can opt back into `dom-change` events by\n * setting the `notify-dom-change` attribute (`notifyDomChange: true` property)\n * to `dom-if`/`don-repeat` instances.\n */\nexport let suppressTemplateNotifications =\n  window.Polymer && window.Polymer.suppressTemplateNotifications || false;\n\n/**\n * Sets `suppressTemplateNotifications` globally, to disable `dom-change` and\n * `rendered-item-count` events from `dom-if` and `dom-repeat`.\n *\n * @param {boolean} suppress enable or disable `suppressTemplateNotifications`\n * @return {void}\n */\nexport const setSuppressTemplateNotifications = function(suppress) {\n  suppressTemplateNotifications = suppress;\n};\n\n/**\n * Setting to disable use of dynamic attributes. This is an optimization\n * to avoid setting `observedAttributes`. Instead attributes are read\n * once at create time and set/removeAttribute are patched.\n */\nexport let legacyNoObservedAttributes =\n  window.Polymer && window.Polymer.legacyNoObservedAttributes || false;\n\n/**\n * Sets `legacyNoObservedAttributes` globally, to disable `observedAttributes`.\n *\n * @param {boolean} noObservedAttributes enable or disable `legacyNoObservedAttributes`\n * @return {void}\n */\nexport const setLegacyNoObservedAttributes = function(noObservedAttributes) {\n  legacyNoObservedAttributes = noObservedAttributes;\n};\n\n/**\n * Setting to enable use of `adoptedStyleSheets` for sharing style sheets\n * between component instances' shadow roots, if the app uses built Shady CSS\n * styles.\n */\nexport let useAdoptedStyleSheetsWithBuiltCSS =\n  window.Polymer && window.Polymer.useAdoptedStyleSheetsWithBuiltCSS || false;\n\n/**\n * Sets `useAdoptedStyleSheetsWithBuiltCSS` globally.\n *\n * @param {boolean} value enable or disable `useAdoptedStyleSheetsWithBuiltCSS`\n * @return {void}\n */\nexport const setUseAdoptedStyleSheetsWithBuiltCSS = function(value) {\n  useAdoptedStyleSheetsWithBuiltCSS = value;\n};\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\n// unique global id for deduping mixins.\nlet dedupeId = 0;\n\n/**\n * @constructor\n * @extends {Function}\n * @private\n */\nfunction MixinFunction(){}\n/** @type {(WeakMap | undefined)} */\nMixinFunction.prototype.__mixinApplications;\n/** @type {(Object | undefined)} */\nMixinFunction.prototype.__mixinSet;\n\n/* eslint-disable valid-jsdoc */\n/**\n * Wraps an ES6 class expression mixin such that the mixin is only applied\n * if it has not already been applied its base argument. Also memoizes mixin\n * applications.\n *\n * @template T\n * @param {T} mixin ES6 class expression mixin to wrap\n * @return {T}\n * @suppress {invalidCasts}\n */\nexport const dedupingMixin = function(mixin) {\n  let mixinApplications = /** @type {!MixinFunction} */(mixin).__mixinApplications;\n  if (!mixinApplications) {\n    mixinApplications = new WeakMap();\n    /** @type {!MixinFunction} */(mixin).__mixinApplications = mixinApplications;\n  }\n  // maintain a unique id for each mixin\n  let mixinDedupeId = dedupeId++;\n  function dedupingMixin(base) {\n    let baseSet = /** @type {!MixinFunction} */(base).__mixinSet;\n    if (baseSet && baseSet[mixinDedupeId]) {\n      return base;\n    }\n    let map = mixinApplications;\n    let extended = map.get(base);\n    if (!extended) {\n      extended = /** @type {!Function} */(mixin)(base);\n      map.set(base, extended);\n      // copy inherited mixin set from the extended class, or the base class\n      // NOTE: we avoid use of Set here because some browser (IE11)\n      // cannot extend a base Set via the constructor.\n      let mixinSet = Object.create(/** @type {!MixinFunction} */(extended).__mixinSet || baseSet || null);\n      mixinSet[mixinDedupeId] = true;\n      /** @type {!MixinFunction} */(extended).__mixinSet = mixinSet;\n    }\n    return extended;\n  }\n\n  return dedupingMixin;\n};\n/* eslint-enable valid-jsdoc */\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { resolveUrl, pathFromUrl } from '../utils/resolve-url.js';\nimport { strictTemplatePolicy } from '../utils/settings.js';\n\nlet modules = {};\nlet lcModules = {};\n/**\n * Sets a dom-module into the global registry by id.\n *\n * @param {string} id dom-module id\n * @param {DomModule} module dom-module instance\n * @return {void}\n */\nfunction setModule(id, module) {\n  // store id separate from lowercased id so that\n  // in all cases mixedCase id will stored distinctly\n  // and lowercase version is a fallback\n  modules[id] = lcModules[id.toLowerCase()] = module;\n}\n/**\n * Retrieves a dom-module from the global registry by id.\n *\n * @param {string} id dom-module id\n * @return {DomModule!} dom-module instance\n */\nfunction findModule(id) {\n  return modules[id] || lcModules[id.toLowerCase()];\n}\n\nfunction styleOutsideTemplateCheck(inst) {\n  if (inst.querySelector('style')) {\n    console.warn('dom-module %s has style outside template', inst.id);\n  }\n}\n\n/**\n * The `dom-module` element registers the dom it contains to the name given\n * by the module's id attribute. It provides a unified database of dom\n * accessible via its static `import` API.\n *\n * A key use case of `dom-module` is for providing custom element `<template>`s\n * via HTML imports that are parsed by the native HTML parser, that can be\n * relocated during a bundling pass and still looked up by `id`.\n *\n * Example:\n *\n *     <dom-module id=\"foo\">\n *       <img src=\"stuff.png\">\n *     </dom-module>\n *\n * Then in code in some other location that cannot access the dom-module above\n *\n *     let img = customElements.get('dom-module').import('foo', 'img');\n *\n * @customElement\n * @extends HTMLElement\n * @summary Custom element that provides a registry of relocatable DOM content\n *   by `id` that is agnostic to bundling.\n * @unrestricted\n */\nexport class DomModule extends HTMLElement {\n\n  /** @override */\n  static get observedAttributes() { return ['id']; }\n\n  /**\n   * Retrieves the element specified by the css `selector` in the module\n   * registered by `id`. For example, this.import('foo', 'img');\n   * @param {string} id The id of the dom-module in which to search.\n   * @param {string=} selector The css selector by which to find the element.\n   * @return {Element} Returns the element which matches `selector` in the\n   * module registered at the specified `id`.\n   *\n   * @export\n   * @nocollapse Referred to indirectly in style-gather.js\n   */\n  static import(id, selector) {\n    if (id) {\n      let m = findModule(id);\n      if (m && selector) {\n        return m.querySelector(selector);\n      }\n      return m;\n    }\n    return null;\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * @param {string} name Name of attribute.\n   * @param {?string} old Old value of attribute.\n   * @param {?string} value Current value of attribute.\n   * @param {?string} namespace Attribute namespace.\n   * @return {void}\n   * @override\n   */\n  attributeChangedCallback(name, old, value, namespace) {\n    if (old !== value) {\n      this.register();\n    }\n  }\n  /* eslint-enable no-unused-args */\n\n  /**\n   * The absolute URL of the original location of this `dom-module`.\n   *\n   * This value will differ from this element's `ownerDocument` in the\n   * following ways:\n   * - Takes into account any `assetpath` attribute added during bundling\n   *   to indicate the original location relative to the bundled location\n   * - Uses the HTMLImports polyfill's `importForElement` API to ensure\n   *   the path is relative to the import document's location since\n   *   `ownerDocument` is not currently polyfilled\n   */\n  get assetpath() {\n    // Don't override existing assetpath.\n    if (!this.__assetpath) {\n      // note: assetpath set via an attribute must be relative to this\n      // element's location; accommodate polyfilled HTMLImports\n      const owner = window.HTMLImports && HTMLImports.importForElement ?\n        HTMLImports.importForElement(this) || document : this.ownerDocument;\n      const url = resolveUrl(\n        this.getAttribute('assetpath') || '', owner.baseURI);\n      this.__assetpath = pathFromUrl(url);\n    }\n    return this.__assetpath;\n  }\n\n  /**\n   * Registers the dom-module at a given id. This method should only be called\n   * when a dom-module is imperatively created. For\n   * example, `document.createElement('dom-module').register('foo')`.\n   * @param {string=} id The id at which to register the dom-module.\n   * @return {void}\n   */\n  register(id) {\n    id = id || this.id;\n    if (id) {\n      // Under strictTemplatePolicy, reject and null out any re-registered\n      // dom-module since it is ambiguous whether first-in or last-in is trusted\n      if (strictTemplatePolicy && findModule(id) !== undefined) {\n        setModule(id, null);\n        throw new Error(`strictTemplatePolicy: dom-module ${id} re-registered`);\n      }\n      this.id = id;\n      setModule(id, this);\n      styleOutsideTemplateCheck(this);\n    }\n  }\n}\n\nDomModule.prototype['modules'] = modules;\n\ncustomElements.define('dom-module', DomModule);\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Module with utilities for collection CSS text from `<templates>`, external\n * stylesheets, and `dom-module`s.\n *\n * @summary Module with utilities for collection CSS text from various sources.\n */\n\nimport { DomModule } from '../elements/dom-module.js';\nimport { resolveCss } from './resolve-url.js';\n\nconst MODULE_STYLE_LINK_SELECTOR = 'link[rel=import][type~=css]';\nconst INCLUDE_ATTR = 'include';\nconst SHADY_UNSCOPED_ATTR = 'shady-unscoped';\n\n/**\n * @param {string} moduleId .\n * @return {?DomModule} .\n */\nfunction importModule(moduleId) {\n  return /** @type {?DomModule} */(DomModule.import(moduleId));\n}\n\nfunction styleForImport(importDoc) {\n  // NOTE: polyfill affordance.\n  // under the HTMLImports polyfill, there will be no 'body',\n  // but the import pseudo-doc can be used directly.\n  let container = importDoc.body ? importDoc.body : importDoc;\n  const importCss = resolveCss(container.textContent,\n    importDoc.baseURI);\n  const style = document.createElement('style');\n  style.textContent = importCss;\n  return style;\n}\n\n/** @typedef {{assetpath: string}} */\nlet templateWithAssetPath; // eslint-disable-line no-unused-vars\n\n\n/**\n * Returns a list of <style> elements in a space-separated list of `dom-module`s.\n *\n * @function\n * @param {string} moduleIds List of dom-module id's within which to\n * search for css.\n * @return {!Array<!HTMLStyleElement>} Array of contained <style> elements\n */\nexport function stylesFromModules(moduleIds) {\n const modules = moduleIds.trim().split(/\\s+/);\n const styles = [];\n for (let i=0; i < modules.length; i++) {\n   styles.push(...stylesFromModule(modules[i]));\n }\n return styles;\n}\n\n/**\n * Returns a list of <style> elements in a given `dom-module`.\n * Styles in a `dom-module` can come either from `<style>`s within the\n * first `<template>`, or else from one or more\n * `<link rel=\"import\" type=\"css\">` links outside the template.\n *\n * @param {string} moduleId dom-module id to gather styles from\n * @return {!Array<!HTMLStyleElement>} Array of contained styles.\n */\nexport function stylesFromModule(moduleId) {\n  const m = importModule(moduleId);\n\n  if (!m) {\n    console.warn('Could not find style data in module named', moduleId);\n    return [];\n  }\n\n  if (m._styles === undefined) {\n    const styles = [];\n    // module imports: <link rel=\"import\" type=\"css\">\n    styles.push(..._stylesFromModuleImports(m));\n    // include css from the first template in the module\n    const template = /** @type {?HTMLTemplateElement} */(\n        m.querySelector('template'));\n    if (template) {\n      styles.push(...stylesFromTemplate(template,\n        /** @type {templateWithAssetPath} */(m).assetpath));\n    }\n\n    m._styles = styles;\n  }\n\n  return m._styles;\n}\n\n/**\n * Returns the `<style>` elements within a given template.\n *\n * @param {!HTMLTemplateElement} template Template to gather styles from\n * @param {string=} baseURI baseURI for style content\n * @return {!Array<!HTMLStyleElement>} Array of styles\n */\nexport function stylesFromTemplate(template, baseURI) {\n  if (!template._styles) {\n    const styles = [];\n    // if element is a template, get content from its .content\n    const e$ = template.content.querySelectorAll('style');\n    for (let i=0; i < e$.length; i++) {\n      let e = e$[i];\n      // support style sharing by allowing styles to \"include\"\n      // other dom-modules that contain styling\n      let include = e.getAttribute(INCLUDE_ATTR);\n      if (include) {\n        styles.push(...stylesFromModules(include).filter(function(item, index, self) {\n          return self.indexOf(item) === index;\n        }));\n      }\n      if (baseURI) {\n        e.textContent =\n            resolveCss(e.textContent, /** @type {string} */ (baseURI));\n      }\n      styles.push(e);\n    }\n    template._styles = styles;\n  }\n  return template._styles;\n}\n\n/**\n * Returns a list of <style> elements  from stylesheets loaded via `<link rel=\"import\" type=\"css\">` links within the specified `dom-module`.\n *\n * @param {string} moduleId Id of `dom-module` to gather CSS from\n * @return {!Array<!HTMLStyleElement>} Array of contained styles.\n */\nexport function stylesFromModuleImports(moduleId) {\n let m = importModule(moduleId);\n return m ? _stylesFromModuleImports(m) : [];\n}\n\n/**\n * @param {!HTMLElement} module dom-module element that could contain `<link rel=\"import\" type=\"css\">` styles\n * @return {!Array<!HTMLStyleElement>} Array of contained styles\n */\nfunction _stylesFromModuleImports(module) {\n  const styles = [];\n  const p$ = module.querySelectorAll(MODULE_STYLE_LINK_SELECTOR);\n  for (let i=0; i < p$.length; i++) {\n    let p = p$[i];\n    if (p.import) {\n      const importDoc = p.import;\n      const unscoped = p.hasAttribute(SHADY_UNSCOPED_ATTR);\n      if (unscoped && !importDoc._unscopedStyle) {\n        const style = styleForImport(importDoc);\n        style.setAttribute(SHADY_UNSCOPED_ATTR, '');\n        importDoc._unscopedStyle = style;\n      } else if (!importDoc._style) {\n        importDoc._style = styleForImport(importDoc);\n      }\n      styles.push(unscoped ? importDoc._unscopedStyle : importDoc._style);\n    }\n  }\n  return styles;\n}\n\n/**\n *\n * Returns CSS text of styles in a space-separated list of `dom-module`s.\n * Note: This method is deprecated, use `stylesFromModules` instead.\n *\n * @deprecated\n * @param {string} moduleIds List of dom-module id's within which to\n * search for css.\n * @return {string} Concatenated CSS content from specified `dom-module`s\n */\nexport function cssFromModules(moduleIds) {\n let modules = moduleIds.trim().split(/\\s+/);\n let cssText = '';\n for (let i=0; i < modules.length; i++) {\n   cssText += cssFromModule(modules[i]);\n }\n return cssText;\n}\n\n/**\n * Returns CSS text of styles in a given `dom-module`.  CSS in a `dom-module`\n * can come either from `<style>`s within the first `<template>`, or else\n * from one or more `<link rel=\"import\" type=\"css\">` links outside the\n * template.\n *\n * Any `<styles>` processed are removed from their original location.\n * Note: This method is deprecated, use `styleFromModule` instead.\n *\n * @deprecated\n * @param {string} moduleId dom-module id to gather styles from\n * @return {string} Concatenated CSS content from specified `dom-module`\n */\nexport function cssFromModule(moduleId) {\n  let m = importModule(moduleId);\n  if (m && m._cssText === undefined) {\n    // module imports: <link rel=\"import\" type=\"css\">\n    let cssText = _cssFromModuleImports(m);\n    // include css from the first template in the module\n    let t = /** @type {?HTMLTemplateElement} */(m.querySelector('template'));\n    if (t) {\n      cssText += cssFromTemplate(t,\n        /** @type {templateWithAssetPath} */(m).assetpath);\n    }\n    m._cssText = cssText || null;\n  }\n  if (!m) {\n    console.warn('Could not find style data in module named', moduleId);\n  }\n  return m && m._cssText || '';\n}\n\n/**\n * Returns CSS text of `<styles>` within a given template.\n *\n * Any `<styles>` processed are removed from their original location.\n * Note: This method is deprecated, use `styleFromTemplate` instead.\n *\n * @deprecated\n * @param {!HTMLTemplateElement} template Template to gather styles from\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Concatenated CSS content from specified template\n */\nexport function cssFromTemplate(template, baseURI) {\n  let cssText = '';\n  const e$ = stylesFromTemplate(template, baseURI);\n  // if element is a template, get content from its .content\n  for (let i=0; i < e$.length; i++) {\n    let e = e$[i];\n    if (e.parentNode) {\n      e.parentNode.removeChild(e);\n    }\n    cssText += e.textContent;\n  }\n  return cssText;\n}\n\n/**\n * Returns CSS text from stylesheets loaded via `<link rel=\"import\" type=\"css\">`\n * links within the specified `dom-module`.\n *\n * Note: This method is deprecated, use `stylesFromModuleImports` instead.\n *\n * @deprecated\n *\n * @param {string} moduleId Id of `dom-module` to gather CSS from\n * @return {string} Concatenated CSS content from links in specified `dom-module`\n */\nexport function cssFromModuleImports(moduleId) {\n  let m = importModule(moduleId);\n  return m ? _cssFromModuleImports(m) : '';\n}\n\n/**\n * @deprecated\n * @param {!HTMLElement} module dom-module element that could contain `<link rel=\"import\" type=\"css\">` styles\n * @return {string} Concatenated CSS content from links in the dom-module\n */\nfunction _cssFromModuleImports(module) {\n  let cssText = '';\n  let styles = _stylesFromModuleImports(module);\n  for (let i=0; i < styles.length; i++) {\n    cssText += styles[i].textContent;\n  }\n  return cssText;\n}\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* eslint-disable valid-jsdoc */\n/**\n * Node wrapper to ensure ShadowDOM safe operation regardless of polyfill\n * presence or mode. Note that with the introduction of `ShadyDOM.noPatch`,\n * a node wrapper must be used to access ShadowDOM API.\n * This is similar to using `Polymer.dom` but relies exclusively\n * on the presence of the ShadyDOM polyfill rather than requiring the loading\n * of legacy (Polymer.dom) API.\n * @type {function(Node):Node}\n */\nexport const wrap = (window['ShadyDOM'] && window['ShadyDOM']['noPatch'] && window['ShadyDOM']['wrap']) ?\n  window['ShadyDOM']['wrap'] :\n  (window['ShadyDOM'] ? (n) => ShadyDOM['patch'](n) : (n) => n);\n\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\n/**\n * Module with utilities for manipulating structured data path strings.\n *\n * @summary Module with utilities for manipulating structured data path strings.\n */\n\n/**\n * Returns true if the given string is a structured data path (has dots).\n *\n * Example:\n *\n * ```\n * isPath('foo.bar.baz') // true\n * isPath('foo')         // false\n * ```\n *\n * @param {string} path Path string\n * @return {boolean} True if the string contained one or more dots\n */\nexport function isPath(path) {\n  return path.indexOf('.') >= 0;\n}\n\n/**\n * Returns the root property name for the given path.\n *\n * Example:\n *\n * ```\n * root('foo.bar.baz') // 'foo'\n * root('foo')         // 'foo'\n * ```\n *\n * @param {string} path Path string\n * @return {string} Root property name\n */\nexport function root(path) {\n  let dotIndex = path.indexOf('.');\n  if (dotIndex === -1) {\n    return path;\n  }\n  return path.slice(0, dotIndex);\n}\n\n/**\n * Given `base` is `foo.bar`, `foo` is an ancestor, `foo.bar` is not\n * Returns true if the given path is an ancestor of the base path.\n *\n * Example:\n *\n * ```\n * isAncestor('foo.bar', 'foo')         // true\n * isAncestor('foo.bar', 'foo.bar')     // false\n * isAncestor('foo.bar', 'foo.bar.baz') // false\n * ```\n *\n * @param {string} base Path string to test against.\n * @param {string} path Path string to test.\n * @return {boolean} True if `path` is an ancestor of `base`.\n */\nexport function isAncestor(base, path) {\n  //     base.startsWith(path + '.');\n  return base.indexOf(path + '.') === 0;\n}\n\n/**\n * Given `base` is `foo.bar`, `foo.bar.baz` is an descendant\n *\n * Example:\n *\n * ```\n * isDescendant('foo.bar', 'foo.bar.baz') // true\n * isDescendant('foo.bar', 'foo.bar')     // false\n * isDescendant('foo.bar', 'foo')         // false\n * ```\n *\n * @param {string} base Path string to test against.\n * @param {string} path Path string to test.\n * @return {boolean} True if `path` is a descendant of `base`.\n */\nexport function isDescendant(base, path) {\n  //     path.startsWith(base + '.');\n  return path.indexOf(base + '.') === 0;\n}\n\n/**\n * Replaces a previous base path with a new base path, preserving the\n * remainder of the path.\n *\n * User must ensure `path` has a prefix of `base`.\n *\n * Example:\n *\n * ```\n * translate('foo.bar', 'zot', 'foo.bar.baz') // 'zot.baz'\n * ```\n *\n * @param {string} base Current base string to remove\n * @param {string} newBase New base string to replace with\n * @param {string} path Path to translate\n * @return {string} Translated string\n */\nexport function translate(base, newBase, path) {\n  return newBase + path.slice(base.length);\n}\n\n/**\n * @param {string} base Path string to test against\n * @param {string} path Path string to test\n * @return {boolean} True if `path` is equal to `base`\n */\nexport function matches(base, path) {\n  return (base === path) ||\n         isAncestor(base, path) ||\n         isDescendant(base, path);\n}\n\n/**\n * Converts array-based paths to flattened path.  String-based paths\n * are returned as-is.\n *\n * Example:\n *\n * ```\n * normalize(['foo.bar', 0, 'baz'])  // 'foo.bar.0.baz'\n * normalize('foo.bar.0.baz')        // 'foo.bar.0.baz'\n * ```\n *\n * @param {string | !Array<string|number>} path Input path\n * @return {string} Flattened path\n */\nexport function normalize(path) {\n  if (Array.isArray(path)) {\n    let parts = [];\n    for (let i=0; i<path.length; i++) {\n      let args = path[i].toString().split('.');\n      for (let j=0; j<args.length; j++) {\n        parts.push(args[j]);\n      }\n    }\n    return parts.join('.');\n  } else {\n    return path;\n  }\n}\n\n/**\n * Splits a path into an array of property names. Accepts either arrays\n * of path parts or strings.\n *\n * Example:\n *\n * ```\n * split(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\n * split('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n * ```\n *\n * @param {string | !Array<string|number>} path Input path\n * @return {!Array<string>} Array of path parts\n * @suppress {checkTypes}\n */\nexport function split(path) {\n  if (Array.isArray(path)) {\n    return normalize(path).split('.');\n  }\n  return path.toString().split('.');\n}\n\n/**\n * Reads a value from a path.  If any sub-property in the path is `undefined`,\n * this method returns `undefined` (will never throw.\n *\n * @param {Object} root Object from which to dereference path from\n * @param {string | !Array<string|number>} path Path to read\n * @param {Object=} info If an object is provided to `info`, the normalized\n *  (flattened) path will be set to `info.path`.\n * @return {*} Value at path, or `undefined` if the path could not be\n *  fully dereferenced.\n */\nexport function get(root, path, info) {\n  let prop = root;\n  let parts = split(path);\n  // Loop over path parts[0..n-1] and dereference\n  for (let i=0; i<parts.length; i++) {\n    if (!prop) {\n      return;\n    }\n    let part = parts[i];\n    prop = prop[part];\n  }\n  if (info) {\n    info.path = parts.join('.');\n  }\n  return prop;\n}\n\n/**\n * Sets a value to a path.  If any sub-property in the path is `undefined`,\n * this method will no-op.\n *\n * @param {Object} root Object from which to dereference path from\n * @param {string | !Array<string|number>} path Path to set\n * @param {*} value Value to set to path\n * @return {string | undefined} The normalized version of the input path\n */\nexport function set(root, path, value) {\n  let prop = root;\n  let parts = split(path);\n  let last = parts[parts.length-1];\n  if (parts.length > 1) {\n    // Loop over path parts[0..n-2] and dereference\n    for (let i=0; i<parts.length-1; i++) {\n      let part = parts[i];\n      prop = prop[part];\n      if (!prop) {\n        return;\n      }\n    }\n    // Set value to object at end of path\n    prop[last] = value;\n  } else {\n    // Simple property set\n    prop[path] = value;\n  }\n  return parts.join('.');\n}\n\n/**\n * Returns true if the given string is a structured data path (has dots).\n *\n * This function is deprecated.  Use `isPath` instead.\n *\n * Example:\n *\n * ```\n * isDeep('foo.bar.baz') // true\n * isDeep('foo')         // false\n * ```\n *\n * @deprecated\n * @param {string} path Path string\n * @return {boolean} True if the string contained one or more dots\n */\nexport const isDeep = isPath;\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nconst caseMap = {};\nconst DASH_TO_CAMEL = /-[a-z]/g;\nconst CAMEL_TO_DASH = /([A-Z])/g;\n\n/**\n * @fileoverview Module with utilities for converting between \"dash-case\" and\n * \"camelCase\" identifiers.\n */\n\n/**\n * Converts \"dash-case\" identifier (e.g. `foo-bar-baz`) to \"camelCase\"\n * (e.g. `fooBarBaz`).\n *\n * @param {string} dash Dash-case identifier\n * @return {string} Camel-case representation of the identifier\n */\nexport function dashToCamelCase(dash) {\n  return caseMap[dash] || (\n    caseMap[dash] = dash.indexOf('-') < 0 ? dash : dash.replace(DASH_TO_CAMEL,\n      (m) => m[1].toUpperCase()\n    )\n  );\n}\n\n/**\n * Converts \"camelCase\" identifier (e.g. `fooBarBaz`) to \"dash-case\"\n * (e.g. `foo-bar-baz`).\n *\n * @param {string} camel Camel-case identifier\n * @return {string} Dash-case representation of the identifier\n */\nexport function camelToDashCase(camel) {\n  return caseMap[camel] || (\n    caseMap[camel] = camel.replace(CAMEL_TO_DASH, '-$1').toLowerCase()\n  );\n}\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @fileoverview\n *\n * This module provides a number of strategies for enqueuing asynchronous\n * tasks. Each sub-module provides a standard `run(fn)` interface that returns a\n * handle, and a `cancel(handle)` interface for canceling async tasks before\n * they run.\n *\n * @summary Module that provides a number of strategies for enqueuing\n * asynchronous tasks.\n */\n\nimport './boot.js';\n\n// Microtask implemented using Mutation Observer\nlet microtaskCurrHandle = 0;\nlet microtaskLastHandle = 0;\nlet microtaskCallbacks = [];\nlet microtaskNodeContent = 0;\nlet microtaskScheduled = false;\nlet microtaskNode = document.createTextNode('');\nnew window.MutationObserver(microtaskFlush).observe(microtaskNode, {characterData: true});\n\nfunction microtaskFlush() {\n  microtaskScheduled = false;\n  const len = microtaskCallbacks.length;\n  for (let i = 0; i < len; i++) {\n    let cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(() => { throw e; });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\n\n/**\n * Async interface wrapper around `setTimeout`.\n *\n * @namespace\n * @summary Async interface wrapper around `setTimeout`.\n */\nconst timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof timeOut\n   * @param {number=} delay Time to wait before calling callbacks in ms\n   * @return {!AsyncInterface} An async timeout interface\n   */\n  after(delay) {\n    return {\n      run(fn) { return window.setTimeout(fn, delay); },\n      cancel(handle) {\n        window.clearTimeout(handle);\n      }\n    };\n  },\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof timeOut\n   * @param {!Function} fn Callback to run\n   * @param {number=} delay Delay in milliseconds\n   * @return {number} Handle used for canceling task\n   */\n  run(fn, delay) {\n    return window.setTimeout(fn, delay);\n  },\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.clearTimeout(handle);\n  }\n};\nexport {timeOut};\n\n/**\n * Async interface wrapper around `requestAnimationFrame`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestAnimationFrame`.\n */\nconst animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof animationFrame\n   * @param {function(number):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestAnimationFrame(fn);\n  },\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof animationFrame\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelAnimationFrame(handle);\n  }\n};\nexport {animationFrame};\n\n/**\n * Async interface wrapper around `requestIdleCallback`.  Falls back to\n * `setTimeout` on browsers that do not support `requestIdleCallback`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestIdleCallback`.\n */\nconst idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof idlePeriod\n   * @param {function(!IdleDeadline):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestIdleCallback ?\n      window.requestIdleCallback(fn) :\n      window.setTimeout(fn, 16);\n  },\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelIdleCallback ?\n      window.cancelIdleCallback(handle) :\n      window.clearTimeout(handle);\n  }\n};\nexport {idlePeriod};\n\n/**\n * Async interface for enqueuing callbacks that run at microtask timing.\n *\n * Note that microtask timing is achieved via a single `MutationObserver`,\n * and thus callbacks enqueued with this API will all run in a single\n * batch, and not interleaved with other microtasks such as promises.\n * Promises are avoided as an implementation choice for the time being\n * due to Safari bugs that cause Promises to lack microtask guarantees.\n *\n * @namespace\n * @summary Async interface for enqueuing callbacks that run at microtask\n *   timing.\n */\nconst microTask = {\n\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof microTask\n   * @param {!Function=} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(callback) {\n    if (!microtaskScheduled) {\n      microtaskScheduled = true;\n      microtaskNode.textContent = microtaskNodeContent++;\n    }\n    microtaskCallbacks.push(callback);\n    return microtaskCurrHandle++;\n  },\n\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    const idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error('invalid async handle: ' + handle);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  }\n\n};\nexport {microTask};\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { microTask } from '../utils/async.js';\nimport { wrap } from '../utils/wrap.js';\n\n/** @const {!AsyncInterface} */\nconst microtask = microTask;\n\n/**\n * Element class mixin that provides basic meta-programming for creating one\n * or more property accessors (getter/setter pair) that enqueue an async\n * (batched) `_propertiesChanged` callback.\n *\n * For basic usage of this mixin, call `MyClass.createProperties(props)`\n * once at class definition time to create property accessors for properties\n * named in props, implement `_propertiesChanged` to react as desired to\n * property changes, and implement `static get observedAttributes()` and\n * include lowercase versions of any property names that should be set from\n * attributes. Last, call `this._enableProperties()` in the element's\n * `connectedCallback` to enable the accessors.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin for reacting to property changes from\n *   generated property accessors.\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const PropertiesChanged = dedupingMixin(\n    /**\n     * @template T\n     * @param {function(new:T)} superClass Class to apply mixin to.\n     * @return {function(new:T)} superClass with mixin applied.\n     */\n    (superClass) => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertiesChanged}\n   * @unrestricted\n   */\n  class PropertiesChanged extends superClass {\n\n    /**\n     * Creates property accessors for the given property names.\n     * @param {!Object} props Object whose keys are names of accessors.\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createProperties(props) {\n      const proto = this.prototype;\n      for (let prop in props) {\n        // don't stomp an existing accessor\n        if (!(prop in proto)) {\n          proto._createPropertyAccessor(prop);\n        }\n      }\n    }\n\n    /**\n     * Returns an attribute name that corresponds to the given property.\n     * The attribute name is the lowercased property name. Override to\n     * customize this mapping.\n     * @param {string} property Property to convert\n     * @return {string} Attribute name corresponding to the given property.\n     *\n     * @protected\n     * @nocollapse\n     */\n    static attributeNameForProperty(property) {\n      return property.toLowerCase();\n    }\n\n    /**\n     * Override point to provide a type to which to deserialize a value to\n     * a given property.\n     * @param {string} name Name of property\n     *\n     * @protected\n     * @nocollapse\n     */\n    static typeForProperty(name) { } //eslint-disable-line no-unused-vars\n\n    /**\n     * Creates a setter/getter pair for the named property with its own\n     * local storage.  The getter returns the value in the local storage,\n     * and the setter calls `_setProperty`, which updates the local storage\n     * for the property and enqueues a `_propertiesChanged` callback.\n     *\n     * This method may be called on a prototype or an instance.  Calling\n     * this method may overwrite a property value that already exists on\n     * the prototype/instance by creating the accessor.\n     *\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created; the\n     *   protected `_setProperty` function must be used to set the property\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _createPropertyAccessor(property, readOnly) {\n      this._addPropertyToAttributeMap(property);\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('__dataHasAccessor', this))) {\n        this.__dataHasAccessor = Object.assign({}, this.__dataHasAccessor);\n      }\n      if (!this.__dataHasAccessor[property]) {\n        this.__dataHasAccessor[property] = true;\n        this._definePropertyAccessor(property, readOnly);\n      }\n    }\n\n    /**\n     * Adds the given `property` to a map matching attribute names\n     * to property names, using `attributeNameForProperty`. This map is\n     * used when deserializing attribute values to properties.\n     *\n     * @param {string} property Name of the property\n     * @override\n     */\n    _addPropertyToAttributeMap(property) {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('__dataAttributes', this))) {\n        this.__dataAttributes = Object.assign({}, this.__dataAttributes);\n      }\n      // This check is technically not correct; it's an optimization that\n      // assumes that if a _property_ name is already in the map (note this is\n      // an attr->property map), the property mapped directly to the attribute\n      // and it has already been mapped.  This would fail if\n      // `attributeNameForProperty` were overridden such that this was not the\n      // case.\n      let attr = this.__dataAttributes[property];\n      if (!attr) {\n        attr = this.constructor.attributeNameForProperty(property);\n        this.__dataAttributes[attr] = property;\n      }\n      return attr;\n    }\n\n    /**\n     * Defines a property accessor for the given property.\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created\n     * @return {void}\n     * @override\n     */\n     _definePropertyAccessor(property, readOnly) {\n      Object.defineProperty(this, property, {\n        /* eslint-disable valid-jsdoc */\n        /** @this {PropertiesChanged} */\n        get() {\n          // Inline for perf instead of using `_getProperty`\n          return this.__data[property];\n        },\n        /** @this {PropertiesChanged} */\n        set: readOnly ? function () {} : function (value) {\n          // Inline for perf instead of using `_setProperty`\n          if (this._setPendingProperty(property, value, true)) {\n            this._invalidateProperties();\n          }\n        }\n        /* eslint-enable */\n      });\n    }\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      this.__dataEnabled = false;\n      this.__dataReady = false;\n      this.__dataInvalid = false;\n      this.__data = {};\n      this.__dataPending = null;\n      this.__dataOld = null;\n      this.__dataInstanceProps = null;\n      /** @type {number} */\n      // NOTE: used to track re-entrant calls to `_flushProperties`\n      this.__dataCounter = 0;\n      this.__serializing = false;\n      this._initializeProperties();\n    }\n\n    /**\n     * Lifecycle callback called when properties are enabled via\n     * `_enableProperties`.\n     *\n     * Users may override this function to implement behavior that is\n     * dependent on the element having its property data initialized, e.g.\n     * from defaults (initialized from `constructor`, `_initializeProperties`),\n     * `attributeChangedCallback`, or values propagated from host e.g. via\n     * bindings.  `super.ready()` must be called to ensure the data system\n     * becomes enabled.\n     *\n     * @return {void}\n     * @public\n     * @override\n     */\n    ready() {\n      this.__dataReady = true;\n      this._flushProperties();\n    }\n\n    /**\n     * Initializes the local storage for property accessors.\n     *\n     * Provided as an override point for performing any setup work prior\n     * to initializing the property accessor system.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeProperties() {\n      // Capture instance properties; these will be set into accessors\n      // during first flush. Don't set them here, since we want\n      // these to overwrite defaults/constructor assignments\n      for (let p in this.__dataHasAccessor) {\n        if (this.hasOwnProperty(p)) {\n          this.__dataInstanceProps = this.__dataInstanceProps || {};\n          this.__dataInstanceProps[p] = this[p];\n          delete this[p];\n        }\n      }\n    }\n\n    /**\n     * Called at ready time with bag of instance properties that overwrote\n     * accessors when the element upgraded.\n     *\n     * The default implementation sets these properties back into the\n     * setter at ready time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeInstanceProperties(props) {\n      Object.assign(this, props);\n    }\n\n    /**\n     * Updates the local storage for a property (via `_setPendingProperty`)\n     * and enqueues a `_proeprtiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Returns the value for the given property.\n     * @param {string} property Name of property\n     * @return {*} Value for the given property\n     * @protected\n     * @override\n     */\n    _getProperty(property) {\n      return this.__data[property];\n    }\n\n    /* eslint-disable no-unused-vars */\n    /**\n     * Updates the local storage for a property, records the previous value,\n     * and adds it to the set of \"pending changes\" that will be passed to the\n     * `_propertiesChanged` callback.  This method does not enqueue the\n     * `_propertiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @param {boolean=} ext Not used here; affordance for closure\n     * @return {boolean} Returns true if the property changed\n     * @protected\n     * @override\n     */\n    _setPendingProperty(property, value, ext) {\n      let old = this.__data[property];\n      let changed = this._shouldPropertyChange(property, value, old);\n      if (changed) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (this.__dataOld && !(property in this.__dataOld)) {\n          this.__dataOld[property] = old;\n        }\n        this.__data[property] = value;\n        this.__dataPending[property] = value;\n      }\n      return changed;\n    }\n    /* eslint-enable */\n\n    /**\n     * @param {string} property Name of the property\n     * @return {boolean} Returns true if the property is pending.\n     */\n    _isPropertyPending(property) {\n      return !!(this.__dataPending && this.__dataPending.hasOwnProperty(property));\n    }\n\n    /**\n     * Marks the properties as invalid, and enqueues an async\n     * `_propertiesChanged` callback.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _invalidateProperties() {\n      if (!this.__dataInvalid && this.__dataReady) {\n        this.__dataInvalid = true;\n        microtask.run(() => {\n          if (this.__dataInvalid) {\n            this.__dataInvalid = false;\n            this._flushProperties();\n          }\n        });\n      }\n    }\n\n    /**\n     * Call to enable property accessor processing. Before this method is\n     * called accessor values will be set but side effects are\n     * queued. When called, any pending side effects occur immediately.\n     * For elements, generally `connectedCallback` is a normal spot to do so.\n     * It is safe to call this method multiple times as it only turns on\n     * property accessors once.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _enableProperties() {\n      if (!this.__dataEnabled) {\n        this.__dataEnabled = true;\n        if (this.__dataInstanceProps) {\n          this._initializeInstanceProperties(this.__dataInstanceProps);\n          this.__dataInstanceProps = null;\n        }\n        this.ready();\n      }\n    }\n\n    /**\n     * Calls the `_propertiesChanged` callback with the current set of\n     * pending changes (and old values recorded when pending changes were\n     * set), and resets the pending set of changes. Generally, this method\n     * should not be called in user code.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _flushProperties() {\n      this.__dataCounter++;\n      const props = this.__data;\n      const changedProps = this.__dataPending;\n      const old = this.__dataOld;\n      if (this._shouldPropertiesChange(props, changedProps, old)) {\n        this.__dataPending = null;\n        this.__dataOld = null;\n        this._propertiesChanged(props, changedProps, old);\n      }\n      this.__dataCounter--;\n    }\n\n    /**\n     * Called in `_flushProperties` to determine if `_propertiesChanged`\n     * should be called. The default implementation returns true if\n     * properties are pending. Override to customize when\n     * `_propertiesChanged` is called.\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {?Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {?Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {boolean} true if changedProps is truthy\n     * @override\n     */\n    _shouldPropertiesChange(currentProps, changedProps, oldProps) { // eslint-disable-line no-unused-vars\n      return Boolean(changedProps);\n    }\n\n    /**\n     * Callback called when any properties with accessors created via\n     * `_createPropertyAccessor` have been set.\n     *\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {?Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {?Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) { // eslint-disable-line no-unused-vars\n    }\n\n    /**\n     * Method called to determine whether a property value should be\n     * considered as a change and cause the `_propertiesChanged` callback\n     * to be enqueued.\n     *\n     * The default implementation returns `true` if a strict equality\n     * check fails. The method always returns false for `NaN`.\n     *\n     * Override this method to e.g. provide stricter checking for\n     * Objects/Arrays when using immutable patterns.\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     *   and enqueue a `_proeprtiesChanged` callback\n     * @protected\n     * @override\n     */\n    _shouldPropertyChange(property, value, old) {\n      return (\n        // Strict equality check\n        (old !== value &&\n          // This ensures (old==NaN, value==NaN) always returns false\n          (old === old || value === value))\n      );\n    }\n\n    /**\n     * Implements native Custom Elements `attributeChangedCallback` to\n     * set an attribute value to a property via `_attributeToProperty`.\n     *\n     * @param {string} name Name of attribute that changed\n     * @param {?string} old Old attribute value\n     * @param {?string} value New attribute value\n     * @param {?string} namespace Attribute namespace.\n     * @return {void}\n     * @suppress {missingProperties} Super may or may not implement the callback\n     * @override\n     */\n    attributeChangedCallback(name, old, value, namespace) {\n      if (old !== value) {\n        this._attributeToProperty(name, value);\n      }\n      if (super.attributeChangedCallback) {\n        super.attributeChangedCallback(name, old, value, namespace);\n      }\n    }\n\n    /**\n     * Deserializes an attribute to its associated property.\n     *\n     * This method calls the `_deserializeValue` method to convert the string to\n     * a typed value.\n     *\n     * @param {string} attribute Name of attribute to deserialize.\n     * @param {?string} value of the attribute.\n     * @param {*=} type type to deserialize to, defaults to the value\n     * returned from `typeForProperty`\n     * @return {void}\n     * @override\n     */\n    _attributeToProperty(attribute, value, type) {\n      if (!this.__serializing) {\n        const map = this.__dataAttributes;\n        const property = map && map[attribute] || attribute;\n        this[property] = this._deserializeValue(value, type ||\n          this.constructor.typeForProperty(property));\n      }\n    }\n\n    /**\n     * Serializes a property to its associated attribute.\n     *\n     * @suppress {invalidCasts} Closure can't figure out `this` is an element.\n     *\n     * @param {string} property Property name to reflect.\n     * @param {string=} attribute Attribute name to reflect to.\n     * @param {*=} value Property value to refect.\n     * @return {void}\n     * @override\n     */\n    _propertyToAttribute(property, attribute, value) {\n      this.__serializing = true;\n      value = (arguments.length < 3) ? this[property] : value;\n      this._valueToNodeAttribute(/** @type {!HTMLElement} */(this), value,\n        attribute || this.constructor.attributeNameForProperty(property));\n      this.__serializing = false;\n    }\n\n    /**\n     * Sets a typed value to an HTML attribute on a node.\n     *\n     * This method calls the `_serializeValue` method to convert the typed\n     * value to a string.  If the `_serializeValue` method returns `undefined`,\n     * the attribute will be removed (this is the default for boolean\n     * type `false`).\n     *\n     * @param {Element} node Element to set attribute to.\n     * @param {*} value Value to serialize.\n     * @param {string} attribute Attribute name to serialize to.\n     * @return {void}\n     * @override\n     */\n    _valueToNodeAttribute(node, value, attribute) {\n      const str = this._serializeValue(value);\n      if (attribute === 'class' || attribute === 'name' || attribute === 'slot') {\n        node = /** @type {?Element} */(wrap(node));\n      }\n      if (str === undefined) {\n        node.removeAttribute(attribute);\n      } else {\n        node.setAttribute(\n            attribute,\n            // Closure's type for `setAttribute`'s second parameter incorrectly\n            // excludes `TrustedScript`.\n            (str === '' && window.trustedTypes) ?\n                /** @type {?} */ (window.trustedTypes.emptyScript) :\n                str);\n      }\n    }\n\n    /**\n     * Converts a typed JavaScript value to a string.\n     *\n     * This method is called when setting JS property values to\n     * HTML attributes.  Users may override this method to provide\n     * serialization for custom types.\n     *\n     * @param {*} value Property value to serialize.\n     * @return {string | undefined} String serialized from the provided\n     * property  value.\n     * @override\n     */\n    _serializeValue(value) {\n      switch (typeof value) {\n        case 'boolean':\n          return value ? '' : undefined;\n        default:\n          return value != null ? value.toString() : undefined;\n      }\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * This method is called when reading HTML attribute values to\n     * JS properties.  Users may override this method to provide\n     * deserialization for custom `type`s. Types for `Boolean`, `String`,\n     * and `Number` convert attributes to the expected types.\n     *\n     * @param {?string} value Value to deserialize.\n     * @param {*=} type Type to deserialize the string to.\n     * @return {*} Typed value deserialized from the provided string.\n     * @override\n     */\n    _deserializeValue(value, type) {\n      switch (type) {\n        case Boolean:\n          return (value !== null);\n        case Number:\n          return Number(value);\n        default:\n          return value;\n      }\n    }\n\n  }\n\n  return PropertiesChanged;\n});\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { camelToDashCase, dashToCamelCase } from '../utils/case-map.js';\nimport { PropertiesChanged } from './properties-changed.js';\n\n// Save map of native properties; this forms a blacklist or properties\n// that won't have their values \"saved\" by `saveAccessorValue`, since\n// reading from an HTMLElement accessor from the context of a prototype throws\nconst nativeProperties = {};\nlet proto = HTMLElement.prototype;\nwhile (proto) {\n  let props = Object.getOwnPropertyNames(proto);\n  for (let i=0; i<props.length; i++) {\n    nativeProperties[props[i]] = true;\n  }\n  proto = Object.getPrototypeOf(proto);\n}\n\nconst isTrustedType = (() => {\n  if (!window.trustedTypes) {\n    return () => false;\n  }\n  return (val) => trustedTypes.isHTML(val) ||\n        trustedTypes.isScript(val) || trustedTypes.isScriptURL(val);\n})();\n\n/**\n * Used to save the value of a property that will be overridden with\n * an accessor. If the `model` is a prototype, the values will be saved\n * in `__dataProto`, and it's up to the user (or downstream mixin) to\n * decide how/when to set these values back into the accessors.\n * If `model` is already an instance (it has a `__data` property), then\n * the value will be set as a pending property, meaning the user should\n * call `_invalidateProperties` or `_flushProperties` to take effect\n *\n * @param {Object} model Prototype or instance\n * @param {string} property Name of property\n * @return {void}\n * @private\n */\nfunction saveAccessorValue(model, property) {\n  // Don't read/store value for any native properties since they could throw\n  if (!nativeProperties[property]) {\n    let value = model[property];\n    if (value !== undefined) {\n      if (model.__data) {\n        // Adding accessor to instance; update the property\n        // It is the user's responsibility to call _flushProperties\n        model._setPendingProperty(property, value);\n      } else {\n        // Adding accessor to proto; save proto's value for instance-time use\n        if (!model.__dataProto) {\n          model.__dataProto = {};\n        } else if (!model.hasOwnProperty(JSCompiler_renameProperty('__dataProto', model))) {\n          model.__dataProto = Object.create(model.__dataProto);\n        }\n        model.__dataProto[property] = value;\n      }\n    }\n  }\n}\n\n/**\n * Element class mixin that provides basic meta-programming for creating one\n * or more property accessors (getter/setter pair) that enqueue an async\n * (batched) `_propertiesChanged` callback.\n *\n * For basic usage of this mixin:\n *\n * -   Declare attributes to observe via the standard `static get\n *     observedAttributes()`. Use `dash-case` attribute names to represent\n *     `camelCase` property names.\n * -   Implement the `_propertiesChanged` callback on the class.\n * -   Call `MyClass.createPropertiesForAttributes()` **once** on the class to\n *     generate property accessors for each observed attribute. This must be\n *     called before the first instance is created, for example, by calling it\n *     before calling `customElements.define`. It can also be called lazily from\n *     the element's `constructor`, as long as it's guarded so that the call is\n *     only made once, when the first instance is created.\n * -   Call `this._enableProperties()` in the element's `connectedCallback` to\n *     enable the accessors.\n *\n * Any `observedAttributes` will automatically be\n * deserialized via `attributeChangedCallback` and set to the associated\n * property using `dash-case`-to-`camelCase` convention.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertiesChanged\n * @summary Element class mixin for reacting to property changes from\n *   generated property accessors.\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const PropertyAccessors = dedupingMixin(superClass => {\n\n  /**\n   * @constructor\n   * @implements {Polymer_PropertiesChanged}\n   * @unrestricted\n   * @private\n   */\n   const base = PropertiesChanged(superClass);\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyAccessors}\n   * @extends {base}\n   * @unrestricted\n   */\n  class PropertyAccessors extends base {\n\n    /**\n     * Generates property accessors for all attributes in the standard\n     * static `observedAttributes` array.\n     *\n     * Attribute names are mapped to property names using the `dash-case` to\n     * `camelCase` convention\n     *\n     * @return {void}\n     * @nocollapse\n     */\n    static createPropertiesForAttributes() {\n      let a$ =  /** @type {?} */ (this).observedAttributes;\n      for (let i=0; i < a$.length; i++) {\n        this.prototype._createPropertyAccessor(dashToCamelCase(a$[i]));\n      }\n    }\n\n    /**\n     * Returns an attribute name that corresponds to the given property.\n     * By default, converts camel to dash case, e.g. `fooBar` to `foo-bar`.\n     * @param {string} property Property to convert\n     * @return {string} Attribute name corresponding to the given property.\n     *\n     * @protected\n     * @nocollapse\n     */\n    static attributeNameForProperty(property) {\n      return camelToDashCase(property);\n    }\n\n    /**\n     * Overrides PropertiesChanged implementation to initialize values for\n     * accessors created for values that already existed on the element\n     * prototype.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeProperties() {\n      if (this.__dataProto) {\n        this._initializeProtoProperties(this.__dataProto);\n        this.__dataProto = null;\n      }\n      super._initializeProperties();\n    }\n\n    /**\n     * Called at instance time with bag of properties that were overwritten\n     * by accessors on the prototype when accessors were created.\n     *\n     * The default implementation sets these properties back into the\n     * setter at instance time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeProtoProperties(props) {\n      for (let p in props) {\n        this._setProperty(p, props[p]);\n      }\n    }\n\n    /**\n     * Ensures the element has the given attribute. If it does not,\n     * assigns the given value to the attribute.\n     *\n     * @suppress {invalidCasts} Closure can't figure out `this` is infact an\n     *     element\n     *\n     * @param {string} attribute Name of attribute to ensure is set.\n     * @param {string} value of the attribute.\n     * @return {void}\n     * @override\n     */\n    _ensureAttribute(attribute, value) {\n      const el = /** @type {!HTMLElement} */(this);\n      if (!el.hasAttribute(attribute)) {\n        this._valueToNodeAttribute(el, value, attribute);\n      }\n    }\n\n    /**\n     * Overrides PropertiesChanged implemention to serialize objects as JSON.\n     *\n     * @param {*} value Property value to serialize.\n     * @return {string | undefined} String serialized from the provided property\n     *     value.\n     * @override\n     */\n    _serializeValue(value) {\n      /* eslint-disable no-fallthrough */\n      switch (typeof value) {\n        case 'object':\n          if (value instanceof Date) {\n            return value.toString();\n          } else if (value) {\n            if (isTrustedType(value)) {\n              /**\n               * Here `value` isn't actually a string, but it should be\n               * passed into APIs that normally expect a string, like\n               * elem.setAttribute.\n               */\n              return /** @type {?} */ (value);\n            }\n            try {\n              return JSON.stringify(value);\n            } catch(x) {\n              return '';\n            }\n          }\n\n        default:\n          return super._serializeValue(value);\n      }\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * This method is called by Polymer when reading HTML attribute values to\n     * JS properties.  Users may override this method on Polymer element\n     * prototypes to provide deserialization for custom `type`s.  Note,\n     * the `type` argument is the value of the `type` field provided in the\n     * `properties` configuration object for a given property, and is\n     * by convention the constructor for the type to deserialize.\n     *\n     *\n     * @param {?string} value Attribute value to deserialize.\n     * @param {*=} type Type to deserialize the string to.\n     * @return {*} Typed value deserialized from the provided string.\n     * @override\n     */\n    _deserializeValue(value, type) {\n      /**\n       * @type {*}\n       */\n      let outValue;\n      switch (type) {\n        case Object:\n          try {\n            outValue = JSON.parse(/** @type {string} */(value));\n          } catch(x) {\n            // allow non-JSON literals like Strings and Numbers\n            outValue = value;\n          }\n          break;\n        case Array:\n          try {\n            outValue = JSON.parse(/** @type {string} */(value));\n          } catch(x) {\n            outValue = null;\n            console.warn(`Polymer::Attributes: couldn't decode Array as JSON: ${value}`);\n          }\n          break;\n        case Date:\n          outValue = isNaN(value) ? String(value) : Number(value);\n          outValue = new Date(outValue);\n          break;\n        default:\n          outValue = super._deserializeValue(value, type);\n          break;\n      }\n      return outValue;\n    }\n    /* eslint-enable no-fallthrough */\n\n    /**\n     * Overrides PropertiesChanged implementation to save existing prototype\n     * property value so that it can be reset.\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created\n     *\n     * When calling on a prototype, any overwritten values are saved in\n     * `__dataProto`, and it is up to the subclasser to decide how/when\n     * to set those properties back into the accessor.  When calling on an\n     * instance, the overwritten value is set via `_setPendingProperty`,\n     * and the user should call `_invalidateProperties` or `_flushProperties`\n     * for the values to take effect.\n     * @protected\n     * @return {void}\n     * @override\n     */\n    _definePropertyAccessor(property, readOnly) {\n      saveAccessorValue(this, property);\n      super._definePropertyAccessor(property, readOnly);\n    }\n\n    /**\n     * Returns true if this library created an accessor for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if an accessor was created\n     * @override\n     */\n    _hasAccessor(property) {\n      return this.__dataHasAccessor && this.__dataHasAccessor[property];\n    }\n\n    /**\n     * Returns true if the specified property has a pending change.\n     *\n     * @param {string} prop Property name\n     * @return {boolean} True if property has a pending change\n     * @protected\n     * @override\n     */\n    _isPropertyPending(prop) {\n      return Boolean(this.__dataPending && (prop in this.__dataPending));\n    }\n\n  }\n\n  return PropertyAccessors;\n\n});\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\n\n// 1.x backwards-compatible auto-wrapper for template type extensions\n// This is a clear layering violation and gives favored-nation status to\n// dom-if and dom-repeat templates.  This is a conceit we're choosing to keep\n// a.) to ease 1.x backwards-compatibility due to loss of `is`, and\n// b.) to maintain if/repeat capability in parser-constrained elements\n//     (e.g. table, select) in lieu of native CE type extensions without\n//     massive new invention in this space (e.g. directive system)\nconst templateExtensions = {\n  'dom-if': true,\n  'dom-repeat': true\n};\n\nlet placeholderBugDetect = false;\nlet placeholderBug = false;\n\nfunction hasPlaceholderBug() {\n  if (!placeholderBugDetect) {\n    placeholderBugDetect = true;\n    const t = document.createElement('textarea');\n    t.placeholder = 'a';\n    placeholderBug = t.placeholder === t.textContent;\n  }\n  return placeholderBug;\n}\n\n/**\n * Some browsers have a bug with textarea, where placeholder text is copied as\n * a textnode child of the textarea.\n *\n * If the placeholder is a binding, this can break template stamping in two\n * ways.\n *\n * One issue is that when the `placeholder` attribute is removed when the\n * binding is processed, the textnode child of the textarea is deleted, and the\n * template info tries to bind into that node.\n *\n * With `legacyOptimizations` in use, when the template is stamped and the\n * `textarea.textContent` binding is processed, no corresponding node is found\n * because it was removed during parsing. An exception is generated when this\n * binding is updated.\n *\n * With `legacyOptimizations` not in use, the template is cloned before\n * processing and this changes the above behavior. The cloned template also has\n * a value property set to the placeholder and textContent. This prevents the\n * removal of the textContent when the placeholder attribute is removed.\n * Therefore the exception does not occur. However, there is an extra\n * unnecessary binding.\n *\n * @param {!Node} node Check node for placeholder bug\n * @return {void}\n */\nfunction fixPlaceholder(node) {\n  if (hasPlaceholderBug() && node.localName === 'textarea' && node.placeholder\n        && node.placeholder === node.textContent) {\n    node.textContent = null;\n  }\n}\n\n/**\n * Copies an attribute from one element to another, converting the value to a\n * `TrustedScript` if it is named like a Polymer template event listener.\n *\n * @param {!Element} dest The element to set the attribute on\n * @param {!Element} src The element to read the attribute from\n * @param {string} name The name of the attribute\n */\nconst copyAttributeWithTemplateEventPolicy = (() => {\n  /**\n   * This `TrustedTypePolicy` is used to work around a Chrome bug in the Trusted\n   * Types API where any attribute that starts with `on` may only be set to a\n   * `TrustedScript` value, even if that attribute would not cause an event\n   * listener to be created. (See https://crbug.com/993268 for details.)\n   *\n   * Polymer's template system allows `<dom-if>` and `<dom-repeat>` to be\n   * written using the `<template is=\"...\">` syntax, even if there is no UA\n   * support for custom element extensions of built-in elements. In doing so, it\n   * copies attributes from the original `<template>` to a newly created\n   * `<dom-if>` or `<dom-repeat>`, which can trigger the bug mentioned above if\n   * any of those attributes uses Polymer's `on-` syntax for event listeners.\n   * (Note, the value of these `on-` listeners is not evaluated as script: it is\n   * the name of a member function of a component that will be used as the event\n   * listener.)\n   *\n   * @type {!TrustedTypePolicy|undefined}\n   */\n  const polymerTemplateEventAttributePolicy = window.trustedTypes &&\n      window.trustedTypes.createPolicy(\n          'polymer-template-event-attribute-policy', {\n            createScript: x => x,\n          });\n\n  return (dest, src, name) => {\n    const value = src.getAttribute(name);\n\n    if (polymerTemplateEventAttributePolicy && name.startsWith('on-')) {\n      dest.setAttribute(\n          name, polymerTemplateEventAttributePolicy.createScript(value, name));\n      return;\n    }\n\n    dest.setAttribute(name, value);\n  };\n})();\n\nfunction wrapTemplateExtension(node) {\n  let is = node.getAttribute('is');\n  if (is && templateExtensions[is]) {\n    let t = node;\n    t.removeAttribute('is');\n    node = t.ownerDocument.createElement(is);\n    t.parentNode.replaceChild(node, t);\n    node.appendChild(t);\n    while(t.attributes.length) {\n      const {name} = t.attributes[0];\n      copyAttributeWithTemplateEventPolicy(node, t, name);\n      t.removeAttribute(name);\n    }\n  }\n  return node;\n}\n\nfunction findTemplateNode(root, nodeInfo) {\n  // recursively ascend tree until we hit root\n  let parent = nodeInfo.parentInfo && findTemplateNode(root, nodeInfo.parentInfo);\n  // unwind the stack, returning the indexed node at each level\n  if (parent) {\n    // note: marginally faster than indexing via childNodes\n    // (http://jsperf.com/childnodes-lookup)\n    for (let n=parent.firstChild, i=0; n; n=n.nextSibling) {\n      if (nodeInfo.parentIndex === i++) {\n        return n;\n      }\n    }\n  } else {\n    return root;\n  }\n}\n\n// construct `$` map (from id annotations)\nfunction applyIdToMap(inst, map, node, nodeInfo) {\n  if (nodeInfo.id) {\n    map[nodeInfo.id] = node;\n  }\n}\n\n// install event listeners (from event annotations)\nfunction applyEventListener(inst, node, nodeInfo) {\n  if (nodeInfo.events && nodeInfo.events.length) {\n    for (let j=0, e$=nodeInfo.events, e; (j<e$.length) && (e=e$[j]); j++) {\n      inst._addMethodEventListenerToNode(node, e.name, e.value, inst);\n    }\n  }\n}\n\n// push configuration references at configure time\nfunction applyTemplateInfo(inst, node, nodeInfo, parentTemplateInfo) {\n  if (nodeInfo.templateInfo) {\n    // Give the node an instance of this templateInfo and set its parent\n    node._templateInfo = nodeInfo.templateInfo;\n    node._parentTemplateInfo = parentTemplateInfo;\n  }\n}\n\nfunction createNodeEventHandler(context, eventName, methodName) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  context = context._methodHost || context;\n  let handler = function(e) {\n    if (context[methodName]) {\n      context[methodName](e, e.detail);\n    } else {\n      console.warn('listener method `' + methodName + '` not defined');\n    }\n  };\n  return handler;\n}\n\n/**\n * Element mixin that provides basic template parsing and stamping, including\n * the following template-related features for stamped templates:\n *\n * - Declarative event listeners (`on-eventname=\"listener\"`)\n * - Map of node id's to stamped node instances (`this.$.id`)\n * - Nested template content caching/removal and re-installation (performance\n *   optimization)\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin that provides basic template parsing and stamping\n */\nexport const TemplateStamp = dedupingMixin(\n    /**\n     * @template T\n     * @param {function(new:T)} superClass Class to apply mixin to.\n     * @return {function(new:T)} superClass with mixin applied.\n     */\n    (superClass) => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_TemplateStamp}\n   */\n  class TemplateStamp extends superClass {\n\n    /**\n     * Scans a template to produce template metadata.\n     *\n     * Template-specific metadata are stored in the object returned, and node-\n     * specific metadata are stored in objects in its flattened `nodeInfoList`\n     * array.  Only nodes in the template that were parsed as nodes of\n     * interest contain an object in `nodeInfoList`.  Each `nodeInfo` object\n     * contains an `index` (`childNodes` index in parent) and optionally\n     * `parent`, which points to node info of its parent (including its index).\n     *\n     * The template metadata object returned from this method has the following\n     * structure (many fields optional):\n     *\n     * ```js\n     *   {\n     *     // Flattened list of node metadata (for nodes that generated metadata)\n     *     nodeInfoList: [\n     *       {\n     *         // `id` attribute for any nodes with id's for generating `$` map\n     *         id: {string},\n     *         // `on-event=\"handler\"` metadata\n     *         events: [\n     *           {\n     *             name: {string},   // event name\n     *             value: {string},  // handler method name\n     *           }, ...\n     *         ],\n     *         // Notes when the template contained a `<slot>` for shady DOM\n     *         // optimization purposes\n     *         hasInsertionPoint: {boolean},\n     *         // For nested `<template>`` nodes, nested template metadata\n     *         templateInfo: {object}, // nested template metadata\n     *         // Metadata to allow efficient retrieval of instanced node\n     *         // corresponding to this metadata\n     *         parentInfo: {number},   // reference to parent nodeInfo>\n     *         parentIndex: {number},  // index in parent's `childNodes` collection\n     *         infoIndex: {number},    // index of this `nodeInfo` in `templateInfo.nodeInfoList`\n     *       },\n     *       ...\n     *     ],\n     *     // When true, the template had the `strip-whitespace` attribute\n     *     // or was nested in a template with that setting\n     *     stripWhitespace: {boolean},\n     *     // For nested templates, nested template content is moved into\n     *     // a document fragment stored here; this is an optimization to\n     *     // avoid the cost of nested template cloning\n     *     content: {DocumentFragment}\n     *   }\n     * ```\n     *\n     * This method kicks off a recursive treewalk as follows:\n     *\n     * ```\n     *    _parseTemplate <---------------------+\n     *      _parseTemplateContent              |\n     *        _parseTemplateNode  <------------|--+\n     *          _parseTemplateNestedTemplate --+  |\n     *          _parseTemplateChildNodes ---------+\n     *          _parseTemplateNodeAttributes\n     *            _parseTemplateNodeAttribute\n     *\n     * ```\n     *\n     * These methods may be overridden to add custom metadata about templates\n     * to either `templateInfo` or `nodeInfo`.\n     *\n     * Note that this method may be destructive to the template, in that\n     * e.g. event annotations may be removed after being noted in the\n     * template metadata.\n     *\n     * @param {!HTMLTemplateElement} template Template to parse\n     * @param {TemplateInfo=} outerTemplateInfo Template metadata from the outer\n     *   template, for parsing nested templates\n     * @return {!TemplateInfo} Parsed template metadata\n     * @nocollapse\n     */\n    static _parseTemplate(template, outerTemplateInfo) {\n      // since a template may be re-used, memo-ize metadata\n      if (!template._templateInfo) {\n        // TODO(rictic): fix typing\n        let /** ? */ templateInfo = template._templateInfo = {};\n        templateInfo.nodeInfoList = [];\n        templateInfo.nestedTemplate = Boolean(outerTemplateInfo);\n        templateInfo.stripWhiteSpace =\n          (outerTemplateInfo && outerTemplateInfo.stripWhiteSpace) ||\n          (template.hasAttribute && template.hasAttribute('strip-whitespace'));\n         // TODO(rictic): fix typing\n         this._parseTemplateContent(\n             template, templateInfo, /** @type {?} */ ({parent: null}));\n      }\n      return template._templateInfo;\n    }\n\n    /**\n     * See docs for _parseTemplateNode.\n     *\n     * @param {!HTMLTemplateElement} template .\n     * @param {!TemplateInfo} templateInfo .\n     * @param {!NodeInfo} nodeInfo .\n     * @return {boolean} .\n     * @nocollapse\n     */\n    static _parseTemplateContent(template, templateInfo, nodeInfo) {\n      return this._parseTemplateNode(template.content, templateInfo, nodeInfo);\n    }\n\n    /**\n     * Parses template node and adds template and node metadata based on\n     * the current node, and its `childNodes` and `attributes`.\n     *\n     * This method may be overridden to add custom node or template specific\n     * metadata based on this node.\n     *\n     * @param {Node} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @nocollapse\n     */\n    static _parseTemplateNode(node, templateInfo, nodeInfo) {\n      let noted = false;\n      let element = /** @type {!HTMLTemplateElement} */ (node);\n      if (element.localName == 'template' && !element.hasAttribute('preserve-content')) {\n        noted = this._parseTemplateNestedTemplate(element, templateInfo, nodeInfo) || noted;\n      } else if (element.localName === 'slot') {\n        // For ShadyDom optimization, indicating there is an insertion point\n        templateInfo.hasInsertionPoint = true;\n      }\n      fixPlaceholder(element);\n      if (element.firstChild) {\n        this._parseTemplateChildNodes(element, templateInfo, nodeInfo);\n      }\n      if (element.hasAttributes && element.hasAttributes()) {\n        noted = this._parseTemplateNodeAttributes(element, templateInfo, nodeInfo) || noted;\n      }\n      // Checking `nodeInfo.noted` allows a child node of this node (who gets\n      // access to `parentInfo`) to cause the parent to be noted, which\n      // otherwise has no return path via `_parseTemplateChildNodes` (used by\n      // some optimizations)\n      return noted || nodeInfo.noted;\n    }\n\n    /**\n     * Parses template child nodes for the given root node.\n     *\n     * This method also wraps whitelisted legacy template extensions\n     * (`is=\"dom-if\"` and `is=\"dom-repeat\"`) with their equivalent element\n     * wrappers, collapses text nodes, and strips whitespace from the template\n     * if the `templateInfo.stripWhitespace` setting was provided.\n     *\n     * @param {Node} root Root node whose `childNodes` will be parsed\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {void}\n     */\n    static _parseTemplateChildNodes(root, templateInfo, nodeInfo) {\n      if (root.localName === 'script' || root.localName === 'style') {\n        return;\n      }\n      for (let node=root.firstChild, parentIndex=0, next; node; node=next) {\n        // Wrap templates\n        if (node.localName == 'template') {\n          node = wrapTemplateExtension(node);\n        }\n        // collapse adjacent textNodes: fixes an IE issue that can cause\n        // text nodes to be inexplicably split =(\n        // note that root.normalize() should work but does not so we do this\n        // manually.\n        next = node.nextSibling;\n        if (node.nodeType === Node.TEXT_NODE) {\n          let /** Node */ n = next;\n          while (n && (n.nodeType === Node.TEXT_NODE)) {\n            node.textContent += n.textContent;\n            next = n.nextSibling;\n            root.removeChild(n);\n            n = next;\n          }\n          // optionally strip whitespace\n          if (templateInfo.stripWhiteSpace && !node.textContent.trim()) {\n            root.removeChild(node);\n            continue;\n          }\n        }\n        let childInfo =\n            /** @type {!NodeInfo} */ ({parentIndex, parentInfo: nodeInfo});\n        if (this._parseTemplateNode(node, templateInfo, childInfo)) {\n          childInfo.infoIndex = templateInfo.nodeInfoList.push(childInfo) - 1;\n        }\n        // Increment if not removed\n        if (node.parentNode) {\n          parentIndex++;\n        }\n      }\n    }\n\n    /**\n     * Parses template content for the given nested `<template>`.\n     *\n     * Nested template info is stored as `templateInfo` in the current node's\n     * `nodeInfo`. `template.content` is removed and stored in `templateInfo`.\n     * It will then be the responsibility of the host to set it back to the\n     * template and for users stamping nested templates to use the\n     * `_contentForTemplate` method to retrieve the content for this template\n     * (an optimization to avoid the cost of cloning nested template content).\n     *\n     * @param {HTMLTemplateElement} node Node to parse (a <template>)\n     * @param {TemplateInfo} outerTemplateInfo Template metadata for current template\n     *   that includes the template `node`\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @nocollapse\n     */\n    static _parseTemplateNestedTemplate(node, outerTemplateInfo, nodeInfo) {\n      // TODO(rictic): the type of node should be non-null\n      let element = /** @type {!HTMLTemplateElement} */ (node);\n      let templateInfo = this._parseTemplate(element, outerTemplateInfo);\n      let content = templateInfo.content =\n          element.content.ownerDocument.createDocumentFragment();\n      content.appendChild(element.content);\n      nodeInfo.templateInfo = templateInfo;\n      return true;\n    }\n\n    /**\n     * Parses template node attributes and adds node metadata to `nodeInfo`\n     * for nodes of interest.\n     *\n     * @param {Element} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current\n     *     template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @nocollapse\n     */\n    static _parseTemplateNodeAttributes(node, templateInfo, nodeInfo) {\n      // Make copy of original attribute list, since the order may change\n      // as attributes are added and removed\n      let noted = false;\n      let attrs = Array.from(node.attributes);\n      for (let i=attrs.length-1, a; (a=attrs[i]); i--) {\n        noted = this._parseTemplateNodeAttribute(node, templateInfo, nodeInfo, a.name, a.value) || noted;\n      }\n      return noted;\n    }\n\n    /**\n     * Parses a single template node attribute and adds node metadata to\n     * `nodeInfo` for attributes of interest.\n     *\n     * This implementation adds metadata for `on-event=\"handler\"` attributes\n     * and `id` attributes.\n     *\n     * @param {Element} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @param {string} name Attribute name\n     * @param {string} value Attribute value\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @nocollapse\n     */\n    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n      // events (on-*)\n      if (name.slice(0, 3) === 'on-') {\n        node.removeAttribute(name);\n        nodeInfo.events = nodeInfo.events || [];\n        nodeInfo.events.push({\n          name: name.slice(3),\n          value\n        });\n        return true;\n      }\n      // static id\n      else if (name === 'id') {\n        nodeInfo.id = value;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Returns the `content` document fragment for a given template.\n     *\n     * For nested templates, Polymer performs an optimization to cache nested\n     * template content to avoid the cost of cloning deeply nested templates.\n     * This method retrieves the cached content for a given template.\n     *\n     * @param {HTMLTemplateElement} template Template to retrieve `content` for\n     * @return {DocumentFragment} Content fragment\n     * @nocollapse\n     */\n    static _contentForTemplate(template) {\n      let templateInfo = /** @type {HTMLTemplateElementWithInfo} */ (template)._templateInfo;\n      return (templateInfo && templateInfo.content) || template.content;\n    }\n\n    /**\n     * Clones the provided template content and returns a document fragment\n     * containing the cloned dom.\n     *\n     * The template is parsed (once and memoized) using this library's\n     * template parsing features, and provides the following value-added\n     * features:\n     * * Adds declarative event listeners for `on-event=\"handler\"` attributes\n     * * Generates an \"id map\" for all nodes with id's under `$` on returned\n     *   document fragment\n     * * Passes template info including `content` back to templates as\n     *   `_templateInfo` (a performance optimization to avoid deep template\n     *   cloning)\n     *\n     * Note that the memoized template parsing process is destructive to the\n     * template: attributes for bindings and declarative event listeners are\n     * removed after being noted in notes, and any nested `<template>.content`\n     * is removed and stored in notes as well.\n     *\n     * @param {!HTMLTemplateElement} template Template to stamp\n     * @param {TemplateInfo=} templateInfo Optional template info associated\n     *   with the template to be stamped; if omitted the template will be\n     *   automatically parsed.\n     * @return {!StampedTemplate} Cloned template content\n     * @override\n     */\n    _stampTemplate(template, templateInfo) {\n      // Polyfill support: bootstrap the template if it has not already been\n      if (template && !template.content &&\n          window.HTMLTemplateElement && HTMLTemplateElement.decorate) {\n        HTMLTemplateElement.decorate(template);\n      }\n      // Accepting the `templateInfo` via an argument allows for creating\n      // instances of the `templateInfo` by the caller, useful for adding\n      // instance-time information to the prototypical data\n      templateInfo = templateInfo || this.constructor._parseTemplate(template);\n      let nodeInfo = templateInfo.nodeInfoList;\n      let content = templateInfo.content || template.content;\n      let dom = /** @type {DocumentFragment} */ (document.importNode(content, true));\n      // NOTE: ShadyDom optimization indicating there is an insertion point\n      dom.__noInsertionPoint = !templateInfo.hasInsertionPoint;\n      let nodes = dom.nodeList = new Array(nodeInfo.length);\n      dom.$ = {};\n      for (let i=0, l=nodeInfo.length, info; (i<l) && (info=nodeInfo[i]); i++) {\n        let node = nodes[i] = findTemplateNode(dom, info);\n        applyIdToMap(this, dom.$, node, info);\n        applyTemplateInfo(this, node, info, templateInfo);\n        applyEventListener(this, node, info);\n      }\n      dom = /** @type {!StampedTemplate} */(dom); // eslint-disable-line no-self-assign\n      return dom;\n    }\n\n    /**\n     * Adds an event listener by method name for the event provided.\n     *\n     * This method generates a handler function that looks up the method\n     * name at handling time.\n     *\n     * @param {!EventTarget} node Node to add listener on\n     * @param {string} eventName Name of event\n     * @param {string} methodName Name of method\n     * @param {*=} context Context the method will be called on (defaults\n     *   to `node`)\n     * @return {Function} Generated handler function\n     * @override\n     */\n    _addMethodEventListenerToNode(node, eventName, methodName, context) {\n      context = context || node;\n      let handler = createNodeEventHandler(context, eventName, methodName);\n      this._addEventListenerToNode(node, eventName, handler);\n      return handler;\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {!EventTarget} node Node to add event listener to\n     * @param {string} eventName Name of event\n     * @param {function(!Event):void} handler Listener function to add\n     * @return {void}\n     * @override\n     */\n    _addEventListenerToNode(node, eventName, handler) {\n      node.addEventListener(eventName, handler);\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {!EventTarget} node Node to remove event listener from\n     * @param {string} eventName Name of event\n     * @param {function(!Event):void} handler Listener function to remove\n     * @return {void}\n     * @override\n     */\n    _removeEventListenerFromNode(node, eventName, handler) {\n      node.removeEventListener(eventName, handler);\n    }\n\n  }\n\n  return TemplateStamp;\n\n});\n", "/**\n * @fileoverview\n * @suppress {checkPrototypalTypes}\n * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n * Google as part of the polymer project is also subject to an additional IP\n * rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport '../utils/boot.js';\nimport { wrap } from '../utils/wrap.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { root, isAncestor, isDescendant, get, translate, isPath, set, normalize } from '../utils/path.js';\n/* for notify, reflect */\nimport { camelToDashCase, dashToCamelCase } from '../utils/case-map.js';\nimport { PropertyAccessors } from './property-accessors.js';\n/* for annotated effects */\nimport { TemplateStamp } from './template-stamp.js';\nimport { sanitizeDOMValue, legacyUndefined, orderedComputed, removeNestedTemplates, fastDomIf } from '../utils/settings.js';\n\n// Monotonically increasing unique ID used for de-duping effects triggered\n// from multiple properties in the same turn\nlet dedupeId = 0;\n\nconst NOOP = [];\n\n/**\n * Property effect types; effects are stored on the prototype using these keys\n * @enum {string}\n */\nconst TYPES = {\n  COMPUTE: '__computeEffects',\n  REFLECT: '__reflectEffects',\n  NOTIFY: '__notifyEffects',\n  PROPAGATE: '__propagateEffects',\n  OBSERVE: '__observeEffects',\n  READ_ONLY: '__readOnly'\n};\n\nconst COMPUTE_INFO = '__computeInfo';\n\n/** @const {!RegExp} */\nconst capitalAttributeRegex = /[A-Z]/;\n\n/**\n * @typedef {{\n * name: (string | undefined),\n * structured: (boolean | undefined),\n * wildcard: (boolean | undefined)\n * }}\n */\nlet DataTrigger; //eslint-disable-line no-unused-vars\n\n/**\n * @typedef {{\n * info: ?,\n * trigger: (!DataTrigger | undefined),\n * fn: (!Function | undefined)\n * }}\n */\nlet DataEffect; //eslint-disable-line no-unused-vars\n\n/**\n * Ensures that the model has an own-property map of effects for the given type.\n * The model may be a prototype or an instance.\n *\n * Property effects are stored as arrays of effects by property in a map,\n * by named type on the model. e.g.\n *\n *   __computeEffects: {\n *     foo: [ ... ],\n *     bar: [ ... ]\n *   }\n *\n * If the model does not yet have an effect map for the type, one is created\n * and returned.  If it does, but it is not an own property (i.e. the\n * prototype had effects), the the map is deeply cloned and the copy is\n * set on the model and returned, ready for new effects to be added.\n *\n * @param {Object} model Prototype or instance\n * @param {string} type Property effect type\n * @param {boolean=} cloneArrays Clone any arrays assigned to the map when\n *   extending a superclass map onto this subclass\n * @return {Object} The own-property map of effects for the given type\n * @private\n */\nfunction ensureOwnEffectMap(model, type, cloneArrays) {\n  let effects = model[type];\n  if (!effects) {\n    effects = model[type] = {};\n  } else if (!model.hasOwnProperty(type)) {\n    effects = model[type] = Object.create(model[type]);\n    if (cloneArrays) {\n      for (let p in effects) {\n        let protoFx = effects[p];\n        // Perf optimization over Array.slice\n        let instFx = effects[p] = Array(protoFx.length);\n        for (let i=0; i<protoFx.length; i++) {\n          instFx[i] = protoFx[i];\n        }\n      }\n    }\n  }\n  return effects;\n}\n\n// -- effects ----------------------------------------------\n\n/**\n * Runs all effects of a given type for the given set of property changes\n * on an instance.\n *\n * @param {!Polymer_PropertyEffects} inst The instance with effects to run\n * @param {?Object} effects Object map of property-to-Array of effects\n * @param {?Object} props Bag of current property changes\n * @param {?Object=} oldProps Bag of previous values for changed properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffects(inst, effects, props, oldProps, hasPaths, extraArgs) {\n  if (effects) {\n    let ran = false;\n    const id = dedupeId++;\n    for (let prop in props) {\n      // Inline `runEffectsForProperty` for perf.\n      let rootProperty = hasPaths ? root(prop) : prop;\n      let fxs = effects[rootProperty];\n      if (fxs) {\n        for (let i=0, l=fxs.length, fx; (i<l) && (fx=fxs[i]); i++) {\n          if ((!fx.info || fx.info.lastRun !== id) &&\n              (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n            if (fx.info) {\n              fx.info.lastRun = id;\n            }\n            fx.fn(inst, prop, props, oldProps, fx.info, hasPaths, extraArgs);\n            ran = true;\n          }\n        }\n      }\n    }\n    return ran;\n  }\n  return false;\n}\n\n/**\n * Runs a list of effects for a given property.\n *\n * @param {!Polymer_PropertyEffects} inst The instance with effects to run\n * @param {!Object} effects Object map of property-to-Array of effects\n * @param {number} dedupeId Counter used for de-duping effects\n * @param {string} prop Name of changed property\n * @param {*} props Changed properties\n * @param {*} oldProps Old properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffectsForProperty(inst, effects, dedupeId, prop, props, oldProps, hasPaths, extraArgs) {\n  let ran = false;\n  let rootProperty = hasPaths ? root(prop) : prop;\n  let fxs = effects[rootProperty];\n  if (fxs) {\n    for (let i=0, l=fxs.length, fx; (i<l) && (fx=fxs[i]); i++) {\n      if ((!fx.info || fx.info.lastRun !== dedupeId) &&\n          (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n        if (fx.info) {\n          fx.info.lastRun = dedupeId;\n        }\n        fx.fn(inst, prop, props, oldProps, fx.info, hasPaths, extraArgs);\n        ran = true;\n      }\n    }\n  }\n  return ran;\n}\n\n/**\n * Determines whether a property/path that has changed matches the trigger\n * criteria for an effect.  A trigger is a descriptor with the following\n * structure, which matches the descriptors returned from `parseArg`.\n * e.g. for `foo.bar.*`:\n * ```\n * trigger: {\n *   name: 'a.b',\n *   structured: true,\n *   wildcard: true\n * }\n * ```\n * If no trigger is given, the path is deemed to match.\n *\n * @param {string} path Path or property that changed\n * @param {?DataTrigger} trigger Descriptor\n * @return {boolean} Whether the path matched the trigger\n */\nfunction pathMatchesTrigger(path, trigger) {\n  if (trigger) {\n    let triggerPath = /** @type {string} */ (trigger.name);\n    return (triggerPath == path) ||\n        !!(trigger.structured && isAncestor(triggerPath, path)) ||\n        !!(trigger.wildcard && isDescendant(triggerPath, path));\n  } else {\n    return true;\n  }\n}\n\n/**\n * Implements the \"observer\" effect.\n *\n * Calls the method with `info.methodName` on the instance, passing the\n * new and old values.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {void}\n * @private\n */\nfunction runObserverEffect(inst, property, props, oldProps, info) {\n  let fn = typeof info.method === \"string\" ? inst[info.method] : info.method;\n  let changedProp = info.property;\n  if (fn) {\n    fn.call(inst, inst.__data[changedProp], oldProps[changedProp]);\n  } else if (!info.dynamicFn) {\n    console.warn('observer method `' + info.method + '` not defined');\n  }\n}\n\n/**\n * Runs \"notify\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * will dispatch path notification events in the case that the property\n * changed was a path and the root property for that path didn't have a\n * \"notify\" effect.  This is to maintain 1.0 behavior that did not require\n * `notify: true` to ensure object sub-property notifications were\n * sent.\n *\n * @param {!Polymer_PropertyEffects} inst The instance with effects to run\n * @param {Object} notifyProps Bag of properties to notify\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @return {void}\n * @private\n */\nfunction runNotifyEffects(inst, notifyProps, props, oldProps, hasPaths) {\n  // Notify\n  let fxs = inst[TYPES.NOTIFY];\n  let notified;\n  let id = dedupeId++;\n  // Try normal notify effects; if none, fall back to try path notification\n  for (let prop in notifyProps) {\n    if (notifyProps[prop]) {\n      if (fxs && runEffectsForProperty(inst, fxs, id, prop, props, oldProps, hasPaths)) {\n        notified = true;\n      } else if (hasPaths && notifyPath(inst, prop, props)) {\n        notified = true;\n      }\n    }\n  }\n  // Flush host if we actually notified and host was batching\n  // And the host has already initialized clients; this prevents\n  // an issue with a host observing data changes before clients are ready.\n  let host;\n  if (notified && (host = inst.__dataHost) && host._invalidateProperties) {\n    host._invalidateProperties();\n  }\n}\n\n/**\n * Dispatches {property}-changed events with path information in the detail\n * object to indicate a sub-path of the property was changed.\n *\n * @param {!Polymer_PropertyEffects} inst The element from which to fire the\n *     event\n * @param {string} path The path that was changed\n * @param {Object} props Bag of current property changes\n * @return {boolean} Returns true if the path was notified\n * @private\n */\nfunction notifyPath(inst, path, props) {\n  let rootProperty = root(path);\n  if (rootProperty !== path) {\n    let eventName = camelToDashCase(rootProperty) + '-changed';\n    dispatchNotifyEvent(inst, eventName, props[path], path);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Dispatches {property}-changed events to indicate a property (or path)\n * changed.\n *\n * @param {!Polymer_PropertyEffects} inst The element from which to fire the\n *     event\n * @param {string} eventName The name of the event to send\n *     ('{property}-changed')\n * @param {*} value The value of the changed property\n * @param {string | null | undefined} path If a sub-path of this property\n *     changed, the path that changed (optional).\n * @return {void}\n * @private\n * @suppress {invalidCasts}\n */\nfunction dispatchNotifyEvent(inst, eventName, value, path) {\n  let detail = {\n    value: value,\n    queueProperty: true\n  };\n  if (path) {\n    detail.path = path;\n  }\n  // As a performance optimization, we could elide the wrap here since notifying\n  // events are non-bubbling and shouldn't need retargeting. However, a very\n  // small number of internal tests failed in obscure ways, which may indicate\n  // user code relied on timing differences resulting from ShadyDOM flushing\n  // as a result of the wrapped `dispatchEvent`.\n  wrap(/** @type {!HTMLElement} */(inst)).dispatchEvent(new CustomEvent(eventName, { detail }));\n}\n\n/**\n * Implements the \"notify\" effect.\n *\n * Dispatches a non-bubbling event named `info.eventName` on the instance\n * with a detail object containing the new `value`.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @return {void}\n * @private\n */\nfunction runNotifyEffect(inst, property, props, oldProps, info, hasPaths) {\n  let rootProperty = hasPaths ? root(property) : property;\n  let path = rootProperty != property ? property : null;\n  let value = path ? get(inst, path) : inst.__data[property];\n  if (path && value === undefined) {\n    value = props[property];  // specifically for .splices\n  }\n  dispatchNotifyEvent(inst, info.eventName, value, path);\n}\n\n/**\n * Handler function for 2-way notification events. Receives context\n * information captured in the `addNotifyListener` closure from the\n * `__notifyListeners` metadata.\n *\n * Sets the value of the notified property to the host property or path.  If\n * the event contained path information, translate that path to the host\n * scope's name for that path first.\n *\n * @param {CustomEvent} event Notification event (e.g. '<property>-changed')\n * @param {!Polymer_PropertyEffects} inst Host element instance handling the\n *     notification event\n * @param {string} fromProp Child element property that was bound\n * @param {string} toPath Host property/path that was bound\n * @param {boolean} negate Whether the binding was negated\n * @return {void}\n * @private\n */\nfunction handleNotification(event, inst, fromProp, toPath, negate) {\n  let value;\n  let detail = /** @type {Object} */(event.detail);\n  let fromPath = detail && detail.path;\n  if (fromPath) {\n    toPath = translate(fromProp, toPath, fromPath);\n    value = detail && detail.value;\n  } else {\n    value = event.currentTarget[fromProp];\n  }\n  value = negate ? !value : value;\n  if (!inst[TYPES.READ_ONLY] || !inst[TYPES.READ_ONLY][toPath]) {\n    if (inst._setPendingPropertyOrPath(toPath, value, true, Boolean(fromPath))\n      && (!detail || !detail.queueProperty)) {\n      inst._invalidateProperties();\n    }\n  }\n}\n\n/**\n * Implements the \"reflect\" effect.\n *\n * Sets the attribute named `info.attrName` to the given property value.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {void}\n * @private\n */\nfunction runReflectEffect(inst, property, props, oldProps, info) {\n  let value = inst.__data[property];\n  if (sanitizeDOMValue) {\n    value = sanitizeDOMValue(value, info.attrName, 'attribute', /** @type {Node} */(inst));\n  }\n  inst._propertyToAttribute(property, info.attrName, value);\n}\n\n/**\n * Runs \"computed\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * continues to run computed effects based on the output of each pass until\n * there are no more newly computed properties.  This ensures that all\n * properties that will be computed by the initial set of changes are\n * computed before other effects (binding propagation, observers, and notify)\n * run.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {?Object} changedProps Bag of changed properties\n * @param {?Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @return {void}\n * @private\n */\nfunction runComputedEffects(inst, changedProps, oldProps, hasPaths) {\n  let computeEffects = inst[TYPES.COMPUTE];\n  if (computeEffects) {\n    if (orderedComputed) {\n      // Runs computed effects in efficient order by keeping a topologically-\n      // sorted queue of compute effects to run, and inserting subsequently\n      // invalidated effects as they are run\n      dedupeId++;\n      const order = getComputedOrder(inst);\n      const queue = [];\n      for (let p in changedProps) {\n        enqueueEffectsFor(p, computeEffects, queue, order, hasPaths);\n      }\n      let info;\n      while ((info = queue.shift())) {\n        if (runComputedEffect(inst, '', changedProps, oldProps, info)) {\n          enqueueEffectsFor(info.methodInfo, computeEffects, queue, order, hasPaths);\n        }\n      }\n      Object.assign(/** @type {!Object} */ (oldProps), inst.__dataOld);\n      Object.assign(/** @type {!Object} */ (changedProps), inst.__dataPending);\n      inst.__dataPending = null;\n    } else {\n      // Original Polymer 2.x computed effects order, which continues running\n      // effects until no further computed properties have been invalidated\n      let inputProps = changedProps;\n      while (runEffects(inst, computeEffects, inputProps, oldProps, hasPaths)) {\n        Object.assign(/** @type {!Object} */ (oldProps), inst.__dataOld);\n        Object.assign(/** @type {!Object} */ (changedProps), inst.__dataPending);\n        inputProps = inst.__dataPending;\n        inst.__dataPending = null;\n      }\n    }\n  }\n}\n\n/**\n * Inserts a computed effect into a queue, given the specified order. Performs\n * the insert using a binary search.\n *\n * Used by `orderedComputed: true` computed property algorithm.\n *\n * @param {Object} info Property effects metadata\n * @param {Array<Object>} queue Ordered queue of effects\n * @param {Map<string,number>} order Map of computed property name->topological\n *   sort order\n */\nconst insertEffect = (info, queue, order) => {\n  let start = 0;\n  let end = queue.length - 1;\n  let idx = -1;\n  while (start <= end) {\n    const mid = (start + end) >> 1;\n    // Note `methodInfo` is where the computed property name is stored in\n    // the effect metadata\n    const cmp = order.get(queue[mid].methodInfo) - order.get(info.methodInfo);\n    if (cmp < 0) {\n      start = mid + 1;\n    } else if (cmp > 0) {\n      end = mid - 1;\n    } else {\n      idx = mid;\n      break;\n    }\n  }\n  if (idx < 0) {\n    idx = end + 1;\n  }\n  queue.splice(idx, 0, info);\n};\n\n/**\n * Inserts all downstream computed effects invalidated by the specified property\n * into the topologically-sorted queue of effects to be run.\n *\n * Used by `orderedComputed: true` computed property algorithm.\n *\n * @param {string} prop Property name\n * @param {Object} computeEffects Computed effects for this element\n * @param {Array<Object>} queue Topologically-sorted queue of computed effects\n *   to be run\n * @param {Map<string,number>} order Map of computed property name->topological\n *   sort order\n * @param {boolean} hasPaths True with `changedProps` contains one or more paths\n */\nconst enqueueEffectsFor = (prop, computeEffects, queue, order, hasPaths) => {\n  const rootProperty = hasPaths ? root(prop) : prop;\n  const fxs = computeEffects[rootProperty];\n  if (fxs) {\n    for (let i=0; i<fxs.length; i++) {\n      const fx = fxs[i];\n      if ((fx.info.lastRun !== dedupeId) &&\n          (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n        fx.info.lastRun = dedupeId;\n        insertEffect(fx.info, queue, order);\n      }\n    }\n  }\n};\n\n/**\n * Generates and retrieves a memoized map of computed property name to its\n * topologically-sorted order.\n *\n * The map is generated by first assigning a \"dependency count\" to each property\n * (defined as number properties it depends on, including its method for\n * \"dynamic functions\"). Any properties that have no dependencies are added to\n * the `ready` queue, which are properties whose order can be added to the final\n * order map. Properties are popped off the `ready` queue one by one and a.) added as\n * the next property in the order map, and b.) each property that it is a\n * dependency for has its dep count decremented (and if that property's dep\n * count goes to zero, it is added to the `ready` queue), until all properties\n * have been visited and ordered.\n *\n * Used by `orderedComputed: true` computed property algorithm.\n *\n * @param {!Polymer_PropertyEffects} inst The instance to retrieve the computed\n *   effect order for.\n * @return {Map<string,number>} Map of computed property name->topological sort\n *   order\n */\nfunction getComputedOrder(inst) {\n  let ordered = inst.constructor.__orderedComputedDeps;\n  if (!ordered) {\n    ordered = new Map();\n    const effects = inst[TYPES.COMPUTE];\n    let {counts, ready, total} = dependencyCounts(inst);\n    let curr;\n    while ((curr = ready.shift())) {\n      ordered.set(curr, ordered.size);\n      const computedByCurr = effects[curr];\n      if (computedByCurr) {\n        computedByCurr.forEach(fx => {\n          // Note `methodInfo` is where the computed property name is stored\n          const computedProp = fx.info.methodInfo;\n          --total;\n          if (--counts[computedProp] === 0) {\n            ready.push(computedProp);\n          }\n        });\n      }\n    }\n    if (total !== 0) {\n      const el = /** @type {HTMLElement} */ (inst);\n      console.warn(`Computed graph for ${el.localName} incomplete; circular?`);\n    }\n    inst.constructor.__orderedComputedDeps = ordered;\n  }\n  return ordered;\n}\n\n/**\n * Generates a map of property-to-dependency count (`counts`, where \"dependency\n * count\" is the number of dependencies a given property has assuming it is a\n * computed property, otherwise 0).  It also returns a pre-populated list of\n * `ready` properties that have no dependencies and a `total` count, which is\n * used for error-checking the graph.\n *\n * Used by `orderedComputed: true` computed property algorithm.\n *\n * @param {!Polymer_PropertyEffects} inst The instance to generate dependency\n *   counts for.\n * @return {!Object} Object containing `counts` map (property-to-dependency\n *   count) and pre-populated `ready` array of properties that had zero\n *   dependencies.\n */\nfunction dependencyCounts(inst) {\n  const infoForComputed = inst[COMPUTE_INFO];\n  const counts = {};\n  const computedDeps = inst[TYPES.COMPUTE];\n  const ready = [];\n  let total = 0;\n  // Count dependencies for each computed property\n  for (let p in infoForComputed) {\n    const info = infoForComputed[p];\n    // Be sure to add the method name itself in case of \"dynamic functions\"\n    total += counts[p] =\n      info.args.filter(a => !a.literal).length + (info.dynamicFn ? 1 : 0);\n  }\n  // Build list of ready properties (that aren't themselves computed)\n  for (let p in computedDeps) {\n    if (!infoForComputed[p]) {\n      ready.push(p);\n    }\n  }\n  return {counts, ready, total};\n}\n\n/**\n * Implements the \"computed property\" effect by running the method with the\n * values of the arguments specified in the `info` object and setting the\n * return value to the computed property specified.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {?Object} changedProps Bag of current property changes\n * @param {?Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {boolean} True when the property being computed changed\n * @private\n */\nfunction runComputedEffect(inst, property, changedProps, oldProps, info) {\n  // Dirty check dependencies and run if any invalid\n  let result = runMethodEffect(inst, property, changedProps, oldProps, info);\n  // Abort if method returns a no-op result\n  if (result === NOOP) {\n    return false;\n  }\n  let computedProp = info.methodInfo;\n  if (inst.__dataHasAccessor && inst.__dataHasAccessor[computedProp]) {\n    return inst._setPendingProperty(computedProp, result, true);\n  } else {\n    inst[computedProp] = result;\n    return false;\n  }\n}\n\n/**\n * Computes path changes based on path links set up using the `linkPaths`\n * API.\n *\n * @param {!Polymer_PropertyEffects} inst The instance whose props are changing\n * @param {string} path Path that has changed\n * @param {*} value Value of changed path\n * @return {void}\n * @private\n */\nfunction computeLinkedPaths(inst, path, value) {\n  let links = inst.__dataLinkedPaths;\n  if (links) {\n    let link;\n    for (let a in links) {\n      let b = links[a];\n      if (isDescendant(a, path)) {\n        link = translate(a, b, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      } else if (isDescendant(b, path)) {\n        link = translate(b, a, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      }\n    }\n  }\n}\n\n// -- bindings ----------------------------------------------\n\n/**\n * Adds binding metadata to the current `nodeInfo`, and binding effects\n * for all part dependencies to `templateInfo`.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {NodeInfo} nodeInfo Node metadata for current template node\n * @param {string} kind Binding kind, either 'property', 'attribute', or 'text'\n * @param {string} target Target property name\n * @param {!Array<!BindingPart>} parts Array of binding part metadata\n * @param {string=} literal Literal text surrounding binding parts (specified\n *   only for 'property' bindings, since these must be initialized as part\n *   of boot-up)\n * @return {void}\n * @private\n */\nfunction addBinding(constructor, templateInfo, nodeInfo, kind, target, parts, literal) {\n  // Create binding metadata and add to nodeInfo\n  nodeInfo.bindings = nodeInfo.bindings || [];\n  let /** Binding */ binding = { kind, target, parts, literal, isCompound: (parts.length !== 1) };\n  nodeInfo.bindings.push(binding);\n  // Add listener info to binding metadata\n  if (shouldAddListener(binding)) {\n    let {event, negate} = binding.parts[0];\n    binding.listenerEvent = event || (camelToDashCase(target) + '-changed');\n    binding.listenerNegate = negate;\n  }\n  // Add \"propagate\" property effects to templateInfo\n  let index = templateInfo.nodeInfoList.length;\n  for (let i=0; i<binding.parts.length; i++) {\n    let part = binding.parts[i];\n    part.compoundIndex = i;\n    addEffectForBindingPart(constructor, templateInfo, binding, part, index);\n  }\n}\n\n/**\n * Adds property effects to the given `templateInfo` for the given binding\n * part.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {number} index Index into `nodeInfoList` for this node\n * @return {void}\n */\nfunction addEffectForBindingPart(constructor, templateInfo, binding, part, index) {\n  if (!part.literal) {\n    if (binding.kind === 'attribute' && binding.target[0] === '-') {\n      console.warn('Cannot set attribute ' + binding.target +\n        ' because \"-\" is not a valid attribute starting character');\n    } else {\n      let dependencies = part.dependencies;\n      let info = { index, binding, part, evaluator: constructor };\n      for (let j=0; j<dependencies.length; j++) {\n        let trigger = dependencies[j];\n        if (typeof trigger == 'string') {\n          trigger = parseArg(trigger);\n          trigger.wildcard = true;\n        }\n        constructor._addTemplatePropertyEffect(templateInfo, trigger.rootProperty, {\n          fn: runBindingEffect,\n          info, trigger\n        });\n      }\n    }\n  }\n}\n\n/**\n * Implements the \"binding\" (property/path binding) effect.\n *\n * Note that binding syntax is overridable via `_parseBindings` and\n * `_evaluateBinding`.  This method will call `_evaluateBinding` for any\n * non-literal parts returned from `_parseBindings`.  However,\n * there is no support for _path_ bindings via custom binding parts,\n * as this is specific to Polymer's path binding syntax.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} path Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @param {Array} nodeList List of nodes associated with `nodeInfoList` template\n *   metadata\n * @return {void}\n * @private\n */\nfunction runBindingEffect(inst, path, props, oldProps, info, hasPaths, nodeList) {\n  let node = nodeList[info.index];\n  let binding = info.binding;\n  let part = info.part;\n  // Subpath notification: transform path and set to client\n  // e.g.: foo=\"{{obj.sub}}\", path: 'obj.sub.prop', set 'foo.prop'=obj.sub.prop\n  if (hasPaths && part.source && (path.length > part.source.length) &&\n      (binding.kind == 'property') && !binding.isCompound &&\n      node.__isPropertyEffectsClient &&\n      node.__dataHasAccessor && node.__dataHasAccessor[binding.target]) {\n    let value = props[path];\n    path = translate(part.source, binding.target, path);\n    if (node._setPendingPropertyOrPath(path, value, false, true)) {\n      inst._enqueueClient(node);\n    }\n  } else {\n    let value = info.evaluator._evaluateBinding(inst, part, path, props, oldProps, hasPaths);\n    // Propagate value to child\n    // Abort if value is a no-op result\n    if (value !== NOOP) {\n      applyBindingValue(inst, node, binding, part, value);\n    }\n  }\n}\n\n/**\n * Sets the value for an \"binding\" (binding) effect to a node,\n * either as a property or attribute.\n *\n * @param {!Polymer_PropertyEffects} inst The instance owning the binding effect\n * @param {Node} node Target node for binding\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {*} value Value to set\n * @return {void}\n * @private\n */\nfunction applyBindingValue(inst, node, binding, part, value) {\n  value = computeBindingValue(node, value, binding, part);\n  if (sanitizeDOMValue) {\n    value = sanitizeDOMValue(value, binding.target, binding.kind, node);\n  }\n  if (binding.kind == 'attribute') {\n    // Attribute binding\n    inst._valueToNodeAttribute(/** @type {Element} */(node), value, binding.target);\n  } else {\n    // Property binding\n    let prop = binding.target;\n    if (node.__isPropertyEffectsClient &&\n        node.__dataHasAccessor && node.__dataHasAccessor[prop]) {\n      if (!node[TYPES.READ_ONLY] || !node[TYPES.READ_ONLY][prop]) {\n        if (node._setPendingProperty(prop, value)) {\n          inst._enqueueClient(node);\n        }\n      }\n    } else {\n      // In legacy no-batching mode, bindings applied before dataReady are\n      // equivalent to the \"apply config\" phase, which only set managed props\n      inst._setUnmanagedPropertyToNode(node, prop, value);\n    }\n  }\n}\n\n/**\n * Transforms an \"binding\" effect value based on compound & negation\n * effect metadata, as well as handling for special-case properties\n *\n * @param {Node} node Node the value will be set to\n * @param {*} value Value to set\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @return {*} Transformed value to set\n * @private\n */\nfunction computeBindingValue(node, value, binding, part) {\n  if (binding.isCompound) {\n    let storage = node.__dataCompoundStorage[binding.target];\n    storage[part.compoundIndex] = value;\n    value = storage.join('');\n  }\n  if (binding.kind !== 'attribute') {\n    // Some browsers serialize `undefined` to `\"undefined\"`\n    if (binding.target === 'textContent' ||\n        (binding.target === 'value' &&\n          (node.localName === 'input' || node.localName === 'textarea'))) {\n      value = value == undefined ? '' : value;\n    }\n  }\n  return value;\n}\n\n/**\n * Returns true if a binding's metadata meets all the requirements to allow\n * 2-way binding, and therefore a `<property>-changed` event listener should be\n * added:\n * - used curly braces\n * - is a property (not attribute) binding\n * - is not a textContent binding\n * - is not compound\n *\n * @param {!Binding} binding Binding metadata\n * @return {boolean} True if 2-way listener should be added\n * @private\n */\nfunction shouldAddListener(binding) {\n  return Boolean(binding.target) &&\n         binding.kind != 'attribute' &&\n         binding.kind != 'text' &&\n         !binding.isCompound &&\n         binding.parts[0].mode === '{';\n}\n\n/**\n * Setup compound binding storage structures, notify listeners, and dataHost\n * references onto the bound nodeList.\n *\n * @param {!Polymer_PropertyEffects} inst Instance that bas been previously\n *     bound\n * @param {TemplateInfo} templateInfo Template metadata\n * @return {void}\n * @private\n */\nfunction setupBindings(inst, templateInfo) {\n  // Setup compound storage, dataHost, and notify listeners\n  let {nodeList, nodeInfoList} = templateInfo;\n  if (nodeInfoList.length) {\n    for (let i=0; i < nodeInfoList.length; i++) {\n      let info = nodeInfoList[i];\n      let node = nodeList[i];\n      let bindings = info.bindings;\n      if (bindings) {\n        for (let i=0; i<bindings.length; i++) {\n          let binding = bindings[i];\n          setupCompoundStorage(node, binding);\n          addNotifyListener(node, inst, binding);\n        }\n      }\n      // This ensures all bound elements have a host set, regardless\n      // of whether they upgrade synchronous to creation\n      node.__dataHost = inst;\n    }\n  }\n}\n\n/**\n * Initializes `__dataCompoundStorage` local storage on a bound node with\n * initial literal data for compound bindings, and sets the joined\n * literal parts to the bound property.\n *\n * When changes to compound parts occur, they are first set into the compound\n * storage array for that property, and then the array is joined to result in\n * the final value set to the property/attribute.\n *\n * @param {Node} node Bound node to initialize\n * @param {Binding} binding Binding metadata\n * @return {void}\n * @private\n */\nfunction setupCompoundStorage(node, binding) {\n  if (binding.isCompound) {\n    // Create compound storage map\n    let storage = node.__dataCompoundStorage ||\n      (node.__dataCompoundStorage = {});\n    let parts = binding.parts;\n    // Copy literals from parts into storage for this binding\n    let literals = new Array(parts.length);\n    for (let j=0; j<parts.length; j++) {\n      literals[j] = parts[j].literal;\n    }\n    let target = binding.target;\n    storage[target] = literals;\n    // Configure properties with their literal parts\n    if (binding.literal && binding.kind == 'property') {\n      // Note, className needs style scoping so this needs wrapping.\n      // We may also want to consider doing this for `textContent` and\n      // `innerHTML`.\n      if (target === 'className') {\n        node = wrap(node);\n      }\n      node[target] = binding.literal;\n    }\n  }\n}\n\n/**\n * Adds a 2-way binding notification event listener to the node specified\n *\n * @param {Object} node Child element to add listener to\n * @param {!Polymer_PropertyEffects} inst Host element instance to handle\n *     notification event\n * @param {Binding} binding Binding metadata\n * @return {void}\n * @private\n */\nfunction addNotifyListener(node, inst, binding) {\n  if (binding.listenerEvent) {\n    let part = binding.parts[0];\n    node.addEventListener(binding.listenerEvent, function(e) {\n      handleNotification(e, inst, binding.target, part.source, part.negate);\n    });\n  }\n}\n\n// -- for method-based effects (complexObserver & computed) --------------\n\n/**\n * Adds property effects for each argument in the method signature (and\n * optionally, for the method name if `dynamic` is true) that calls the\n * provided effect function.\n *\n * @param {Element | Object} model Prototype or instance\n * @param {!MethodSignature} sig Method signature metadata\n * @param {string} type Type of property effect to add\n * @param {Function} effectFn Function to run when arguments change\n * @param {*=} methodInfo Effect-specific information to be included in\n *   method effect metadata\n * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n *   method names should be included as a dependency to the effect. Note,\n *   defaults to true if the signature is static (sig.static is true).\n * @return {!Object} Effect metadata for this method effect\n * @private\n */\nfunction createMethodEffect(model, sig, type, effectFn, methodInfo, dynamicFn) {\n  dynamicFn = sig.static || (dynamicFn &&\n    (typeof dynamicFn !== 'object' || dynamicFn[sig.methodName]));\n  let info = {\n    methodName: sig.methodName,\n    args: sig.args,\n    methodInfo,\n    dynamicFn\n  };\n  for (let i=0, arg; (i<sig.args.length) && (arg=sig.args[i]); i++) {\n    if (!arg.literal) {\n      model._addPropertyEffect(arg.rootProperty, type, {\n        fn: effectFn, info: info, trigger: arg\n      });\n    }\n  }\n  if (dynamicFn) {\n    model._addPropertyEffect(sig.methodName, type, {\n      fn: effectFn, info: info\n    });\n  }\n  return info;\n}\n\n/**\n * Calls a method with arguments marshaled from properties on the instance\n * based on the method signature contained in the effect metadata.\n *\n * Multi-property observers, computed properties, and inline computing\n * functions call this function to invoke the method, then use the return\n * value accordingly.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {*} Returns the return value from the method invocation\n * @private\n */\nfunction runMethodEffect(inst, property, props, oldProps, info) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  let context = inst._methodHost || inst;\n  let fn = context[info.methodName];\n  if (fn) {\n    let args = inst._marshalArgs(info.args, property, props);\n    return args === NOOP ? NOOP : fn.apply(context, args);\n  } else if (!info.dynamicFn) {\n    console.warn('method `' + info.methodName + '` not defined');\n  }\n}\n\nconst emptyArray = [];\n\n// Regular expressions used for binding\nconst IDENT  = '(?:' + '[a-zA-Z_$][\\\\w.:$\\\\-*]*' + ')';\nconst NUMBER = '(?:' + '[-+]?[0-9]*\\\\.?[0-9]+(?:[eE][-+]?[0-9]+)?' + ')';\nconst SQUOTE_STRING = '(?:' + '\\'(?:[^\\'\\\\\\\\]|\\\\\\\\.)*\\'' + ')';\nconst DQUOTE_STRING = '(?:' + '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"' + ')';\nconst STRING = '(?:' + SQUOTE_STRING + '|' + DQUOTE_STRING + ')';\nconst ARGUMENT = '(?:(' + IDENT + '|' + NUMBER + '|' +  STRING + ')\\\\s*' + ')';\nconst ARGUMENTS = '(?:' + ARGUMENT + '(?:,\\\\s*' + ARGUMENT + ')*' + ')';\nconst ARGUMENT_LIST = '(?:' + '\\\\(\\\\s*' +\n                              '(?:' + ARGUMENTS + '?' + ')' +\n                            '\\\\)\\\\s*' + ')';\nconst BINDING = '(' + IDENT + '\\\\s*' + ARGUMENT_LIST + '?' + ')'; // Group 3\nconst OPEN_BRACKET = '(\\\\[\\\\[|{{)' + '\\\\s*';\nconst CLOSE_BRACKET = '(?:]]|}})';\nconst NEGATE = '(?:(!)\\\\s*)?'; // Group 2\nconst EXPRESSION = OPEN_BRACKET + NEGATE + BINDING + CLOSE_BRACKET;\nconst bindingRegex = new RegExp(EXPRESSION, \"g\");\n\n/**\n * Create a string from binding parts of all the literal parts\n *\n * @param {!Array<BindingPart>} parts All parts to stringify\n * @return {string} String made from the literal parts\n */\nfunction literalFromParts(parts) {\n  let s = '';\n  for (let i=0; i<parts.length; i++) {\n    let literal = parts[i].literal;\n    s += literal || '';\n  }\n  return s;\n}\n\n/**\n * Parses an expression string for a method signature, and returns a metadata\n * describing the method in terms of `methodName`, `static` (whether all the\n * arguments are literals), and an array of `args`\n *\n * @param {string} expression The expression to parse\n * @return {?MethodSignature} The method metadata object if a method expression was\n *   found, otherwise `undefined`\n * @private\n */\nfunction parseMethod(expression) {\n  // tries to match valid javascript property names\n  let m = expression.match(/([^\\s]+?)\\(([\\s\\S]*)\\)/);\n  if (m) {\n    let methodName = m[1];\n    let sig = { methodName, static: true, args: emptyArray };\n    if (m[2].trim()) {\n      // replace escaped commas with comma entity, split on un-escaped commas\n      let args = m[2].replace(/\\\\,/g, '&comma;').split(',');\n      return parseArgs(args, sig);\n    } else {\n      return sig;\n    }\n  }\n  return null;\n}\n\n/**\n * Parses an array of arguments and sets the `args` property of the supplied\n * signature metadata object. Sets the `static` property to false if any\n * argument is a non-literal.\n *\n * @param {!Array<string>} argList Array of argument names\n * @param {!MethodSignature} sig Method signature metadata object\n * @return {!MethodSignature} The updated signature metadata object\n * @private\n */\nfunction parseArgs(argList, sig) {\n  sig.args = argList.map(function(rawArg) {\n    let arg = parseArg(rawArg);\n    if (!arg.literal) {\n      sig.static = false;\n    }\n    return arg;\n  }, this);\n  return sig;\n}\n\n/**\n * Parses an individual argument, and returns an argument metadata object\n * with the following fields:\n *\n *   {\n *     value: 'prop',        // property/path or literal value\n *     literal: false,       // whether argument is a literal\n *     structured: false,    // whether the property is a path\n *     rootProperty: 'prop', // the root property of the path\n *     wildcard: false       // whether the argument was a wildcard '.*' path\n *   }\n *\n * @param {string} rawArg The string value of the argument\n * @return {!MethodArg} Argument metadata object\n * @private\n */\nfunction parseArg(rawArg) {\n  // clean up whitespace\n  let arg = rawArg.trim()\n    // replace comma entity with comma\n    .replace(/&comma;/g, ',')\n    // repair extra escape sequences; note only commas strictly need\n    // escaping, but we allow any other char to be escaped since its\n    // likely users will do this\n    .replace(/\\\\(.)/g, '$1')\n    ;\n  // basic argument descriptor\n  let a = {\n    name: arg,\n    value: '',\n    literal: false\n  };\n  // detect literal value (must be String or Number)\n  let fc = arg[0];\n  if (fc === '-') {\n    fc = arg[1];\n  }\n  if (fc >= '0' && fc <= '9') {\n    fc = '#';\n  }\n  switch(fc) {\n    case \"'\":\n    case '\"':\n      a.value = arg.slice(1, -1);\n      a.literal = true;\n      break;\n    case '#':\n      a.value = Number(arg);\n      a.literal = true;\n      break;\n  }\n  // if not literal, look for structured path\n  if (!a.literal) {\n    a.rootProperty = root(arg);\n    // detect structured path (has dots)\n    a.structured = isPath(arg);\n    if (a.structured) {\n      a.wildcard = (arg.slice(-2) == '.*');\n      if (a.wildcard) {\n        a.name = arg.slice(0, -2);\n      }\n    }\n  }\n  return a;\n}\n\nfunction getArgValue(data, props, path) {\n  let value = get(data, path);\n  // when data is not stored e.g. `splices`, get the value from changedProps\n  // TODO(kschaaf): Note, this can cause a rare issue where the wildcard\n  // info.value could pull a stale value out of changedProps during a reentrant\n  // change that sets the value back to undefined.\n  // https://github.com/Polymer/polymer/issues/5479\n  if (value === undefined) {\n    value = props[path];\n  }\n  return value;\n}\n\n// data api\n\n/**\n * Sends array splice notifications (`.splices` and `.length`)\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!Polymer_PropertyEffects} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {Array} splices Array of splice records\n * @return {void}\n * @private\n */\nfunction notifySplices(inst, array, path, splices) {\n  const splicesData = { indexSplices: splices };\n  // Legacy behavior stored splices in `__data__` so it was *not* ephemeral.\n  // To match this behavior, we store splices directly on the array.\n  if (legacyUndefined && !inst._overrideLegacyUndefined) {\n    array.splices = splicesData;\n  }\n  inst.notifyPath(path + '.splices', splicesData);\n  inst.notifyPath(path + '.length', array.length);\n  // Clear splice data only when it's stored on the array.\n  if (legacyUndefined && !inst._overrideLegacyUndefined) {\n    splicesData.indexSplices = [];\n  }\n}\n\n/**\n * Creates a splice record and sends an array splice notification for\n * the described mutation\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!Polymer_PropertyEffects} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {number} index Index at which the array mutation occurred\n * @param {number} addedCount Number of added items\n * @param {Array} removed Array of removed items\n * @return {void}\n * @private\n */\nfunction notifySplice(inst, array, path, index, addedCount, removed) {\n  notifySplices(inst, array, path, [{\n    index: index,\n    addedCount: addedCount,\n    removed: removed,\n    object: array,\n    type: 'splice'\n  }]);\n}\n\n/**\n * Returns an upper-cased version of the string.\n *\n * @param {string} name String to uppercase\n * @return {string} Uppercased string\n * @private\n */\nfunction upper(name) {\n  return name[0].toUpperCase() + name.substring(1);\n}\n\n/**\n * Element class mixin that provides meta-programming for Polymer's template\n * binding and data observation (collectively, \"property effects\") system.\n *\n * This mixin uses provides the following key static methods for adding\n * property effects to an element class:\n * - `addPropertyEffect`\n * - `createPropertyObserver`\n * - `createMethodObserver`\n * - `createNotifyingProperty`\n * - `createReadOnlyProperty`\n * - `createReflectedProperty`\n * - `createComputedProperty`\n * - `bindTemplate`\n *\n * Each method creates one or more property accessors, along with metadata\n * used by this mixin's implementation of `_propertiesChanged` to perform\n * the property effects.\n *\n * Underscored versions of the above methods also exist on the element\n * prototype for adding property effects on instances at runtime.\n *\n * Note that this mixin overrides several `PropertyAccessors` methods, in\n * many cases to maintain guarantees provided by the Polymer 1.x features;\n * notably it changes property accessors to be synchronous by default\n * whereas the default when using `PropertyAccessors` standalone is to be\n * async by default.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin TemplateStamp\n * @appliesMixin PropertyAccessors\n * @summary Element class mixin that provides meta-programming for Polymer's\n * template binding and data observation system.\n */\nexport const PropertyEffects = dedupingMixin(superClass => {\n\n  /**\n   * @constructor\n   * @implements {Polymer_PropertyAccessors}\n   * @implements {Polymer_TemplateStamp}\n   * @unrestricted\n   * @private\n   */\n  const propertyEffectsBase = TemplateStamp(PropertyAccessors(superClass));\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyEffects}\n   * @extends {propertyEffectsBase}\n   * @unrestricted\n   */\n  class PropertyEffects extends propertyEffectsBase {\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      // Used to identify users of this mixin, ala instanceof\n      this.__isPropertyEffectsClient = true;\n      /** @type {boolean} */\n      this.__dataClientsReady;\n      /** @type {Array} */\n      this.__dataPendingClients;\n      /** @type {Object} */\n      this.__dataToNotify;\n      /** @type {Object} */\n      this.__dataLinkedPaths;\n      /** @type {boolean} */\n      this.__dataHasPaths;\n      /** @type {Object} */\n      this.__dataCompoundStorage;\n      /** @type {Polymer_PropertyEffects} */\n      this.__dataHost;\n      /** @type {!Object} */\n      this.__dataTemp;\n      /** @type {boolean} */\n      this.__dataClientsInitialized;\n      /** @type {!Object} */\n      this.__data;\n      /** @type {!Object|null} */\n      this.__dataPending;\n      /** @type {!Object} */\n      this.__dataOld;\n      /** @type {Object} */\n      this.__computeEffects;\n      /** @type {Object} */\n      this.__computeInfo;\n      /** @type {Object} */\n      this.__reflectEffects;\n      /** @type {Object} */\n      this.__notifyEffects;\n      /** @type {Object} */\n      this.__propagateEffects;\n      /** @type {Object} */\n      this.__observeEffects;\n      /** @type {Object} */\n      this.__readOnly;\n      /** @type {!TemplateInfo} */\n      this.__templateInfo;\n      /** @type {boolean} */\n      this._overrideLegacyUndefined;\n    }\n\n    get PROPERTY_EFFECT_TYPES() {\n      return TYPES;\n    }\n\n    /**\n     * @override\n     * @return {void}\n     */\n    _initializeProperties() {\n      super._initializeProperties();\n      this._registerHost();\n      this.__dataClientsReady = false;\n      this.__dataPendingClients = null;\n      this.__dataToNotify = null;\n      this.__dataLinkedPaths = null;\n      this.__dataHasPaths = false;\n      // May be set on instance prior to upgrade\n      this.__dataCompoundStorage = this.__dataCompoundStorage || null;\n      this.__dataHost = this.__dataHost || null;\n      this.__dataTemp = {};\n      this.__dataClientsInitialized = false;\n    }\n\n    _registerHost() {\n      if (hostStack.length) {\n        let host = hostStack[hostStack.length-1];\n        host._enqueueClient(this);\n        // This ensures even non-bound elements have a host set, as\n        // long as they upgrade synchronously\n        this.__dataHost = host;\n      }\n    }\n\n    /**\n     * Overrides `PropertyAccessors` implementation to provide a\n     * more efficient implementation of initializing properties from\n     * the prototype on the instance.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the prototype\n     * @return {void}\n     */\n    _initializeProtoProperties(props) {\n      this.__data = Object.create(props);\n      this.__dataPending = Object.create(props);\n      this.__dataOld = {};\n    }\n\n    /**\n     * Overrides `PropertyAccessors` implementation to avoid setting\n     * `_setProperty`'s `shouldNotify: true`.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the instance\n     * @return {void}\n     */\n    _initializeInstanceProperties(props) {\n      let readOnly = this[TYPES.READ_ONLY];\n      for (let prop in props) {\n        if (!readOnly || !readOnly[prop]) {\n          this.__dataPending = this.__dataPending || {};\n          this.__dataOld = this.__dataOld || {};\n          this.__data[prop] = this.__dataPending[prop] = props[prop];\n        }\n      }\n    }\n\n    // Prototype setup ----------------------------------------\n\n    /**\n     * Equivalent to static `addPropertyEffect` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     */\n    _addPropertyEffect(property, type, effect) {\n      this._createPropertyAccessor(property, type == TYPES.READ_ONLY);\n      // effects are accumulated into arrays per property based on type\n      let effects = ensureOwnEffectMap(this, type, true)[property];\n      if (!effects) {\n        effects = this[type][property] = [];\n      }\n      effects.push(effect);\n    }\n\n    /**\n     * Removes the given property effect.\n     *\n     * @override\n     * @param {string} property Property the effect was associated with\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object to remove\n     * @return {void}\n     */\n    _removePropertyEffect(property, type, effect) {\n      let effects = ensureOwnEffectMap(this, type, true)[property];\n      let idx = effects.indexOf(effect);\n      if (idx >= 0) {\n        effects.splice(idx, 1);\n      }\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a property effect\n     * of a certain type.\n     *\n     * @override\n     * @param {string} property Property name\n     * @param {string=} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasPropertyEffect(property, type) {\n      let effects = this[type];\n      return Boolean(effects && effects[property]);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"read only\"\n     * accessor for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasReadOnlyEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.READ_ONLY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"notify\"\n     * property effect for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasNotifyEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.NOTIFY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"reflect to\n     * attribute\" property effect for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasReflectEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.REFLECT);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"computed\"\n     * property effect for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasComputedEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.COMPUTE);\n    }\n\n    // Runtime ----------------------------------------\n\n    /**\n     * Sets a pending property or path.  If the root property of the path in\n     * question had no accessor, the path is set, otherwise it is enqueued\n     * via `_setPendingProperty`.\n     *\n     * This function isolates relatively expensive functionality necessary\n     * for the public API (`set`, `setProperties`, `notifyPath`, and property\n     * change listeners via {{...}} bindings), such that it is only done\n     * when paths enter the system, and not at every propagation step.  It\n     * also sets a `__dataHasPaths` flag on the instance which is used to\n     * fast-path slower path-matching code in the property effects host paths.\n     *\n     * `path` can be a path string or array of path parts as accepted by the\n     * public API.\n     *\n     * @override\n     * @param {string | !Array<number|string>} path Path to set\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify Set to true if this change should\n     *  cause a property notification event dispatch\n     * @param {boolean=} isPathNotification If the path being set is a path\n     *   notification of an already changed value, as opposed to a request\n     *   to set and notify the change.  In the latter `false` case, a dirty\n     *   check is performed and then the value is set to the path before\n     *   enqueuing the pending property change.\n     * @return {boolean} Returns true if the property/path was enqueued in\n     *   the pending changes bag.\n     * @protected\n     */\n    _setPendingPropertyOrPath(path, value, shouldNotify, isPathNotification) {\n      if (isPathNotification ||\n          root(Array.isArray(path) ? path[0] : path) !== path) {\n        // Dirty check changes being set to a path against the actual object,\n        // since this is the entry point for paths into the system; from here\n        // the only dirty checks are against the `__dataTemp` cache to prevent\n        // duplicate work in the same turn only. Note, if this was a notification\n        // of a change already set to a path (isPathNotification: true),\n        // we always let the change through and skip the `set` since it was\n        // already dirty checked at the point of entry and the underlying\n        // object has already been updated\n        if (!isPathNotification) {\n          let old = get(this, path);\n          path = /** @type {string} */ (set(this, path, value));\n          // Use property-accessor's simpler dirty check\n          if (!path || !super._shouldPropertyChange(path, value, old)) {\n            return false;\n          }\n        }\n        this.__dataHasPaths = true;\n        if (this._setPendingProperty(/**@type{string}*/(path), value, shouldNotify)) {\n          computeLinkedPaths(this, /**@type{string}*/ (path), value);\n          return true;\n        }\n      } else {\n        if (this.__dataHasAccessor && this.__dataHasAccessor[path]) {\n          return this._setPendingProperty(/**@type{string}*/(path), value, shouldNotify);\n        } else {\n          this[path] = value;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Applies a value to a non-Polymer element/node's property.\n     *\n     * The implementation makes a best-effort at binding interop:\n     * Some native element properties have side-effects when\n     * re-setting the same value (e.g. setting `<input>.value` resets the\n     * cursor position), so we do a dirty-check before setting the value.\n     * However, for better interop with non-Polymer custom elements that\n     * accept objects, we explicitly re-set object changes coming from the\n     * Polymer world (which may include deep object changes without the\n     * top reference changing), erring on the side of providing more\n     * information.\n     *\n     * Users may override this method to provide alternate approaches.\n     *\n     * @override\n     * @param {!Node} node The node to set a property on\n     * @param {string} prop The property to set\n     * @param {*} value The value to set\n     * @return {void}\n     * @protected\n     */\n    _setUnmanagedPropertyToNode(node, prop, value) {\n      // It is a judgment call that resetting primitives is\n      // \"bad\" and resettings objects is also \"good\"; alternatively we could\n      // implement a whitelist of tag & property values that should never\n      // be reset (e.g. <input>.value && <select>.value)\n      if (value !== node[prop] || typeof value == 'object') {\n        // Note, className needs style scoping so this needs wrapping.\n        if (prop === 'className') {\n          node = /** @type {!Node} */(wrap(node));\n        }\n        node[prop] = value;\n      }\n    }\n\n    /**\n     * Overrides the `PropertiesChanged` implementation to introduce special\n     * dirty check logic depending on the property & value being set:\n     *\n     * 1. Any value set to a path (e.g. 'obj.prop': 42 or 'obj.prop': {...})\n     *    Stored in `__dataTemp`, dirty checked against `__dataTemp`\n     * 2. Object set to simple property (e.g. 'prop': {...})\n     *    Stored in `__dataTemp` and `__data`, dirty checked against\n     *    `__dataTemp` by default implementation of `_shouldPropertyChange`\n     * 3. Primitive value set to simple property (e.g. 'prop': 42)\n     *    Stored in `__data`, dirty checked against `__data`\n     *\n     * The dirty-check is important to prevent cycles due to two-way\n     * notification, but paths and objects are only dirty checked against any\n     * previous value set during this turn via a \"temporary cache\" that is\n     * cleared when the last `_propertiesChanged` exits. This is so:\n     * a. any cached array paths (e.g. 'array.3.prop') may be invalidated\n     *    due to array mutations like shift/unshift/splice; this is fine\n     *    since path changes are dirty-checked at user entry points like `set`\n     * b. dirty-checking for objects only lasts one turn to allow the user\n     *    to mutate the object in-place and re-set it with the same identity\n     *    and have all sub-properties re-propagated in a subsequent turn.\n     *\n     * The temp cache is not necessarily sufficient to prevent invalid array\n     * paths, since a splice can happen during the same turn (with pathological\n     * user code); we could introduce a \"fixup\" for temporarily cached array\n     * paths if needed: https://github.com/Polymer/polymer/issues/4227\n     *\n     * @override\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify True if property should fire notification\n     *   event (applies only for `notify: true` properties)\n     * @return {boolean} Returns true if the property changed\n     */\n    _setPendingProperty(property, value, shouldNotify) {\n      let propIsPath = this.__dataHasPaths && isPath(property);\n      let prevProps = propIsPath ? this.__dataTemp : this.__data;\n      if (this._shouldPropertyChange(property, value, prevProps[property])) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (!(property in this.__dataOld)) {\n          this.__dataOld[property] = this.__data[property];\n        }\n        // Paths are stored in temporary cache (cleared at end of turn),\n        // which is used for dirty-checking, all others stored in __data\n        if (propIsPath) {\n          this.__dataTemp[property] = value;\n        } else {\n          this.__data[property] = value;\n        }\n        // All changes go into pending property bag, passed to _propertiesChanged\n        this.__dataPending[property] = value;\n        // Track properties that should notify separately\n        if (propIsPath || (this[TYPES.NOTIFY] && this[TYPES.NOTIFY][property])) {\n          this.__dataToNotify = this.__dataToNotify || {};\n          this.__dataToNotify[property] = shouldNotify;\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Overrides base implementation to ensure all accessors set `shouldNotify`\n     * to true, for per-property notification tracking.\n     *\n     * @override\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @return {void}\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Overrides `PropertyAccessor`'s default async queuing of\n     * `_propertiesChanged`: if `__dataReady` is false (has not yet been\n     * manually flushed), the function no-ops; otherwise flushes\n     * `_propertiesChanged` synchronously.\n     *\n     * @override\n     * @return {void}\n     */\n    _invalidateProperties() {\n      if (this.__dataReady) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Enqueues the given client on a list of pending clients, whose\n     * pending property changes can later be flushed via a call to\n     * `_flushClients`.\n     *\n     * @override\n     * @param {Object} client PropertyEffects client to enqueue\n     * @return {void}\n     * @protected\n     */\n    _enqueueClient(client) {\n      this.__dataPendingClients = this.__dataPendingClients || [];\n      if (client !== this) {\n        this.__dataPendingClients.push(client);\n      }\n    }\n\n    /**\n     * Flushes any clients previously enqueued via `_enqueueClient`, causing\n     * their `_flushProperties` method to run.\n     *\n     * @override\n     * @return {void}\n     * @protected\n     */\n    _flushClients() {\n      if (!this.__dataClientsReady) {\n        this.__dataClientsReady = true;\n        this._readyClients();\n        // Override point where accessors are turned on; importantly,\n        // this is after clients have fully readied, providing a guarantee\n        // that any property effects occur only after all clients are ready.\n        this.__dataReady = true;\n      } else {\n        this.__enableOrFlushClients();\n      }\n    }\n\n    // NOTE: We ensure clients either enable or flush as appropriate. This\n    // handles two corner cases:\n    // (1) clients flush properly when connected/enabled before the host\n    // enables; e.g.\n    //   (a) Templatize stamps with no properties and does not flush and\n    //   (b) the instance is inserted into dom and\n    //   (c) then the instance flushes.\n    // (2) clients enable properly when not connected/enabled when the host\n    // flushes; e.g.\n    //   (a) a template is runtime stamped and not yet connected/enabled\n    //   (b) a host sets a property, causing stamped dom to flush\n    //   (c) the stamped dom enables.\n    __enableOrFlushClients() {\n      let clients = this.__dataPendingClients;\n      if (clients) {\n        this.__dataPendingClients = null;\n        for (let i=0; i < clients.length; i++) {\n          let client = clients[i];\n          if (!client.__dataEnabled) {\n            client._enableProperties();\n          } else if (client.__dataPending) {\n            client._flushProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Perform any initial setup on client dom. Called before the first\n     * `_flushProperties` call on client dom and before any element\n     * observers are called.\n     *\n     * @override\n     * @return {void}\n     * @protected\n     */\n    _readyClients() {\n      this.__enableOrFlushClients();\n    }\n\n    /**\n     * Sets a bag of property changes to this instance, and\n     * synchronously processes all effects of the properties as a batch.\n     *\n     * Property names must be simple properties, not paths.  Batched\n     * path propagation is not supported.\n     *\n     * @override\n     * @param {Object} props Bag of one or more key-value pairs whose key is\n     *   a property and value is the new value to set for that property.\n     * @param {boolean=} setReadOnly When true, any private values set in\n     *   `props` will be set. By default, `setProperties` will not set\n     *   `readOnly: true` root properties.\n     * @return {void}\n     * @public\n     */\n    setProperties(props, setReadOnly) {\n      for (let path in props) {\n        if (setReadOnly || !this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][path]) {\n          //TODO(kschaaf): explicitly disallow paths in setProperty?\n          // wildcard observers currently only pass the first changed path\n          // in the `info` object, and you could do some odd things batching\n          // paths, e.g. {'foo.bar': {...}, 'foo': null}\n          this._setPendingPropertyOrPath(path, props[path], true);\n        }\n      }\n      this._invalidateProperties();\n    }\n\n    /**\n     * Overrides `PropertyAccessors` so that property accessor\n     * side effects are not enabled until after client dom is fully ready.\n     * Also calls `_flushClients` callback to ensure client dom is enabled\n     * that was not enabled as a result of flushing properties.\n     *\n     * @override\n     * @return {void}\n     */\n    ready() {\n      // It is important that `super.ready()` is not called here as it\n      // immediately turns on accessors. Instead, we wait until `readyClients`\n      // to enable accessors to provide a guarantee that clients are ready\n      // before processing any accessors side effects.\n      this._flushProperties();\n      // If no data was pending, `_flushProperties` will not `flushClients`\n      // so ensure this is done.\n      if (!this.__dataClientsReady) {\n        this._flushClients();\n      }\n      // Before ready, client notifications do not trigger _flushProperties.\n      // Therefore a flush is necessary here if data has been set.\n      if (this.__dataPending) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Implements `PropertyAccessors`'s properties changed callback.\n     *\n     * Runs each class of effects for the batch of changed properties in\n     * a specific order (compute, propagate, reflect, observe, notify).\n     *\n     * @override\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {?Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {?Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {void}\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) {\n      // ----------------------------\n      // let c = Object.getOwnPropertyNames(changedProps || {});\n      // window.debug && console.group(this.localName + '#' + this.id + ': ' + c);\n      // if (window.debug) { debugger; }\n      // ----------------------------\n      let hasPaths = this.__dataHasPaths;\n      this.__dataHasPaths = false;\n      let notifyProps;\n      // Compute properties\n      runComputedEffects(this, changedProps, oldProps, hasPaths);\n      // Clear notify properties prior to possible reentry (propagate, observe),\n      // but after computing effects have a chance to add to them\n      notifyProps = this.__dataToNotify;\n      this.__dataToNotify = null;\n      // Propagate properties to clients\n      this._propagatePropertyChanges(changedProps, oldProps, hasPaths);\n      // Flush clients\n      this._flushClients();\n      // Reflect properties\n      runEffects(this, this[TYPES.REFLECT], changedProps, oldProps, hasPaths);\n      // Observe properties\n      runEffects(this, this[TYPES.OBSERVE], changedProps, oldProps, hasPaths);\n      // Notify properties to host\n      if (notifyProps) {\n        runNotifyEffects(this, notifyProps, changedProps, oldProps, hasPaths);\n      }\n      // Clear temporary cache at end of turn\n      if (this.__dataCounter == 1) {\n        this.__dataTemp = {};\n      }\n      // ----------------------------\n      // window.debug && console.groupEnd(this.localName + '#' + this.id + ': ' + c);\n      // ----------------------------\n    }\n\n    /**\n     * Called to propagate any property changes to stamped template nodes\n     * managed by this element.\n     *\n     * @override\n     * @param {Object} changedProps Bag of changed properties\n     * @param {Object} oldProps Bag of previous values for changed properties\n     * @param {boolean} hasPaths True with `props` contains one or more paths\n     * @return {void}\n     * @protected\n     */\n    _propagatePropertyChanges(changedProps, oldProps, hasPaths) {\n      if (this[TYPES.PROPAGATE]) {\n        runEffects(this, this[TYPES.PROPAGATE], changedProps, oldProps, hasPaths);\n      }\n      if (this.__templateInfo) {\n        this._runEffectsForTemplate(this.__templateInfo, changedProps, oldProps, hasPaths);\n      }\n    }\n\n    _runEffectsForTemplate(templateInfo, changedProps, oldProps, hasPaths) {\n      const baseRunEffects = (changedProps, hasPaths) => {\n        runEffects(this, templateInfo.propertyEffects, changedProps, oldProps,\n          hasPaths, templateInfo.nodeList);\n        for (let info=templateInfo.firstChild; info; info=info.nextSibling) {\n          this._runEffectsForTemplate(info, changedProps, oldProps, hasPaths);\n        }\n      };\n      if (templateInfo.runEffects) {\n        templateInfo.runEffects(baseRunEffects, changedProps, hasPaths);\n      } else {\n        baseRunEffects(changedProps, hasPaths);\n      }\n    }\n\n    /**\n     * Aliases one data path as another, such that path notifications from one\n     * are routed to the other.\n     *\n     * @override\n     * @param {string | !Array<string|number>} to Target path to link.\n     * @param {string | !Array<string|number>} from Source path to link.\n     * @return {void}\n     * @public\n     */\n    linkPaths(to, from) {\n      to = normalize(to);\n      from = normalize(from);\n      this.__dataLinkedPaths = this.__dataLinkedPaths || {};\n      this.__dataLinkedPaths[to] = from;\n    }\n\n    /**\n     * Removes a data path alias previously established with `_linkPaths`.\n     *\n     * Note, the path to unlink should be the target (`to`) used when\n     * linking the paths.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Target path to unlink.\n     * @return {void}\n     * @public\n     */\n    unlinkPaths(path) {\n      path = normalize(path);\n      if (this.__dataLinkedPaths) {\n        delete this.__dataLinkedPaths[path];\n      }\n    }\n\n    /**\n     * Notify that an array has changed.\n     *\n     * Example:\n     *\n     *     this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];\n     *     ...\n     *     this.items.splice(1, 1, {name: 'Sam'});\n     *     this.items.push({name: 'Bob'});\n     *     this.notifySplices('items', [\n     *       { index: 1, removed: [{name: 'Todd'}], addedCount: 1,\n     *         object: this.items, type: 'splice' },\n     *       { index: 3, removed: [], addedCount: 1,\n     *         object: this.items, type: 'splice'}\n     *     ]);\n     *\n     * @param {string} path Path that should be notified.\n     * @param {Array} splices Array of splice records indicating ordered\n     *   changes that occurred to the array. Each record should have the\n     *   following fields:\n     *    * index: index at which the change occurred\n     *    * removed: array of items that were removed from this index\n     *    * addedCount: number of new items added at this index\n     *    * object: a reference to the array in question\n     *    * type: the string literal 'splice'\n     *\n     *   Note that splice records _must_ be normalized such that they are\n     *   reported in index order (raw results from `Object.observe` are not\n     *   ordered and must be normalized/merged before notifying).\n     *\n     * @override\n     * @return {void}\n     * @public\n     */\n    notifySplices(path, splices) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      notifySplices(this, array, info.path, splices);\n    }\n\n    /**\n     * Convenience method for reading a value from a path.\n     *\n     * Note, if any part in the path is undefined, this method returns\n     * `undefined` (this method does not throw when dereferencing undefined\n     * paths).\n     *\n     * @override\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to read.  The path may be specified as a string (e.g. `foo.bar.baz`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `users.12.name` or `['users', 12, 'name']`).\n     * @param {Object=} root Root object from which the path is evaluated.\n     * @return {*} Value at the path, or `undefined` if any part of the path\n     *   is undefined.\n     * @public\n     */\n    get(path, root) {\n      return get(root || this, path);\n    }\n\n    /**\n     * Convenience method for setting a value to a path and notifying any\n     * elements bound to the same path.\n     *\n     * Note, if any part in the path except for the last is undefined,\n     * this method does nothing (this method does not throw when\n     * dereferencing undefined paths).\n     *\n     * @override\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `'users.12.name'` or `['users', 12, 'name']`).\n     * @param {*} value Value to set at the specified path.\n     * @param {Object=} root Root object from which the path is evaluated.\n     *   When specified, no notification will occur.\n     * @return {void}\n     * @public\n     */\n    set(path, value, root) {\n      if (root) {\n        set(root, path, value);\n      } else {\n        if (!this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][/** @type {string} */(path)]) {\n          if (this._setPendingPropertyOrPath(path, value, true)) {\n            this._invalidateProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Adds items onto the end of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to push onto array\n     * @return {number} New length of the array.\n     * @public\n     */\n    push(path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array}*/(get(this, path, info));\n      let len = array.length;\n      let ret = array.push(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, len, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the end of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    pop(path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.pop();\n      if (hadLength) {\n        notifySplice(this, array, info.path, array.length, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Starting from the start index specified, removes 0 or more items\n     * from the array and inserts 0 or more new items in their place.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.splice`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {number} start Index from which to start removing/inserting.\n     * @param {number=} deleteCount Number of items to remove.\n     * @param {...*} items Items to insert into array.\n     * @return {!Array} Array of removed items.\n     * @public\n     */\n    splice(path, start, deleteCount, ...items) {\n      let info = {path : ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      // Normalize fancy native splice handling of crazy start values\n      if (start < 0) {\n        start = array.length - Math.floor(-start);\n      } else if (start) {\n        start = Math.floor(start);\n      }\n      // array.splice does different things based on the number of arguments\n      // you pass in. Therefore, array.splice(0) and array.splice(0, undefined)\n      // do different things. In the former, the whole array is cleared. In the\n      // latter, no items are removed.\n      // This means that we need to detect whether 1. one of the arguments\n      // is actually passed in and then 2. determine how many arguments\n      // we should pass on to the native array.splice\n      //\n      let ret;\n      // Omit any additional arguments if they were not passed in\n      if (arguments.length === 2) {\n        ret = array.splice(start);\n      // Either start was undefined and the others were defined, but in this\n      // case we can safely pass on all arguments\n      //\n      // Note: this includes the case where none of the arguments were passed in,\n      // e.g. this.splice('array'). However, if both start and deleteCount\n      // are undefined, array.splice will not modify the array (as expected)\n      } else {\n        ret = array.splice(start, deleteCount, ...items);\n      }\n      // At the end, check whether any items were passed in (e.g. insertions)\n      // or if the return array contains items (e.g. deletions).\n      // Only notify if items were added or deleted.\n      if (items.length || ret.length) {\n        notifySplice(this, array, info.path, start, items.length, ret);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the beginning of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    shift(path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.shift();\n      if (hadLength) {\n        notifySplice(this, array, info.path, 0, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Adds items onto the beginning of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to insert info array\n     * @return {number} New length of the array.\n     * @public\n     */\n    unshift(path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      let ret = array.unshift(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, 0, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Notify that a path has changed.\n     *\n     * Example:\n     *\n     *     this.item.user.name = 'Bob';\n     *     this.notifyPath('item.user.name');\n     *\n     * @override\n     * @param {string} path Path that should be notified.\n     * @param {*=} value Value at the path (optional).\n     * @return {void}\n     * @public\n     */\n    notifyPath(path, value) {\n      /** @type {string} */\n      let propPath;\n      if (arguments.length == 1) {\n        // Get value if not supplied\n        let info = {path: ''};\n        value = get(this, path, info);\n        propPath = info.path;\n      } else if (Array.isArray(path)) {\n        // Normalize path if needed\n        propPath = normalize(path);\n      } else {\n        propPath = /** @type{string} */(path);\n      }\n      if (this._setPendingPropertyOrPath(propPath, value, true, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Equivalent to static `createReadOnlyProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @return {void}\n     * @protected\n     */\n    _createReadOnlyProperty(property, protectedSetter) {\n      this._addPropertyEffect(property, TYPES.READ_ONLY);\n      if (protectedSetter) {\n        this['_set' + upper(property)] = /** @this {PropertyEffects} */function(value) {\n          this._setProperty(property, value);\n        };\n      }\n    }\n\n    /**\n     * Equivalent to static `createPropertyObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @param {string|function(*,*)} method Function or name of observer method\n     *     to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    _createPropertyObserver(property, method, dynamicFn) {\n      let info = { property, method, dynamicFn: Boolean(dynamicFn) };\n      this._addPropertyEffect(property, TYPES.OBSERVE, {\n        fn: runObserverEffect, info, trigger: {name: property}\n      });\n      if (dynamicFn) {\n        this._addPropertyEffect(/** @type {string} */(method), TYPES.OBSERVE, {\n          fn: runObserverEffect, info, trigger: {name: method}\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createMethodObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    _createMethodObserver(expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed observer expression '\" + expression + \"'\");\n      }\n      createMethodEffect(this, sig, TYPES.OBSERVE, runMethodEffect, null, dynamicFn);\n    }\n\n    /**\n     * Equivalent to static `createNotifyingProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     */\n    _createNotifyingProperty(property) {\n      this._addPropertyEffect(property, TYPES.NOTIFY, {\n        fn: runNotifyEffect,\n        info: {\n          eventName: camelToDashCase(property) + '-changed',\n          property: property\n        }\n      });\n    }\n\n    /**\n     * Equivalent to static `createReflectedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     * @suppress {missingProperties} go/missingfnprops\n     */\n    _createReflectedProperty(property) {\n      let attr = this.constructor.attributeNameForProperty(property);\n      if (attr[0] === '-') {\n        console.warn('Property ' + property + ' cannot be reflected to attribute ' +\n          attr + ' because \"-\" is not a valid starting attribute name. Use a lowercase first letter for the property instead.');\n      } else {\n        this._addPropertyEffect(property, TYPES.REFLECT, {\n          fn: runReflectEffect,\n          info: {\n            attrName: attr\n          }\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createComputedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    _createComputedProperty(property, expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed computed expression '\" + expression + \"'\");\n      }\n      const info = createMethodEffect(this, sig, TYPES.COMPUTE, runComputedEffect, property, dynamicFn);\n      // Effects are normally stored as map of dependency->effect, but for\n      // ordered computation, we also need tree of computedProp->dependencies\n      ensureOwnEffectMap(this, COMPUTE_INFO)[property] = info;\n    }\n\n    /**\n     * Gather the argument values for a method specified in the provided array\n     * of argument metadata.\n     *\n     * The `path` and `value` arguments are used to fill in wildcard descriptor\n     * when the method is being called as a result of a path notification.\n     *\n     * @param {!Array<!MethodArg>} args Array of argument metadata\n     * @param {string} path Property/path name that triggered the method effect\n     * @param {Object} props Bag of current property changes\n     * @return {!Array<*>} Array of argument values\n     * @private\n     */\n    _marshalArgs(args, path, props) {\n      const data = this.__data;\n      const values = [];\n      for (let i=0, l=args.length; i<l; i++) {\n        let {name, structured, wildcard, value, literal} = args[i];\n        if (!literal) {\n          if (wildcard) {\n            const matches = isDescendant(name, path);\n            const pathValue = getArgValue(data, props, matches ? path : name);\n            value = {\n              path: matches ? path : name,\n              value: pathValue,\n              base: matches ? get(data, name) : pathValue\n            };\n          } else {\n            value = structured ? getArgValue(data, props, name) : data[name];\n          }\n        }\n        // When the `legacyUndefined` flag is enabled, pass a no-op value\n        // so that the observer, computed property, or compound binding is aborted.\n        if (legacyUndefined && !this._overrideLegacyUndefined && value === undefined && args.length > 1) {\n          return NOOP;\n        }\n        values[i] = value;\n      }\n      return values;\n    }\n\n    // -- static class methods ------------\n\n    /**\n     * Ensures an accessor exists for the specified property, and adds\n     * to a list of \"property effects\" that will run when the accessor for\n     * the specified property is set.  Effects are grouped by \"type\", which\n     * roughly corresponds to a phase in effect processing.  The effect\n     * metadata should be in the following form:\n     *\n     *     {\n     *       fn: effectFunction, // Reference to function to call to perform effect\n     *       info: { ... }       // Effect metadata passed to function\n     *       trigger: {          // Optional triggering metadata; if not provided\n     *         name: string      // the property is treated as a wildcard\n     *         structured: boolean\n     *         wildcard: boolean\n     *       }\n     *     }\n     *\n     * Effects are called from `_propertiesChanged` in the following order by\n     * type:\n     *\n     * 1. COMPUTE\n     * 2. PROPAGATE\n     * 3. REFLECT\n     * 4. OBSERVE\n     * 5. NOTIFY\n     *\n     * Effect functions are called with the following signature:\n     *\n     *     effectFunction(inst, path, props, oldProps, info, hasPaths)\n     *\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static addPropertyEffect(property, type, effect) {\n      this.prototype._addPropertyEffect(property, type, effect);\n    }\n\n    /**\n     * Creates a single-property observer for the given property.\n     *\n     * @param {string} property Property name\n     * @param {string|function(*,*)} method Function or name of observer method to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createPropertyObserver(property, method, dynamicFn) {\n      this.prototype._createPropertyObserver(property, method, dynamicFn);\n    }\n\n    /**\n     * Creates a multi-property \"method observer\" based on the provided\n     * expression, which should be a string in the form of a normal JavaScript\n     * function signature: `'methodName(arg1, [..., argn])'`.  Each argument\n     * should correspond to a property or path in the context of this\n     * prototype (or instance), or may be a literal string or number.\n     *\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     * @return {void}\n     *   whether method names should be included as a dependency to the effect.\n     * @protected\n     * @nocollapse\n     */\n    static createMethodObserver(expression, dynamicFn) {\n      this.prototype._createMethodObserver(expression, dynamicFn);\n    }\n\n    /**\n     * Causes the setter for the given property to dispatch `<property>-changed`\n     * events to notify of changes to the property.\n     *\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createNotifyingProperty(property) {\n      this.prototype._createNotifyingProperty(property);\n    }\n\n    /**\n     * Creates a read-only accessor for the given property.\n     *\n     * To set the property, use the protected `_setProperty` API.\n     * To create a custom protected setter (e.g. `_setMyProp()` for\n     * property `myProp`), pass `true` for `protectedSetter`.\n     *\n     * Note, if the property will have other property effects, this method\n     * should be called first, before adding other effects.\n     *\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createReadOnlyProperty(property, protectedSetter) {\n      this.prototype._createReadOnlyProperty(property, protectedSetter);\n    }\n\n    /**\n     * Causes the setter for the given property to reflect the property value\n     * to a (dash-cased) attribute of the same name.\n     *\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createReflectedProperty(property) {\n      this.prototype._createReflectedProperty(property);\n    }\n\n    /**\n     * Creates a computed property whose value is set to the result of the\n     * method described by the given `expression` each time one or more\n     * arguments to the method changes.  The expression should be a string\n     * in the form of a normal JavaScript function signature:\n     * `'methodName(arg1, [..., argn])'`\n     *\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n     *   method names should be included as a dependency to the effect.\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createComputedProperty(property, expression, dynamicFn) {\n      this.prototype._createComputedProperty(property, expression, dynamicFn);\n    }\n\n    /**\n     * Parses the provided template to ensure binding effects are created\n     * for them, and then ensures property accessors are created for any\n     * dependent properties in the template.  Binding effects for bound\n     * templates are stored in a linked list on the instance so that\n     * templates can be efficiently stamped and unstamped.\n     *\n     * @param {!HTMLTemplateElement} template Template containing binding\n     *   bindings\n     * @return {!TemplateInfo} Template metadata object\n     * @protected\n     * @nocollapse\n     */\n    static bindTemplate(template) {\n      return this.prototype._bindTemplate(template);\n    }\n\n    // -- binding ----------------------------------------------\n\n    /*\n     * Overview of binding flow:\n     *\n     * During finalization (`instanceBinding==false`, `wasPreBound==false`):\n     *  `_bindTemplate(t, false)` called directly during finalization - parses\n     *  the template (for the first time), and then assigns that _prototypical_\n     *  template info to `__preboundTemplateInfo` _on the prototype_; note in\n     *  this case `wasPreBound` is false; this is the first time we're binding\n     *  it, thus we create accessors.\n     *\n     * During first stamping (`instanceBinding==true`, `wasPreBound==true`):\n     *   `_stampTemplate` calls `_bindTemplate(t, true)`: the `templateInfo`\n     *   returned matches the prebound one, and so this is `wasPreBound == true`\n     *   state; thus we _skip_ creating accessors, but _do_ create an instance\n     *   of the template info to serve as the start of our linked list (needs to\n     *   be an instance, not the prototypical one, so that we can add `nodeList`\n     *   to it to contain the `nodeInfo`-ordered list of instance nodes for\n     *   bindings, and so we can chain runtime-stamped template infos off of\n     *   it). At this point, the call to `_stampTemplate` calls\n     *   `applyTemplateInfo` for each nested `<template>` found during parsing\n     *   to hand prototypical `_templateInfo` to them; we also pass the _parent_\n     *   `templateInfo` to the `<template>` so that we have the instance-time\n     *   parent to link the `templateInfo` under in the case it was\n     *   runtime-stamped.\n     *\n     * During subsequent runtime stamping (`instanceBinding==true`,\n     *   `wasPreBound==false`): `_stampTemplate` calls `_bindTemplate(t, true)`\n     *   - here `templateInfo` is guaranteed to _not_ match the prebound one,\n     *   because it was either a different template altogether, or even if it\n     *   was the same template, the step above created a instance of the info;\n     *   in this case `wasPreBound == false`, so we _do_ create accessors, _and_\n     *   link a instance into the linked list.\n     */\n\n    /**\n     * Equivalent to static `bindTemplate` API but can be called on an instance\n     * to add effects at runtime.  See that method for full API docs.\n     *\n     * This method may be called on the prototype (for prototypical template\n     * binding, to avoid creating accessors every instance) once per prototype,\n     * and will be called with `runtimeBinding: true` by `_stampTemplate` to\n     * create and link an instance of the template metadata associated with a\n     * particular stamping.\n     *\n     * @override\n     * @param {!HTMLTemplateElement} template Template containing binding\n     * bindings\n     * @param {boolean=} instanceBinding When false (default), performs\n     * \"prototypical\" binding of the template and overwrites any previously\n     * bound template for the class. When true (as passed from\n     * `_stampTemplate`), the template info is instanced and linked into the\n     * list of bound templates.\n     * @return {!TemplateInfo} Template metadata object; for `runtimeBinding`,\n     * this is an instance of the prototypical template info\n     * @protected\n     * @suppress {missingProperties} go/missingfnprops\n     */\n    _bindTemplate(template, instanceBinding) {\n      let templateInfo = this.constructor._parseTemplate(template);\n      let wasPreBound = this.__preBoundTemplateInfo == templateInfo;\n      // Optimization: since this is called twice for proto-bound templates,\n      // don't attempt to recreate accessors if this template was pre-bound\n      if (!wasPreBound) {\n        for (let prop in templateInfo.propertyEffects) {\n          this._createPropertyAccessor(prop);\n        }\n      }\n      if (instanceBinding) {\n        // For instance-time binding, create instance of template metadata\n        // and link into tree of templates if necessary\n        templateInfo = /** @type {!TemplateInfo} */(Object.create(templateInfo));\n        templateInfo.wasPreBound = wasPreBound;\n        if (!this.__templateInfo) {\n          // Set the info to the root of the tree\n          this.__templateInfo = templateInfo;\n        } else {\n          // Append this template info onto the end of its parent template's\n          // list, which will determine the tree structure via which property\n          // effects are run; if this template was not nested in another\n          // template, use the root template (the first stamped one) as the\n          // parent. Note, `parent` is the `templateInfo` instance for this\n          // template's parent (containing) template, which was set up in\n          // `applyTemplateInfo`.  While a given template's `parent` is set\n          // apriori, it is only added to the parent's child list at the point\n          // that it is being bound, since a template may or may not ever be\n          // stamped, and may be stamped more than once (in which case instances\n          // of the template info will be in the tree under its parent more than\n          // once).\n          const parent = template._parentTemplateInfo || this.__templateInfo;\n          const previous = parent.lastChild;\n          templateInfo.parent = parent;\n          parent.lastChild = templateInfo;\n          templateInfo.previousSibling = previous;\n          if (previous) {\n            previous.nextSibling = templateInfo;\n          } else {\n            parent.firstChild = templateInfo;\n          }\n        }\n      } else {\n        this.__preBoundTemplateInfo = templateInfo;\n      }\n      return templateInfo;\n    }\n\n    /**\n     * Adds a property effect to the given template metadata, which is run\n     * at the \"propagate\" stage of `_propertiesChanged` when the template\n     * has been bound to the element via `_bindTemplate`.\n     *\n     * The `effect` object should match the format in `_addPropertyEffect`.\n     *\n     * @param {Object} templateInfo Template metadata to add effect to\n     * @param {string} prop Property that should trigger the effect\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static _addTemplatePropertyEffect(templateInfo, prop, effect) {\n      let hostProps = templateInfo.hostProps = templateInfo.hostProps || {};\n      hostProps[prop] = true;\n      let effects = templateInfo.propertyEffects = templateInfo.propertyEffects || {};\n      let propEffects = effects[prop] = effects[prop] || [];\n      propEffects.push(effect);\n    }\n\n    /**\n     * Stamps the provided template and performs instance-time setup for\n     * Polymer template features, including data bindings, declarative event\n     * listeners, and the `this.$` map of `id`'s to nodes.  A document fragment\n     * is returned containing the stamped DOM, ready for insertion into the\n     * DOM.\n     *\n     * This method may be called more than once; however note that due to\n     * `shadycss` polyfill limitations, only styles from templates prepared\n     * using `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped\n     * to the shadow root and support CSS custom properties), and note that\n     * `ShadyCSS.prepareTemplate` may only be called once per element. As such,\n     * any styles required by in runtime-stamped templates must be included\n     * in the main element template.\n     *\n     * @param {!HTMLTemplateElement} template Template to stamp\n     * @param {TemplateInfo=} templateInfo Optional bound template info associated\n     *   with the template to be stamped; if omitted the template will be\n     *   automatically bound.\n     * @return {!StampedTemplate} Cloned template content\n     * @override\n     * @protected\n     */\n    _stampTemplate(template, templateInfo) {\n      templateInfo =  templateInfo || /** @type {!TemplateInfo} */(this._bindTemplate(template, true));\n      // Ensures that created dom is `_enqueueClient`'d to this element so\n      // that it can be flushed on next call to `_flushProperties`\n      hostStack.push(this);\n      let dom = super._stampTemplate(template, templateInfo);\n      hostStack.pop();\n      // Add template-instance-specific data to instanced templateInfo\n      templateInfo.nodeList = dom.nodeList;\n      // Capture child nodes to allow unstamping of non-prototypical templates\n      if (!templateInfo.wasPreBound) {\n        let nodes = templateInfo.childNodes = [];\n        for (let n=dom.firstChild; n; n=n.nextSibling) {\n          nodes.push(n);\n        }\n      }\n      dom.templateInfo = templateInfo;\n      // Setup compound storage, 2-way listeners, and dataHost for bindings\n      setupBindings(this, templateInfo);\n      // Flush properties into template nodes; the check on `__dataClientsReady`\n      // ensures we don't needlessly run effects for an element's initial\n      // prototypical template stamping since they will happen as a part of the\n      // first call to `_propertiesChanged`. This flag is set to true\n      // after running the initial propagate effects, and immediately before\n      // flushing clients. Since downstream clients could cause stamping on\n      // this host (e.g. a fastDomIf `dom-if` being forced to render\n      // synchronously), this flag ensures effects for runtime-stamped templates\n      // are run at this point during the initial element boot-up.\n      if (this.__dataClientsReady) {\n        this._runEffectsForTemplate(templateInfo, this.__data, null, false);\n        this._flushClients();\n      }\n      return dom;\n    }\n\n    /**\n     * Removes and unbinds the nodes previously contained in the provided\n     * DocumentFragment returned from `_stampTemplate`.\n     *\n     * @override\n     * @param {!StampedTemplate} dom DocumentFragment previously returned\n     *   from `_stampTemplate` associated with the nodes to be removed\n     * @return {void}\n     * @protected\n     */\n    _removeBoundDom(dom) {\n      // Unlink template info; Note that while the child is unlinked from its\n      // parent list, a template's `parent` reference is never removed, since\n      // this is is determined by the tree structure and applied at\n      // `applyTemplateInfo` time.\n      const templateInfo = dom.templateInfo;\n      const {previousSibling, nextSibling, parent} = templateInfo;\n      if (previousSibling) {\n        previousSibling.nextSibling = nextSibling;\n      } else if (parent) {\n        parent.firstChild = nextSibling;\n      }\n      if (nextSibling) {\n        nextSibling.previousSibling = previousSibling;\n      } else if (parent) {\n        parent.lastChild = previousSibling;\n      }\n      templateInfo.nextSibling = templateInfo.previousSibling = null;\n      // Remove stamped nodes\n      let nodes = templateInfo.childNodes;\n      for (let i=0; i<nodes.length; i++) {\n        let node = nodes[i];\n        wrap(wrap(node).parentNode).removeChild(node);\n      }\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * parsing bindings from `TextNode`'s' `textContent`.  A `bindings`\n     * array is added to `nodeInfo` and populated with binding metadata\n     * with information capturing the binding target, and a `parts` array\n     * with one or more metadata objects capturing the source(s) of the\n     * binding.\n     *\n     * @param {Node} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _parseTemplateNode(node, templateInfo, nodeInfo) {\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      let noted = propertyEffectsBase._parseTemplateNode.call(\n        this, node, templateInfo, nodeInfo);\n      if (node.nodeType === Node.TEXT_NODE) {\n        let parts = this._parseBindings(node.textContent, templateInfo);\n        if (parts) {\n          // Initialize the textContent with any literal parts\n          // NOTE: default to a space here so the textNode remains; some browsers\n          // (IE) omit an empty textNode following cloneNode/importNode.\n          node.textContent = literalFromParts(parts) || ' ';\n          addBinding(this, templateInfo, nodeInfo, 'text', 'textContent', parts);\n          noted = true;\n        }\n      }\n      return noted;\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * parsing bindings from attributes.  A `bindings`\n     * array is added to `nodeInfo` and populated with binding metadata\n     * with information capturing the binding target, and a `parts` array\n     * with one or more metadata objects capturing the source(s) of the\n     * binding.\n     *\n     * @param {Element} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @param {string} name Attribute name\n     * @param {string} value Attribute value\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n      let parts = this._parseBindings(value, templateInfo);\n      if (parts) {\n        // Attribute or property\n        let origName = name;\n        let kind = 'property';\n        // The only way we see a capital letter here is if the attr has\n        // a capital letter in it per spec. In this case, to make sure\n        // this binding works, we go ahead and make the binding to the attribute.\n        if (capitalAttributeRegex.test(name)) {\n          kind = 'attribute';\n        } else if (name[name.length-1] == '$') {\n          name = name.slice(0, -1);\n          kind = 'attribute';\n        }\n        // Initialize attribute bindings with any literal parts\n        let literal = literalFromParts(parts);\n        if (literal && kind == 'attribute') {\n          // Ensure a ShadyCSS template scoped style is not removed\n          // when a class$ binding's initial literal value is set.\n          if (name == 'class' && node.hasAttribute('class')) {\n            literal += ' ' + node.getAttribute(name);\n          }\n          node.setAttribute(name, literal);\n        }\n        // support disable-upgrade\n        if (kind == 'attribute' && origName == 'disable-upgrade$') {\n          node.setAttribute(name, '');\n        }\n        // Clear attribute before removing, since IE won't allow removing\n        // `value` attribute if it previously had a value (can't\n        // unconditionally set '' before removing since attributes with `$`\n        // can't be set using setAttribute)\n        if (node.localName === 'input' && origName === 'value') {\n          node.setAttribute(origName, '');\n        }\n        // Remove annotation\n        node.removeAttribute(origName);\n        // Case hackery: attributes are lower-case, but bind targets\n        // (properties) are case sensitive. Gambit is to map dash-case to\n        // camel-case: `foo-bar` becomes `fooBar`.\n        // Attribute bindings are excepted.\n        if (kind === 'property') {\n          name = dashToCamelCase(name);\n        }\n        addBinding(this, templateInfo, nodeInfo, kind, name, parts, literal);\n        return true;\n      } else {\n        // TODO(https://github.com/google/closure-compiler/issues/3240):\n        //     Change back to just super.methodCall()\n        return propertyEffectsBase._parseTemplateNodeAttribute.call(\n          this, node, templateInfo, nodeInfo, name, value);\n      }\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * binding the properties that a nested template depends on to the template\n     * as `_host_<property>`.\n     *\n     * @param {Node} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _parseTemplateNestedTemplate(node, templateInfo, nodeInfo) {\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      let noted = propertyEffectsBase._parseTemplateNestedTemplate.call(\n        this, node, templateInfo, nodeInfo);\n      const parent = node.parentNode;\n      const nestedTemplateInfo = nodeInfo.templateInfo;\n      const isDomIf = parent.localName === 'dom-if';\n      const isDomRepeat = parent.localName === 'dom-repeat';\n      // Remove nested template and redirect its host bindings & templateInfo\n      // onto the parent (dom-if/repeat element)'s nodeInfo\n      if (removeNestedTemplates && (isDomIf || isDomRepeat)) {\n        parent.removeChild(node);\n        // Use the parent's nodeInfo (for the dom-if/repeat) to record the\n        // templateInfo, and use that for any host property bindings below\n        nodeInfo = nodeInfo.parentInfo;\n        nodeInfo.templateInfo = nestedTemplateInfo;\n        // Ensure the parent dom-if/repeat is noted since it now may have host\n        // bindings; it may not have been if it did not have its own bindings\n        nodeInfo.noted = true;\n        noted = false;\n      }\n      // Merge host props into outer template and add bindings\n      let hostProps = nestedTemplateInfo.hostProps;\n      if (fastDomIf && isDomIf) {\n        // `fastDomIf` mode uses runtime-template stamping to add accessors/\n        // effects to properties used in its template; as such we don't need to\n        // tax the host element with `_host_` bindings for the `dom-if`.\n        // However, in the event it is nested in a `dom-repeat`, it is still\n        // important that its host properties are added to the\n        // TemplateInstance's `hostProps` so that they are forwarded to the\n        // TemplateInstance.\n        if (hostProps) {\n          templateInfo.hostProps =\n            Object.assign(templateInfo.hostProps || {}, hostProps);\n          // Ensure the dom-if is noted so that it has a __dataHost, since\n          // `fastDomIf` uses the host for runtime template stamping; note this\n          // was already ensured above in the `removeNestedTemplates` case\n          if (!removeNestedTemplates) {\n            nodeInfo.parentInfo.noted = true;\n          }\n        }\n      } else {\n        let mode = '{';\n        for (let source in hostProps) {\n          let parts = [{ mode, source, dependencies: [source], hostProp: true }];\n          addBinding(this, templateInfo, nodeInfo, 'property', '_host_' + source, parts);\n        }\n      }\n      return noted;\n    }\n\n    /**\n     * Called to parse text in a template (either attribute values or\n     * textContent) into binding metadata.\n     *\n     * Any overrides of this method should return an array of binding part\n     * metadata  representing one or more bindings found in the provided text\n     * and any \"literal\" text in between.  Any non-literal parts will be passed\n     * to `_evaluateBinding` when any dependencies change.  The only required\n     * fields of each \"part\" in the returned array are as follows:\n     *\n     * - `dependencies` - Array containing trigger metadata for each property\n     *   that should trigger the binding to update\n     * - `literal` - String containing text if the part represents a literal;\n     *   in this case no `dependencies` are needed\n     *\n     * Additional metadata for use by `_evaluateBinding` may be provided in\n     * each part object as needed.\n     *\n     * The default implementation handles the following types of bindings\n     * (one or more may be intermixed with literal strings):\n     * - Property binding: `[[prop]]`\n     * - Path binding: `[[object.prop]]`\n     * - Negated property or path bindings: `[[!prop]]` or `[[!object.prop]]`\n     * - Two-way property or path bindings (supports negation):\n     *   `{{prop}}`, `{{object.prop}}`, `{{!prop}}` or `{{!object.prop}}`\n     * - Inline computed method (supports negation):\n     *   `[[compute(a, 'literal', b)]]`, `[[!compute(a, 'literal', b)]]`\n     *\n     * The default implementation uses a regular expression for best\n     * performance. However, the regular expression uses a white-list of\n     * allowed characters in a data-binding, which causes problems for\n     * data-bindings that do use characters not in this white-list.\n     *\n     * Instead of updating the white-list with all allowed characters,\n     * there is a StrictBindingParser (see lib/mixins/strict-binding-parser)\n     * that uses a state machine instead. This state machine is able to handle\n     * all characters. However, it is slightly less performant, therefore we\n     * extracted it into a separate optional mixin.\n     *\n     * @param {string} text Text to parse from attribute or textContent\n     * @param {Object} templateInfo Current template metadata\n     * @return {Array<!BindingPart>} Array of binding part metadata\n     * @protected\n     * @nocollapse\n     */\n    static _parseBindings(text, templateInfo) {\n      let parts = [];\n      let lastIndex = 0;\n      let m;\n      // Example: \"literal1{{prop}}literal2[[!compute(foo,bar)]]final\"\n      // Regex matches:\n      //        Iteration 1:  Iteration 2:\n      // m[1]: '{{'          '[['\n      // m[2]: ''            '!'\n      // m[3]: 'prop'        'compute(foo,bar)'\n      while ((m = bindingRegex.exec(text)) !== null) {\n        // Add literal part\n        if (m.index > lastIndex) {\n          parts.push({literal: text.slice(lastIndex, m.index)});\n        }\n        // Add binding part\n        let mode = m[1][0];\n        let negate = Boolean(m[2]);\n        let source = m[3].trim();\n        let customEvent = false, notifyEvent = '', colon = -1;\n        if (mode == '{' && (colon = source.indexOf('::')) > 0) {\n          notifyEvent = source.substring(colon + 2);\n          source = source.substring(0, colon);\n          customEvent = true;\n        }\n        let signature = parseMethod(source);\n        let dependencies = [];\n        if (signature) {\n          // Inline computed function\n          let {args, methodName} = signature;\n          for (let i=0; i<args.length; i++) {\n            let arg = args[i];\n            if (!arg.literal) {\n              dependencies.push(arg);\n            }\n          }\n          let dynamicFns = templateInfo.dynamicFns;\n          if (dynamicFns && dynamicFns[methodName] || signature.static) {\n            dependencies.push(methodName);\n            signature.dynamicFn = true;\n          }\n        } else {\n          // Property or path\n          dependencies.push(source);\n        }\n        parts.push({\n          source, mode, negate, customEvent, signature, dependencies,\n          event: notifyEvent\n        });\n        lastIndex = bindingRegex.lastIndex;\n      }\n      // Add a final literal part\n      if (lastIndex && lastIndex < text.length) {\n        let literal = text.substring(lastIndex);\n        if (literal) {\n          parts.push({\n            literal: literal\n          });\n        }\n      }\n      if (parts.length) {\n        return parts;\n      } else {\n        return null;\n      }\n    }\n\n    /**\n     * Called to evaluate a previously parsed binding part based on a set of\n     * one or more changed dependencies.\n     *\n     * @param {!Polymer_PropertyEffects} inst Element that should be used as\n     *     scope for binding dependencies\n     * @param {BindingPart} part Binding part metadata\n     * @param {string} path Property/path that triggered this effect\n     * @param {Object} props Bag of current property changes\n     * @param {Object} oldProps Bag of previous values for changed properties\n     * @param {boolean} hasPaths True with `props` contains one or more paths\n     * @return {*} Value the binding part evaluated to\n     * @protected\n     * @nocollapse\n     */\n    static _evaluateBinding(inst, part, path, props, oldProps, hasPaths) {\n      let value;\n      if (part.signature) {\n        value = runMethodEffect(inst, path, props, oldProps, part.signature);\n      } else if (path != part.source) {\n        value = get(inst, part.source);\n      } else {\n        if (hasPaths && isPath(path)) {\n          value = get(inst, path);\n        } else {\n          value = inst.__data[path];\n        }\n      }\n      if (part.negate) {\n        value = !value;\n      }\n      return value;\n    }\n\n  }\n\n  return PropertyEffects;\n});\n\n/**\n * Stack for enqueuing client dom created by a host element.\n *\n * By default elements are flushed via `_flushProperties` when\n * `connectedCallback` is called. Elements attach their client dom to\n * themselves at `ready` time which results from this first flush.\n * This provides an ordering guarantee that the client dom an element\n * creates is flushed before the element itself (i.e. client `ready`\n * fires before host `ready`).\n *\n * However, if `_flushProperties` is called *before* an element is connected,\n * as for example `Templatize` does, this ordering guarantee cannot be\n * satisfied because no elements are connected. (Note: Bound elements that\n * receive data do become enqueued clients and are properly ordered but\n * unbound elements are not.)\n *\n * To maintain the desired \"client before host\" ordering guarantee for this\n * case we rely on the \"host stack. Client nodes registers themselves with\n * the creating host element when created. This ensures that all client dom\n * is readied in the proper order, maintaining the desired guarantee.\n *\n * @private\n */\nconst hostStack = [];\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Total number of Polymer element instances created.\n * @type {number}\n */\nexport let instanceCount = 0;\n\nexport function incrementInstanceCount() {\n  instanceCount++;\n}\n\n/**\n * Array of Polymer element classes that have been finalized.\n * @type {!Array<!PolymerElementConstructor>}\n */\nexport const registrations = [];\n\n/**\n * @param {!PolymerElementConstructor} prototype Element prototype to log\n * @private\n */\nfunction _regLog(prototype) {\n  console.log('[' + /** @type {?} */(prototype).is + ']: registered');\n}\n\n/**\n * Registers a class prototype for telemetry purposes.\n * @param {!PolymerElementConstructor} prototype Element prototype to register\n * @protected\n */\nexport function register(prototype) {\n  registrations.push(prototype);\n}\n\n/**\n * Logs all elements registered with an `is` to the console.\n * @public\n */\nexport function dumpRegistrations() {\n  registrations.forEach(_regLog);\n}", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { register, incrementInstanceCount } from '../utils/telemetry.js';\nimport { PropertiesChanged } from './properties-changed.js';\n\n/**\n * Creates a copy of `props` with each property normalized such that\n * upgraded it is an object with at least a type property { type: Type}.\n *\n * @param {!Object} props Properties to normalize\n * @return {!Object} Copy of input `props` with normalized properties that\n * are in the form {type: Type}\n * @private\n */\nfunction normalizeProperties(props) {\n  const output = {};\n  for (let p in props) {\n    const o = props[p];\n    output[p] = (typeof o === 'function') ? {type: o} : o;\n  }\n  return output;\n}\n\n/**\n * Mixin that provides a minimal starting point to using the PropertiesChanged\n * mixin by providing a mechanism to declare properties in a static\n * getter (e.g. static get properties() { return { foo: String } }). Changes\n * are reported via the `_propertiesChanged` method.\n *\n * This mixin provides no specific support for rendering. Users are expected\n * to create a ShadowRoot and put content into it and update it in whatever\n * way makes sense. This can be done in reaction to properties changing by\n * implementing `_propertiesChanged`.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertiesChanged\n * @summary Mixin that provides a minimal starting point for using\n * the PropertiesChanged mixin by providing a declarative `properties` object.\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const PropertiesMixin = dedupingMixin(superClass => {\n\n /**\n  * @constructor\n  * @implements {Polymer_PropertiesChanged}\n  * @private\n  */\n const base = PropertiesChanged(superClass);\n\n /**\n  * Returns the super class constructor for the given class, if it is an\n  * instance of the PropertiesMixin.\n  *\n  * @param {!PropertiesMixinConstructor} constructor PropertiesMixin constructor\n  * @return {?PropertiesMixinConstructor} Super class constructor\n  */\n function superPropertiesClass(constructor) {\n   const superCtor = Object.getPrototypeOf(constructor);\n\n   // Note, the `PropertiesMixin` class below only refers to the class\n   // generated by this call to the mixin; the instanceof test only works\n   // because the mixin is deduped and guaranteed only to apply once, hence\n   // all constructors in a proto chain will see the same `PropertiesMixin`\n   return (superCtor.prototype instanceof PropertiesMixin) ?\n     /** @type {!PropertiesMixinConstructor} */ (superCtor) : null;\n }\n\n /**\n  * Returns a memoized version of the `properties` object for the\n  * given class. Properties not in object format are converted to at\n  * least {type}.\n  *\n  * @param {PropertiesMixinConstructor} constructor PropertiesMixin constructor\n  * @return {Object} Memoized properties object\n  */\n function ownProperties(constructor) {\n   if (!constructor.hasOwnProperty(JSCompiler_renameProperty('__ownProperties', constructor))) {\n     let props = null;\n\n     if (constructor.hasOwnProperty(JSCompiler_renameProperty('properties', constructor))) {\n       const properties = constructor.properties;\n\n       if (properties) {\n        props = normalizeProperties(properties);\n       }\n     }\n\n     constructor.__ownProperties = props;\n   }\n   return constructor.__ownProperties;\n }\n\n /**\n  * @polymer\n  * @mixinClass\n  * @extends {base}\n  * @implements {Polymer_PropertiesMixin}\n  * @unrestricted\n  */\n class PropertiesMixin extends base {\n\n   /**\n    * Implements standard custom elements getter to observes the attributes\n    * listed in `properties`.\n    * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n    * @nocollapse\n    */\n   static get observedAttributes() {\n     if (!this.hasOwnProperty(JSCompiler_renameProperty('__observedAttributes', this))) {\n       register(this.prototype);\n       const props = this._properties;\n       this.__observedAttributes = props ? Object.keys(props).map(p => this.prototype._addPropertyToAttributeMap(p)) : [];\n     }\n     return this.__observedAttributes;\n   }\n\n   /**\n    * Finalizes an element definition, including ensuring any super classes\n    * are also finalized. This includes ensuring property\n    * accessors exist on the element prototype. This method calls\n    * `_finalizeClass` to finalize each constructor in the prototype chain.\n    * @return {void}\n    * @nocollapse\n    */\n   static finalize() {\n     if (!this.hasOwnProperty(JSCompiler_renameProperty('__finalized', this))) {\n       const superCtor = superPropertiesClass(/** @type {!PropertiesMixinConstructor} */(this));\n       if (superCtor) {\n         superCtor.finalize();\n       }\n       this.__finalized = true;\n       this._finalizeClass();\n     }\n   }\n\n   /**\n    * Finalize an element class. This includes ensuring property\n    * accessors exist on the element prototype. This method is called by\n    * `finalize` and finalizes the class constructor.\n    *\n    * @protected\n    * @nocollapse\n    */\n   static _finalizeClass() {\n     const props = ownProperties(/** @type {!PropertiesMixinConstructor} */(this));\n     if (props) {\n       /** @type {?} */ (this).createProperties(props);\n     }\n   }\n\n   /**\n    * Returns a memoized version of all properties, including those inherited\n    * from super classes. Properties not in object format are converted to\n    * at least {type}.\n    *\n    * @return {Object} Object containing properties for this class\n    * @protected\n    * @nocollapse\n    */\n   static get _properties() {\n     if (!this.hasOwnProperty(\n       JSCompiler_renameProperty('__properties', this))) {\n       const superCtor = superPropertiesClass(/** @type {!PropertiesMixinConstructor} */(this));\n       this.__properties = Object.assign({},\n         superCtor && superCtor._properties,\n         ownProperties(/** @type {PropertiesMixinConstructor} */(this)));\n     }\n     return this.__properties;\n   }\n\n   /**\n    * Overrides `PropertiesChanged` method to return type specified in the\n    * static `properties` object for the given property.\n    * @param {string} name Name of property\n    * @return {*} Type to which to deserialize attribute\n    *\n    * @protected\n    * @nocollapse\n    */\n   static typeForProperty(name) {\n     const info = this._properties[name];\n     return info && info.type;\n   }\n\n   /**\n    * Overrides `PropertiesChanged` method and adds a call to\n    * `finalize` which lazily configures the element's property accessors.\n    * @override\n    * @return {void}\n    */\n   _initializeProperties() {\n     incrementInstanceCount();\n     this.constructor.finalize();\n     super._initializeProperties();\n   }\n\n   /**\n    * Called when the element is added to a document.\n    * Calls `_enableProperties` to turn on property system from\n    * `PropertiesChanged`.\n    * @suppress {missingProperties} Super may or may not implement the callback\n    * @return {void}\n    * @override\n    */\n   connectedCallback() {\n     if (super.connectedCallback) {\n       super.connectedCallback();\n     }\n     this._enableProperties();\n   }\n\n   /**\n    * Called when the element is removed from a document\n    * @suppress {missingProperties} Super may or may not implement the callback\n    * @return {void}\n    * @override\n    */\n   disconnectedCallback() {\n     if (super.disconnectedCallback) {\n       super.disconnectedCallback();\n     }\n   }\n\n }\n\n return PropertiesMixin;\n\n});\n", "/**\n * @fileoverview\n * @suppress {checkPrototypalTypes}\n * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n * Google as part of the polymer project is also subject to an additional IP\n * rights grant found at http://polymer.github.io/PATENTS.txt\n */\nimport '../utils/boot.js';\n\nimport { rootPath, strictTemplatePolicy, allowTemplateFromDomModule, legacyOptimizations, legacyWarnings, syncInitialRender, supportsAdoptingStyleSheets, useAdoptedStyleSheetsWithBuiltCSS } from '../utils/settings.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { stylesFromTemplate, stylesFromModuleImports } from '../utils/style-gather.js';\nimport { pathFromUrl, resolveCss, resolveUrl } from '../utils/resolve-url.js';\nimport { DomModule } from '../elements/dom-module.js';\nimport { PropertyEffects } from './property-effects.js';\nimport { PropertiesMixin } from './properties-mixin.js';\nimport { wrap } from '../utils/wrap.js';\n\n/**\n * Current Polymer version in Semver notation.\n * @type {string} Semver notation of the current version of Polymer.\n */\nexport const version = '3.5.1';\n\nexport const builtCSS = window.ShadyCSS && window.ShadyCSS['cssBuild'];\n\n/**\n * Element class mixin that provides the core API for Polymer's meta-programming\n * features including template stamping, data-binding, attribute deserialization,\n * and property change observation.\n *\n * Subclassers may provide the following static getters to return metadata\n * used to configure Polymer's features for the class:\n *\n * - `static get is()`: When the template is provided via a `dom-module`,\n *   users should return the `dom-module` id from a static `is` getter.  If\n *   no template is needed or the template is provided directly via the\n *   `template` getter, there is no need to define `is` for the element.\n *\n * - `static get template()`: Users may provide the template directly (as\n *   opposed to via `dom-module`) by implementing a static `template` getter.\n *   The getter must return an `HTMLTemplateElement`.\n *\n * - `static get properties()`: Should return an object describing\n *   property-related metadata used by Polymer features (key: property name\n *   value: object containing property metadata). Valid keys in per-property\n *   metadata include:\n *   - `type` (String|Number|Object|Array|...): Used by\n *     `attributeChangedCallback` to determine how string-based attributes\n *     are deserialized to JavaScript property values.\n *   - `notify` (boolean): Causes a change in the property to fire a\n *     non-bubbling event called `<property>-changed`. Elements that have\n *     enabled two-way binding to the property use this event to observe changes.\n *   - `readOnly` (boolean): Creates a getter for the property, but no setter.\n *     To set a read-only property, use the private setter method\n *     `_setProperty(property, value)`.\n *   - `observer` (string): Observer method name that will be called when\n *     the property changes. The arguments of the method are\n *     `(value, previousValue)`.\n *   - `computed` (string): String describing method and dependent properties\n *     for computing the value of this property (e.g. `'computeFoo(bar, zot)'`).\n *     Computed properties are read-only by default and can only be changed\n *     via the return value of the computing method.\n *\n * - `static get observers()`: Array of strings describing multi-property\n *   observer methods and their dependent properties (e.g.\n *   `'observeABC(a, b, c)'`).\n *\n * The base class provides default implementations for the following standard\n * custom element lifecycle callbacks; users may override these, but should\n * call the super method to ensure\n * - `constructor`: Run when the element is created or upgraded\n * - `connectedCallback`: Run each time the element is connected to the\n *   document\n * - `disconnectedCallback`: Run each time the element is disconnected from\n *   the document\n * - `attributeChangedCallback`: Run each time an attribute in\n *   `observedAttributes` is set or removed (note: this element's default\n *   `observedAttributes` implementation will automatically return an array\n *   of dash-cased attributes based on `properties`)\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertyEffects\n * @appliesMixin PropertiesMixin\n * @property rootPath {string} Set to the value of `rootPath`,\n *   which defaults to the main document path\n * @property importPath {string} Set to the value of the class's static\n *   `importPath` property, which defaults to the path of this element's\n *   `dom-module` (when `is` is used), but can be overridden for other\n *   import strategies.\n * @summary Element class mixin that provides the core API for Polymer's\n * meta-programming features.\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const ElementMixin = dedupingMixin(base => {\n  /**\n   * @constructor\n   * @implements {Polymer_PropertyEffects}\n   * @implements {Polymer_PropertiesMixin}\n   * @extends {HTMLElement}\n   * @private\n   */\n  const polymerElementBase = PropertiesMixin(PropertyEffects(base));\n\n  /**\n   * Returns a list of properties with default values.\n   * This list is created as an optimization since it is a subset of\n   * the list returned from `_properties`.\n   * This list is used in `_initializeProperties` to set property defaults.\n   *\n   * @param {PolymerElementConstructor} constructor Element class\n   * @return {PolymerElementProperties} Flattened properties for this class\n   *   that have default values\n   * @private\n   */\n  function propertyDefaults(constructor) {\n    if (!constructor.hasOwnProperty(\n      JSCompiler_renameProperty('__propertyDefaults', constructor))) {\n      constructor.__propertyDefaults = null;\n      let props = constructor._properties;\n      for (let p in props) {\n        let info = props[p];\n        if ('value' in info) {\n          constructor.__propertyDefaults = constructor.__propertyDefaults || {};\n          constructor.__propertyDefaults[p] = info;\n        }\n      }\n    }\n    return constructor.__propertyDefaults;\n  }\n\n  /**\n   * Returns a memoized version of the `observers` array.\n   * @param {PolymerElementConstructor} constructor Element class\n   * @return {Array} Array containing own observers for the given class\n   * @protected\n   */\n  function ownObservers(constructor) {\n    if (!constructor.hasOwnProperty(\n      JSCompiler_renameProperty('__ownObservers', constructor))) {\n      constructor.__ownObservers =\n          constructor.hasOwnProperty(\n              JSCompiler_renameProperty('observers', constructor)) ?\n          /** @type {PolymerElementConstructor} */ (constructor).observers :\n          null;\n    }\n    return constructor.__ownObservers;\n  }\n\n  /**\n   * Creates effects for a property.\n   *\n   * Note, once a property has been set to\n   * `readOnly`, `computed`, `reflectToAttribute`, or `notify`\n   * these values may not be changed. For example, a subclass cannot\n   * alter these settings. However, additional `observers` may be added\n   * by subclasses.\n   *\n   * The info object should contain property metadata as follows:\n   *\n   * * `type`: {function} type to which an attribute matching the property\n   * is deserialized. Note the property is camel-cased from a dash-cased\n   * attribute. For example, 'foo-bar' attribute is deserialized to a\n   * property named 'fooBar'.\n   *\n   * * `readOnly`: {boolean} creates a readOnly property and\n   * makes a private setter for the private of the form '_setFoo' for a\n   * property 'foo',\n   *\n   * * `computed`: {string} creates a computed property. A computed property\n   * is also automatically set to `readOnly: true`. The value is calculated\n   * by running a method and arguments parsed from the given string. For\n   * example 'compute(foo)' will compute a given property when the\n   * 'foo' property changes by executing the 'compute' method. This method\n   * must return the computed value.\n   *\n   * * `reflectToAttribute`: {boolean} If true, the property value is reflected\n   * to an attribute of the same name. Note, the attribute is dash-cased\n   * so a property named 'fooBar' is reflected as 'foo-bar'.\n   *\n   * * `notify`: {boolean} sends a non-bubbling notification event when\n   * the property changes. For example, a property named 'foo' sends an\n   * event named 'foo-changed' with `event.detail` set to the value of\n   * the property.\n   *\n   * * observer: {string} name of a method that runs when the property\n   * changes. The arguments of the method are (value, previousValue).\n   *\n   * Note: Users may want control over modifying property\n   * effects via subclassing. For example, a user might want to make a\n   * reflectToAttribute property not do so in a subclass. We've chosen to\n   * disable this because it leads to additional complication.\n   * For example, a readOnly effect generates a special setter. If a subclass\n   * disables the effect, the setter would fail unexpectedly.\n   * Based on feedback, we may want to try to make effects more malleable\n   * and/or provide an advanced api for manipulating them.\n   *\n   * @param {!PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {string} name Name of the property.\n   * @param {Object} info Info object from which to create property effects.\n   * Supported keys:\n   * @param {Object} allProps Flattened map of all properties defined in this\n   *   element (including inherited properties)\n   * @return {void}\n   * @private\n   */\n  function createPropertyFromConfig(proto, name, info, allProps) {\n    // computed forces readOnly...\n    if (info.computed) {\n      info.readOnly = true;\n    }\n    // Note, since all computed properties are readOnly, this prevents\n    // adding additional computed property effects (which leads to a confusing\n    // setup where multiple triggers for setting a property)\n    // While we do have `hasComputedEffect` this is set on the property's\n    // dependencies rather than itself.\n    if (info.computed) {\n      if (proto._hasReadOnlyEffect(name)) {\n        console.warn(`Cannot redefine computed property '${name}'.`);\n      } else {\n        proto._createComputedProperty(name, info.computed, allProps);\n      }\n    }\n    if (info.readOnly && !proto._hasReadOnlyEffect(name)) {\n      proto._createReadOnlyProperty(name, !info.computed);\n    } else if (info.readOnly === false && proto._hasReadOnlyEffect(name)) {\n      console.warn(`Cannot make readOnly property '${name}' non-readOnly.`);\n    }\n    if (info.reflectToAttribute && !proto._hasReflectEffect(name)) {\n      proto._createReflectedProperty(name);\n    } else if (info.reflectToAttribute === false && proto._hasReflectEffect(name)) {\n      console.warn(`Cannot make reflected property '${name}' non-reflected.`);\n    }\n    if (info.notify && !proto._hasNotifyEffect(name)) {\n      proto._createNotifyingProperty(name);\n    } else if (info.notify === false && proto._hasNotifyEffect(name)) {\n      console.warn(`Cannot make notify property '${name}' non-notify.`);\n    }\n    // always add observer\n    if (info.observer) {\n      proto._createPropertyObserver(name, info.observer, allProps[info.observer]);\n    }\n    // always create the mapping from attribute back to property for deserialization.\n    proto._addPropertyToAttributeMap(name);\n  }\n\n  /**\n   * Process all style elements in the element template. Styles with the\n   * `include` attribute are processed such that any styles in\n   * the associated \"style modules\" are included in the element template.\n   * @param {PolymerElementConstructor} klass Element class\n   * @param {!HTMLTemplateElement} template Template to process\n   * @param {string} is Name of element\n   * @param {string} baseURI Base URI for element\n   * @private\n   */\n  function processElementStyles(klass, template, is, baseURI) {\n    if (!builtCSS) {\n      const templateStyles = template.content.querySelectorAll('style');\n      const stylesWithImports = stylesFromTemplate(template);\n      // insert styles from <link rel=\"import\" type=\"css\"> at the top of the template\n      const linkedStyles = stylesFromModuleImports(is);\n      const firstTemplateChild = template.content.firstElementChild;\n      for (let idx = 0; idx < linkedStyles.length; idx++) {\n        let s = linkedStyles[idx];\n        s.textContent = klass._processStyleText(s.textContent, baseURI);\n        template.content.insertBefore(s, firstTemplateChild);\n      }\n      // keep track of the last \"concrete\" style in the template we have encountered\n      let templateStyleIndex = 0;\n      // ensure all gathered styles are actually in this template.\n      for (let i = 0; i < stylesWithImports.length; i++) {\n        let s = stylesWithImports[i];\n        let templateStyle = templateStyles[templateStyleIndex];\n        // if the style is not in this template, it's been \"included\" and\n        // we put a clone of it in the template before the style that included it\n        if (templateStyle !== s) {\n          s = s.cloneNode(true);\n          templateStyle.parentNode.insertBefore(s, templateStyle);\n        } else {\n          templateStyleIndex++;\n        }\n        s.textContent = klass._processStyleText(s.textContent, baseURI);\n      }\n    }\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(template, is);\n    }\n    // Support for `adoptedStylesheets` relies on using native Shadow DOM\n    // and built CSS. Built CSS is required because runtime transformation of\n    // `@apply` is not supported. This is because ShadyCSS relies on being able\n    // to update a `style` element in the element template and this is\n    // removed when using `adoptedStyleSheets`.\n    // Note, it would be more efficient to allow style includes to become\n    // separate stylesheets; however, because of `@apply` these are\n    // potentially not shareable and sharing the ones that could be shared\n    // would require some coordination. To keep it simple, all the includes\n    // and styles are collapsed into a single shareable stylesheet.\n    if (useAdoptedStyleSheetsWithBuiltCSS && builtCSS &&\n        supportsAdoptingStyleSheets) {\n      // Remove styles in template and make a shareable stylesheet\n      const styles = template.content.querySelectorAll('style');\n      if (styles) {\n        let css = '';\n        Array.from(styles).forEach(s => {\n          css += s.textContent;\n          s.parentNode.removeChild(s);\n        });\n        klass._styleSheet = new CSSStyleSheet();\n        klass._styleSheet.replaceSync(css);\n      }\n    }\n  }\n\n  /**\n   * Look up template from dom-module for element\n   *\n   * @param {string} is Element name to look up\n   * @return {?HTMLTemplateElement|undefined} Template found in dom module, or\n   *   undefined if not found\n   * @protected\n   */\n  function getTemplateFromDomModule(is) {\n    let template = null;\n    // Under strictTemplatePolicy in 3.x+, dom-module lookup is only allowed\n    // when opted-in via allowTemplateFromDomModule\n    if (is && (!strictTemplatePolicy || allowTemplateFromDomModule)) {\n      template = /** @type {?HTMLTemplateElement} */ (\n          DomModule.import(is, 'template'));\n      // Under strictTemplatePolicy, require any element with an `is`\n      // specified to have a dom-module\n      if (strictTemplatePolicy && !template) {\n        throw new Error(`strictTemplatePolicy: expecting dom-module or null template for ${is}`);\n      }\n    }\n    return template;\n  }\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @unrestricted\n   * @implements {Polymer_ElementMixin}\n   * @extends {polymerElementBase}\n   */\n  class PolymerElement extends polymerElementBase {\n\n    /**\n     * Current Polymer version in Semver notation.\n     * @type {string} Semver notation of the current version of Polymer.\n     * @nocollapse\n     */\n    static get polymerElementVersion() {\n      return version;\n    }\n\n    /**\n     * Override of PropertiesMixin _finalizeClass to create observers and\n     * find the template.\n     * @return {void}\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _finalizeClass() {\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      polymerElementBase._finalizeClass.call(this);\n      const observers = ownObservers(this);\n      if (observers) {\n        this.createObservers(observers, this._properties);\n      }\n      this._prepareTemplate();\n    }\n\n    /** @nocollapse */\n    static _prepareTemplate() {\n      // note: create \"working\" template that is finalized at instance time\n      let template = /** @type {PolymerElementConstructor} */ (this).template;\n      if (template) {\n        if (typeof template === 'string') {\n          console.error('template getter must return HTMLTemplateElement');\n          template = null;\n        } else if (!legacyOptimizations) {\n          template = template.cloneNode(true);\n        }\n      }\n\n      /** @override */\n      this.prototype._template = template;\n    }\n\n    /**\n     * Override of PropertiesChanged createProperties to create accessors\n     * and property effects for all of the properties.\n     * @param {!Object} props .\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createProperties(props) {\n      for (let p in props) {\n        createPropertyFromConfig(\n            /** @type {?} */ (this.prototype), p, props[p], props);\n      }\n    }\n\n    /**\n     * Creates observers for the given `observers` array.\n     * Leverages `PropertyEffects` to create observers.\n     * @param {Object} observers Array of observer descriptors for\n     *   this class\n     * @param {Object} dynamicFns Object containing keys for any properties\n     *   that are functions and should trigger the effect when the function\n     *   reference is changed\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createObservers(observers, dynamicFns) {\n      const proto = this.prototype;\n      for (let i=0; i < observers.length; i++) {\n        proto._createMethodObserver(observers[i], dynamicFns);\n      }\n    }\n\n    /**\n     * Returns the template that will be stamped into this element's shadow root.\n     *\n     * If a `static get is()` getter is defined, the default implementation will\n     * return the first `<template>` in a `dom-module` whose `id` matches this\n     * element's `is` (note that a `_template` property on the class prototype\n     * takes precedence over the `dom-module` template, to maintain legacy\n     * element semantics; a subclass will subsequently fall back to its super\n     * class template if neither a `prototype._template` or a `dom-module` for\n     * the class's `is` was found).\n     *\n     * Users may override this getter to return an arbitrary template\n     * (in which case the `is` getter is unnecessary). The template returned\n     * must be an `HTMLTemplateElement`.\n     *\n     * Note that when subclassing, if the super class overrode the default\n     * implementation and the subclass would like to provide an alternate\n     * template via a `dom-module`, it should override this getter and\n     * return `DomModule.import(this.is, 'template')`.\n     *\n     * If a subclass would like to modify the super class template, it should\n     * clone it rather than modify it in place.  If the getter does expensive\n     * work such as cloning/modifying a template, it should memoize the\n     * template for maximum performance:\n     *\n     *   let memoizedTemplate;\n     *   class MySubClass extends MySuperClass {\n     *     static get template() {\n     *       if (!memoizedTemplate) {\n     *         memoizedTemplate = super.template.cloneNode(true);\n     *         let subContent = document.createElement('div');\n     *         subContent.textContent = 'This came from MySubClass';\n     *         memoizedTemplate.content.appendChild(subContent);\n     *       }\n     *       return memoizedTemplate;\n     *     }\n     *   }\n     *\n     * @return {!HTMLTemplateElement|string} Template to be stamped\n     * @nocollapse\n     */\n    static get template() {\n      // Explanation of template-related properties:\n      // - constructor.template (this getter): the template for the class.\n      //     This can come from the prototype (for legacy elements), from a\n      //     dom-module, or from the super class's template (or can be overridden\n      //     altogether by the user)\n      // - constructor._template: memoized version of constructor.template\n      // - prototype._template: working template for the element, which will be\n      //     parsed and modified in place. It is a cloned version of\n      //     constructor.template, saved in _finalizeClass(). Note that before\n      //     this getter is called, for legacy elements this could be from a\n      //     _template field on the info object passed to Polymer(), a behavior,\n      //     or set in registered(); once the static getter runs, a clone of it\n      //     will overwrite it on the prototype as the working template.\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('_template', this))) {\n        let protoTemplate = this.prototype.hasOwnProperty(\n          JSCompiler_renameProperty('_template', this.prototype)) ?\n          this.prototype._template : undefined;\n        // Accept a function for the legacy Polymer({_template:...}) field for\n        // lazy parsing\n        if (typeof protoTemplate === 'function') {\n          protoTemplate = protoTemplate();\n        }\n        this._template =\n          // If user has put template on prototype (e.g. in legacy via registered\n          // callback or info object), prefer that first. Note that `null` is\n          // used as a sentinel to indicate \"no template\" and can be used to\n          // override a super template, whereas `undefined` is used as a\n          // sentinel to mean \"fall-back to default template lookup\" via\n          // dom-module and/or super.template.\n          protoTemplate !== undefined ? protoTemplate :\n          // Look in dom-module associated with this element's is\n          ((this.hasOwnProperty(JSCompiler_renameProperty('is', this)) &&\n          (getTemplateFromDomModule(/** @type {PolymerElementConstructor}*/ (this).is))) ||\n          // Next look for superclass template (call the super impl this\n          // way so that `this` points to the superclass)\n          Object.getPrototypeOf(/** @type {PolymerElementConstructor}*/ (this).prototype).constructor.template);\n      }\n      return this._template;\n    }\n\n    /**\n     * Set the template.\n     *\n     * @param {!HTMLTemplateElement|string} value Template to set.\n     * @nocollapse\n     */\n    static set template(value) {\n      this._template = value;\n    }\n\n    /**\n     * Path matching the url from which the element was imported.\n     *\n     * This path is used to resolve url's in template style cssText.\n     * The `importPath` property is also set on element instances and can be\n     * used to create bindings relative to the import path.\n     *\n     * For elements defined in ES modules, users should implement\n     * `static get importMeta() { return import.meta; }`, and the default\n     * implementation of `importPath` will  return `import.meta.url`'s path.\n     * For elements defined in HTML imports, this getter will return the path\n     * to the document containing a `dom-module` element matching this\n     * element's static `is` property.\n     *\n     * Note, this path should contain a trailing `/`.\n     *\n     * @return {string} The import path for this element class\n     * @suppress {missingProperties}\n     * @nocollapse\n     */\n    static get importPath() {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('_importPath', this))) {\n        const meta = this.importMeta;\n        if (meta) {\n          this._importPath = pathFromUrl(meta.url);\n        } else {\n          const module = DomModule.import(/** @type {PolymerElementConstructor} */ (this).is);\n          this._importPath = (module && module.assetpath) ||\n            Object.getPrototypeOf(/** @type {PolymerElementConstructor}*/ (this).prototype).constructor.importPath;\n        }\n      }\n      return this._importPath;\n    }\n\n    constructor() {\n      super();\n      /** @type {HTMLTemplateElement} */\n      this._template;\n      /** @type {string} */\n      this._importPath;\n      /** @type {string} */\n      this.rootPath;\n      /** @type {string} */\n      this.importPath;\n      /** @type {StampedTemplate | HTMLElement | ShadowRoot} */\n      this.root;\n      /** @type {!Object<string, !Element>} */\n      this.$;\n    }\n\n    /**\n     * Overrides the default `PropertyAccessors` to ensure class\n     * metaprogramming related to property accessors and effects has\n     * completed (calls `finalize`).\n     *\n     * It also initializes any property defaults provided via `value` in\n     * `properties` metadata.\n     *\n     * @return {void}\n     * @override\n     * @suppress {invalidCasts,missingProperties} go/missingfnprops\n     */\n    _initializeProperties() {\n      this.constructor.finalize();\n      // note: finalize template when we have access to `localName` to\n      // avoid dependence on `is` for polyfilling styling.\n      this.constructor._finalizeTemplate(/** @type {!HTMLElement} */(this).localName);\n      super._initializeProperties();\n      // set path defaults\n      this.rootPath = rootPath;\n      this.importPath = this.constructor.importPath;\n      // apply property defaults...\n      let p$ = propertyDefaults(this.constructor);\n      if (!p$) {\n        return;\n      }\n      for (let p in p$) {\n        let info = p$[p];\n        if (this._canApplyPropertyDefault(p)) {\n          let value = typeof info.value == 'function' ?\n            info.value.call(this) :\n            info.value;\n          // Set via `_setProperty` if there is an accessor, to enable\n          // initializing readOnly property defaults\n          if (this._hasAccessor(p)) {\n            this._setPendingProperty(p, value, true);\n          } else {\n            this[p] = value;\n          }\n        }\n      }\n    }\n\n    /**\n     * Determines if a property dfeault can be applied. For example, this\n     * prevents a default from being applied when a property that has no\n     * accessor is overridden by its host before upgrade (e.g. via a binding).\n     * @override\n     * @param {string} property Name of the property\n     * @return {boolean} Returns true if the property default can be applied.\n     */\n    _canApplyPropertyDefault(property) {\n      return !this.hasOwnProperty(property);\n    }\n\n    /**\n     * Gather style text for a style element in the template.\n     *\n     * @param {string} cssText Text containing styling to process\n     * @param {string} baseURI Base URI to rebase CSS paths against\n     * @return {string} The processed CSS text\n     * @protected\n     * @nocollapse\n     */\n    static _processStyleText(cssText, baseURI) {\n      return resolveCss(cssText, baseURI);\n    }\n\n    /**\n    * Configures an element `proto` to function with a given `template`.\n    * The element name `is` and extends `ext` must be specified for ShadyCSS\n    * style scoping.\n    *\n    * @param {string} is Tag name (or type extension name) for this element\n    * @return {void}\n    * @protected\n    * @nocollapse\n    */\n    static _finalizeTemplate(is) {\n      /** @const {HTMLTemplateElement} */\n      const template = this.prototype._template;\n      if (template && !template.__polymerFinalized) {\n        template.__polymerFinalized = true;\n        const importPath = this.importPath;\n        const baseURI = importPath ? resolveUrl(importPath) : '';\n        // e.g. support `include=\"module-name\"`, and ShadyCSS\n        processElementStyles(this, template, is, baseURI);\n        this.prototype._bindTemplate(template);\n      }\n    }\n\n    /**\n     * Provides a default implementation of the standard Custom Elements\n     * `connectedCallback`.\n     *\n     * The default implementation enables the property effects system and\n     * flushes any pending properties, and updates shimmed CSS properties\n     * when using the ShadyCSS scoping/custom properties polyfill.\n     *\n     * @override\n     * @suppress {missingProperties, invalidCasts} Super may or may not\n     *     implement the callback\n     * @return {void}\n     */\n    connectedCallback() {\n      if (window.ShadyCSS && this._template) {\n        window.ShadyCSS.styleElement(/** @type {!HTMLElement} */(this));\n      }\n      super.connectedCallback();\n    }\n\n    /**\n     * Stamps the element template.\n     *\n     * @return {void}\n     * @override\n     */\n    ready() {\n      if (this._template) {\n        this.root = this._stampTemplate(this._template);\n        this.$ = this.root.$;\n      }\n      super.ready();\n    }\n\n    /**\n     * Implements `PropertyEffects`'s `_readyClients` call. Attaches\n     * element dom by calling `_attachDom` with the dom stamped from the\n     * element's template via `_stampTemplate`. Note that this allows\n     * client dom to be attached to the element prior to any observers\n     * running.\n     *\n     * @return {void}\n     * @override\n     */\n    _readyClients() {\n      if (this._template) {\n        this.root = this._attachDom(/** @type {StampedTemplate} */(this.root));\n      }\n      // The super._readyClients here sets the clients initialized flag.\n      // We must wait to do this until after client dom is created/attached\n      // so that this flag can be checked to prevent notifications fired\n      // during this process from being handled before clients are ready.\n      super._readyClients();\n    }\n\n\n    /**\n     * Attaches an element's stamped dom to itself. By default,\n     * this method creates a `shadowRoot` and adds the dom to it.\n     * However, this method may be overridden to allow an element\n     * to put its dom in another location.\n     *\n     * @override\n     * @throws {Error}\n     * @suppress {missingReturn}\n     * @param {StampedTemplate} dom to attach to the element.\n     * @return {ShadowRoot} node to which the dom has been attached.\n     */\n    _attachDom(dom) {\n      const n = wrap(this);\n      if (n.attachShadow) {\n        if (dom) {\n          if (!n.shadowRoot) {\n            n.attachShadow({mode: 'open', shadyUpgradeFragment: dom});\n            n.shadowRoot.appendChild(dom);\n            // When `adoptedStyleSheets` is supported a stylesheet is made\n            // available on the element constructor.\n            if (this.constructor._styleSheet) {\n              n.shadowRoot.adoptedStyleSheets = [this.constructor._styleSheet];\n            }\n          }\n          if (syncInitialRender && window.ShadyDOM) {\n            window.ShadyDOM.flushInitial(n.shadowRoot);\n          }\n          return n.shadowRoot;\n        }\n        return null;\n      } else {\n        throw new Error('ShadowDOM not available. ' +\n          // TODO(sorvell): move to compile-time conditional when supported\n        'PolymerElement can create dom as children instead of in ' +\n        'ShadowDOM by setting `this.root = this;\\` before \\`ready\\`.');\n      }\n    }\n\n    /**\n     * When using the ShadyCSS scoping and custom property shim, causes all\n     * shimmed styles in this element (and its subtree) to be updated\n     * based on current custom property values.\n     *\n     * The optional parameter overrides inline custom property styles with an\n     * object of properties where the keys are CSS properties, and the values\n     * are strings.\n     *\n     * Example: `this.updateStyles({'--color': 'blue'})`\n     *\n     * These properties are retained unless a value of `null` is set.\n     *\n     * Note: This function does not support updating CSS mixins.\n     * You can not dynamically change the value of an `@apply`.\n     *\n     * @override\n     * @param {Object=} properties Bag of custom property key/values to\n     *   apply to this element.\n     * @return {void}\n     * @suppress {invalidCasts}\n     */\n    updateStyles(properties) {\n      if (window.ShadyCSS) {\n        window.ShadyCSS.styleSubtree(/** @type {!HTMLElement} */(this), properties);\n      }\n    }\n\n    /**\n     * Rewrites a given URL relative to a base URL. The base URL defaults to\n     * the original location of the document containing the `dom-module` for\n     * this element. This method will return the same URL before and after\n     * bundling.\n     *\n     * Note that this function performs no resolution for URLs that start\n     * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\n     * URL resolution, use `window.URL`.\n     *\n     * @override\n     * @param {string} url URL to resolve.\n     * @param {string=} base Optional base URL to resolve against, defaults\n     * to the element's `importPath`\n     * @return {string} Rewritten URL relative to base\n     */\n    resolveUrl(url, base) {\n      if (!base && this.importPath) {\n        base = resolveUrl(this.importPath);\n      }\n      return resolveUrl(url, base);\n    }\n\n    /**\n     * Overrides `PropertyEffects` to add map of dynamic functions on\n     * template info, for consumption by `PropertyEffects` template binding\n     * code. This map determines which method templates should have accessors\n     * created for them.\n     *\n     * @param {!HTMLTemplateElement} template Template\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} .\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _parseTemplateContent(template, templateInfo, nodeInfo) {\n      templateInfo.dynamicFns = templateInfo.dynamicFns || this._properties;\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      return polymerElementBase._parseTemplateContent.call(\n        this, template, templateInfo, nodeInfo);\n    }\n\n    /**\n     * Overrides `PropertyEffects` to warn on use of undeclared properties in\n     * template.\n     *\n     * @param {Object} templateInfo Template metadata to add effect to\n     * @param {string} prop Property that should trigger the effect\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _addTemplatePropertyEffect(templateInfo, prop, effect) {\n      // Warn if properties are used in template without being declared.\n      // Properties must be listed in `properties` to be included in\n      // `observedAttributes` since CE V1 reads that at registration time, and\n      // since we want to keep template parsing lazy, we can't automatically\n      // add undeclared properties used in templates to `observedAttributes`.\n      // The warning is only enabled in `legacyOptimizations` mode, since\n      // we don't want to spam existing users who might have adopted the\n      // shorthand when attribute deserialization is not important.\n      if (legacyWarnings && !(prop in this._properties) &&\n          // Methods used in templates with no dependencies (or only literal\n          // dependencies) become accessors with template effects; ignore these\n          !(effect.info.part.signature && effect.info.part.signature.static) &&\n          // Warnings for bindings added to nested templates are handled by\n          // templatizer so ignore both the host-to-template bindings\n          // (`hostProp`) and TemplateInstance-to-child bindings\n          // (`nestedTemplate`)\n          !effect.info.part.hostProp && !templateInfo.nestedTemplate) {\n        console.warn(`Property '${prop}' used in template but not declared in 'properties'; ` +\n          `attribute will not be observed.`);\n      }\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      return polymerElementBase._addTemplatePropertyEffect.call(\n        this, templateInfo, prop, effect);\n    }\n\n  }\n\n  return PolymerElement;\n});\n\n/**\n * When using the ShadyCSS scoping and custom property shim, causes all\n * shimmed `styles` (via `custom-style`) in the document (and its subtree)\n * to be updated based on current custom property values.\n *\n * The optional parameter overrides inline custom property styles with an\n * object of properties where the keys are CSS properties, and the values\n * are strings.\n *\n * Example: `updateStyles({'--color': 'blue'})`\n *\n * These properties are retained unless a value of `null` is set.\n *\n * @param {Object=} props Bag of custom property key/values to\n *   apply to the document.\n * @return {void}\n */\nexport const updateStyles = function(props) {\n  if (window.ShadyCSS) {\n    window.ShadyCSS.styleDocument(props);\n  }\n};\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the Polymer html\n * template tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n *\n * @type {!TrustedTypePolicy|undefined}\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('polymer-html-literal', {createHTML: (s) => s});\n\n/**\n * Class representing a static string value which can be used to filter\n * strings by asseting that they have been created via this class. The\n * `value` property returns the string passed to the constructor.\n */\nclass LiteralString {\n  /**\n   * @param {!ITemplateArray} strings Constant parts of tagged template literal\n   * @param {!Array<*>} values Variable parts of tagged template literal\n   */\n  constructor(strings, values) {\n    assertValidTemplateStringParameters(strings, values);\n    const string = values.reduce(\n        (acc, v, idx) => acc + literalValue(v) + strings[idx + 1], strings[0]);\n    /** @type {string} */\n    this.value = string.toString();\n  }\n  /**\n   * @return {string} LiteralString string value\n   * @override\n   */\n  toString() {\n    return this.value;\n  }\n}\n\n/**\n * @param {*} value Object to stringify into HTML\n * @return {string} HTML stringified form of `obj`\n */\nfunction literalValue(value) {\n  if (value instanceof LiteralString) {\n    return /** @type {!LiteralString} */(value).value;\n  } else {\n    throw new Error(\n        `non-literal value passed to Polymer's htmlLiteral function: ${value}`\n    );\n  }\n}\n\n/**\n * @param {*} value Object to stringify into HTML\n * @return {string} HTML stringified form of `obj`\n */\nfunction htmlValue(value) {\n  if (value instanceof HTMLTemplateElement) {\n    // This might be an mXSS risk – mainly in the case where this template\n    // contains untrusted content that was believed to be sanitized.\n    // However we can't just use the XMLSerializer here because it misencodes\n    // `>` characters inside style tags.\n    // For an example of an actual case that hit this encoding issue,\n    // see b/198592167\n    return /** @type {!HTMLTemplateElement } */(value).innerHTML;\n  } else if (value instanceof LiteralString) {\n    return literalValue(value);\n  } else {\n    throw new Error(\n        `non-template value passed to Polymer's html function: ${value}`);\n  }\n}\n\n/**\n * A template literal tag that creates an HTML <template> element from the\n * contents of the string.\n *\n * This allows you to write a Polymer Template in JavaScript.\n *\n * Templates can be composed by interpolating `HTMLTemplateElement`s in\n * expressions in the JavaScript template literal. The nested template's\n * `innerHTML` is included in the containing template.  The only other\n * values allowed in expressions are those returned from `htmlLiteral`\n * which ensures only literal values from JS source ever reach the HTML, to\n * guard against XSS risks.\n *\n * All other values are disallowed in expressions to help prevent XSS\n * attacks; however, `htmlLiteral` can be used to compose static\n * string values into templates. This is useful to compose strings into\n * places that do not accept html, like the css text of a `style`\n * element.\n *\n * Example:\n *\n *     static get template() {\n *       return html`\n *         <style>:host{ content:\"...\" }</style>\n *         <div class=\"shadowed\">${this.partialTemplate}</div>\n *         ${super.template}\n *       `;\n *     }\n *     static get partialTemplate() { return html`<span>Partial!</span>`; }\n *\n * @param {!ITemplateArray} strings Constant parts of tagged template literal\n * @param {...*} values Variable parts of tagged template literal\n * @return {!HTMLTemplateElement} Constructed HTMLTemplateElement\n */\nexport const html = function html(strings, ...values) {\n  assertValidTemplateStringParameters(strings, values);\n  const template =\n      /** @type {!HTMLTemplateElement} */ (document.createElement('template'));\n  let value = values.reduce(\n      (acc, v, idx) => acc + htmlValue(v) + strings[idx + 1], strings[0]);\n  if (policy) {\n    value = policy.createHTML(value);\n  }\n  template.innerHTML = value;\n  return template;\n};\n\n/**\n * @param {!ITemplateArray} strings Constant parts of tagged template literal\n * @param {!Array<*>} values Array of values from quasis\n */\nconst assertValidTemplateStringParameters = (strings, values) => {\n  // Note: if/when https://github.com/tc39/proposal-array-is-template-object\n  // is standardized, use that instead when available, as it can perform an\n  // unforgable check (though of course, the function itself can be forged).\n  if (!Array.isArray(strings) || !Array.isArray(strings.raw) ||\n      (values.length !== strings.length - 1)) {\n    // This is either caused by a browser bug, a compiler bug, or someone\n    // calling the html template tag function as a regular function.\n    //\n    throw new TypeError('Invalid call to the html template tag');\n  }\n};\n\n/**\n * An html literal tag that can be used with `html` to compose.\n * a literal string.\n *\n * Example:\n *\n *     static get template() {\n *       return html`\n *         <style>\n *           :host { display: block; }\n *           ${this.styleTemplate()}\n *         </style>\n *         <div class=\"shadowed\">${staticValue}</div>\n *         ${super.template}\n *       `;\n *     }\n *     static get styleTemplate() {\n *        return htmlLiteral`.shadowed { background: gray; }`;\n *     }\n *\n * @param {!ITemplateArray} strings Constant parts of tagged template literal\n * @param {...*} values Variable parts of tagged template literal\n * @return {!LiteralString} Constructed literal string\n */\nexport const htmlLiteral = function(strings, ...values) {\n  return new LiteralString(strings, values);\n};\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { ElementMixin, version } from './lib/mixins/element-mixin.js';\nexport { html } from './lib/utils/html-tag.js';\n\nexport { version };\n\n/**\n * Base class that provides the core API for Polymer's meta-programming\n * features including template stamping, data-binding, attribute deserialization,\n * and property change observation.\n *\n * @customElement\n * @polymer\n * @constructor\n * @implements {Polymer_ElementMixin}\n * @extends HTMLElement\n * @appliesMixin ElementMixin\n * @summary Custom element base class that provides the core API for Polymer's\n *   key meta-programming features including template stamping, data-binding,\n *   attribute deserialization, and property change observation\n */\nexport const PolymerElement = ElementMixin(HTMLElement);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Helper that provides a set of functions for RTL.\n */\nclass DirHelper {\n  /**\n   * Get the scroll type in the current browser view.\n   *\n   * @return {string} the scroll type. Possible values are `default|reverse|negative`\n   */\n  static detectScrollType() {\n    const dummy = document.createElement('div');\n    dummy.textContent = 'ABCD';\n    dummy.dir = 'rtl';\n    dummy.style.fontSize = '14px';\n    dummy.style.width = '4px';\n    dummy.style.height = '1px';\n    dummy.style.position = 'absolute';\n    dummy.style.top = '-1000px';\n    dummy.style.overflow = 'scroll';\n    document.body.appendChild(dummy);\n\n    let cachedType = 'reverse';\n    if (dummy.scrollLeft > 0) {\n      cachedType = 'default';\n    } else {\n      dummy.scrollLeft = 2;\n      if (dummy.scrollLeft < 2) {\n        cachedType = 'negative';\n      }\n    }\n    document.body.removeChild(dummy);\n    return cachedType;\n  }\n\n  /**\n   * Get the scrollLeft value of the element relative to the direction\n   *\n   * @param {string} scrollType type of the scroll detected with `detectScrollType`\n   * @param {string} direction current direction of the element\n   * @param {Element} element\n   * @return {number} the scrollLeft value.\n   */\n  static getNormalizedScrollLeft(scrollType, direction, element) {\n    const { scrollLeft } = element;\n    if (direction !== 'rtl' || !scrollType) {\n      return scrollLeft;\n    }\n\n    switch (scrollType) {\n      case 'negative':\n        return element.scrollWidth - element.clientWidth + scrollLeft;\n      case 'reverse':\n        return element.scrollWidth - element.clientWidth - scrollLeft;\n      default:\n        return scrollLeft;\n    }\n  }\n\n  /**\n   * Set the scrollLeft value of the element relative to the direction\n   *\n   * @param {string} scrollType type of the scroll detected with `detectScrollType`\n   * @param {string} direction current direction of the element\n   * @param {Element} element\n   * @param {number} scrollLeft the scrollLeft value to be set\n   */\n  static setNormalizedScrollLeft(scrollType, direction, element, scrollLeft) {\n    if (direction !== 'rtl' || !scrollType) {\n      element.scrollLeft = scrollLeft;\n      return;\n    }\n\n    switch (scrollType) {\n      case 'negative':\n        element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\n        break;\n      case 'reverse':\n        element.scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\n        break;\n      default:\n        element.scrollLeft = scrollLeft;\n        break;\n    }\n  }\n}\n\nexport { DirHelper };\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { DirHelper } from './dir-helper.js';\n\n/**\n * Array of Vaadin custom element classes that have been subscribed to the dir changes.\n */\nconst directionSubscribers = [];\n\nfunction directionUpdater() {\n  const documentDir = getDocumentDir();\n  directionSubscribers.forEach((element) => {\n    alignDirs(element, documentDir);\n  });\n}\n\nlet scrollType;\n\nconst directionObserver = new MutationObserver(directionUpdater);\ndirectionObserver.observe(document.documentElement, { attributes: true, attributeFilter: ['dir'] });\n\nfunction alignDirs(element, documentDir, elementDir = element.getAttribute('dir')) {\n  if (documentDir) {\n    element.setAttribute('dir', documentDir);\n  } else if (elementDir != null) {\n    element.removeAttribute('dir');\n  }\n}\n\nfunction getDocumentDir() {\n  return document.documentElement.getAttribute('dir');\n}\n\n/**\n * A mixin to handle `dir` attribute based on the one set on the `<html>` element.\n *\n * @polymerMixin\n */\nexport const DirMixin = (superClass) =>\n  class VaadinDirMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * @protected\n         */\n        dir: {\n          type: String,\n          value: '',\n          reflectToAttribute: true,\n          converter: {\n            fromAttribute: (attr) => {\n              return !attr ? '' : attr;\n            },\n            toAttribute: (prop) => {\n              return prop === '' ? null : prop;\n            },\n          },\n        },\n      };\n    }\n\n    /** @protected */\n    static finalize() {\n      super.finalize();\n\n      if (!scrollType) {\n        scrollType = DirHelper.detectScrollType();\n      }\n    }\n\n    /** @protected */\n    connectedCallback() {\n      super.connectedCallback();\n\n      if (!this.hasAttribute('dir') || this.__restoreSubscription) {\n        this.__subscribe();\n        alignDirs(this, getDocumentDir(), null);\n      }\n    }\n\n    /** @protected */\n    attributeChangedCallback(name, oldValue, newValue) {\n      super.attributeChangedCallback(name, oldValue, newValue);\n      if (name !== 'dir') {\n        return;\n      }\n\n      const documentDir = getDocumentDir();\n\n      // New value equals to the document direction and the element is not subscribed to the changes\n      const newValueEqlDocDir = newValue === documentDir && directionSubscribers.indexOf(this) === -1;\n      // Value was emptied and the element is not subscribed to the changes\n      const newValueEmptied = !newValue && oldValue && directionSubscribers.indexOf(this) === -1;\n      // New value is different and the old equals to document direction and the element is not subscribed to the changes\n      const newDiffValue = newValue !== documentDir && oldValue === documentDir;\n\n      if (newValueEqlDocDir || newValueEmptied) {\n        this.__subscribe();\n        alignDirs(this, documentDir, newValue);\n      } else if (newDiffValue) {\n        this.__unsubscribe();\n      }\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      this.__restoreSubscription = directionSubscribers.includes(this);\n      this.__unsubscribe();\n    }\n\n    /** @protected */\n    _valueToNodeAttribute(node, value, attribute) {\n      // Override default Polymer attribute reflection to match native behavior of HTMLElement.dir property\n      // If the property contains an empty string then it should not create an empty attribute\n      if (attribute === 'dir' && value === '' && !node.hasAttribute('dir')) {\n        return;\n      }\n      super._valueToNodeAttribute(node, value, attribute);\n    }\n\n    /** @protected */\n    _attributeToProperty(attribute, value, type) {\n      // Override default Polymer attribute reflection to match native behavior of HTMLElement.dir property\n      // If the attribute is removed, then the dir property should contain an empty string instead of null\n      if (attribute === 'dir' && !value) {\n        this.dir = '';\n      } else {\n        super._attributeToProperty(attribute, value, type);\n      }\n    }\n\n    /** @private */\n    __subscribe() {\n      if (!directionSubscribers.includes(this)) {\n        directionSubscribers.push(this);\n      }\n    }\n\n    /** @private */\n    __unsubscribe() {\n      if (directionSubscribers.includes(this)) {\n        directionSubscribers.splice(directionSubscribers.indexOf(this), 1);\n      }\n    }\n\n    /**\n     * @param {Element} element\n     * @return {number}\n     * @protected\n     */\n    __getNormalizedScrollLeft(element) {\n      return DirHelper.getNormalizedScrollLeft(scrollType, this.getAttribute('dir') || 'ltr', element);\n    }\n\n    /**\n     * @param {Element} element\n     * @param {number} scrollLeft\n     * @protected\n     */\n    __setNormalizedScrollLeft(element, scrollLeft) {\n      return DirHelper.setNormalizedScrollLeft(scrollType, this.getAttribute('dir') || 'ltr', element, scrollLeft);\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nexport class InputContainer extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get is() {\n    return 'vaadin-input-container';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n          flex: 0 1 auto;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        /* Reset the native input styles */\n        ::slotted(input) {\n          -webkit-appearance: none;\n          -moz-appearance: none;\n          flex: auto;\n          white-space: nowrap;\n          overflow: hidden;\n          width: 100%;\n          height: 100%;\n          outline: none;\n          margin: 0;\n          padding: 0;\n          border: 0;\n          border-radius: 0;\n          min-width: 0;\n          font: inherit;\n          line-height: normal;\n          color: inherit;\n          background-color: transparent;\n          /* Disable default invalid style in Firefox */\n          box-shadow: none;\n        }\n\n        ::slotted(*) {\n          flex: none;\n        }\n\n        ::slotted(:is(input, textarea))::placeholder {\n          /* Use ::slotted(input:placeholder-shown) in themes to style the placeholder. */\n          /* because ::slotted(...)::placeholder does not work in Safari. */\n          font: inherit;\n          color: inherit;\n          /* Override default opacity in Firefox */\n          opacity: 1;\n        }\n      </style>\n      <slot name=\"prefix\"></slot>\n      <slot></slot>\n      <slot name=\"suffix\"></slot>\n    `;\n  }\n\n  static get properties() {\n    return {\n      /**\n       * If true, the user cannot interact with this element.\n       */\n      disabled: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Set to true to make this element read-only.\n       */\n      readonly: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Set to true when the element is invalid.\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addEventListener('pointerdown', (event) => {\n      if (event.target === this) {\n        // Prevent direct clicks to the input container from blurring the input\n        event.preventDefault();\n      }\n    });\n\n    this.addEventListener('click', (event) => {\n      if (event.target === this) {\n        // The vaadin-input-container element was directly clicked,\n        // focus any focusable child element from the default slot\n        this.shadowRoot\n          .querySelector('slot:not([name])')\n          .assignedNodes({ flatten: true })\n          .forEach((node) => node.focus && node.focus());\n      }\n    });\n  }\n}\n\ncustomElements.define(InputContainer.is, InputContainer);\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport './version.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst font = css`\n  :host {\n    /* Font family */\n    --material-font-family: 'Roboto', sans-serif;\n\n    /* Font sizes */\n    --material-h1-font-size: 6rem;\n    --material-h2-font-size: 3.75rem;\n    --material-h3-font-size: 3rem;\n    --material-h4-font-size: 2.125rem;\n    --material-h5-font-size: 1.5rem;\n    --material-h6-font-size: 1.25rem;\n    --material-body-font-size: 1rem;\n    --material-small-font-size: 0.875rem;\n    --material-button-font-size: 0.875rem;\n    --material-caption-font-size: 0.75rem;\n\n    /* Icon size */\n    --material-icon-font-size: 20px;\n  }\n`;\n\nconst typography = css`\n  body,\n  :host {\n    font-family: var(--material-font-family);\n    font-size: var(--material-body-font-size);\n    line-height: 1.4;\n    -webkit-text-size-adjust: 100%;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: inherit;\n    line-height: 1.1;\n    margin-top: 1.5em;\n  }\n\n  h1 {\n    font-size: var(--material-h3-font-size);\n    font-weight: 300;\n    letter-spacing: -0.015em;\n    margin-bottom: 1em;\n    text-indent: -0.07em;\n  }\n\n  h2 {\n    font-size: var(--material-h4-font-size);\n    font-weight: 300;\n    letter-spacing: -0.01em;\n    margin-bottom: 0.75em;\n    text-indent: -0.07em;\n  }\n\n  h3 {\n    font-size: var(--material-h5-font-size);\n    font-weight: 400;\n    margin-bottom: 0.75em;\n    text-indent: -0.05em;\n  }\n\n  h4 {\n    font-size: var(--material-h6-font-size);\n    font-weight: 400;\n    letter-spacing: 0.01em;\n    margin-bottom: 0.75em;\n    text-indent: -0.05em;\n  }\n\n  h5 {\n    font-size: var(--material-body-font-size);\n    font-weight: 500;\n    margin-bottom: 0.5em;\n    text-indent: -0.025em;\n  }\n\n  h6 {\n    font-size: var(--material-small-font-size);\n    font-weight: 500;\n    letter-spacing: 0.01em;\n    margin-bottom: 0.25em;\n    text-indent: -0.025em;\n  }\n\n  a,\n  b,\n  strong {\n    font-weight: 500;\n  }\n`;\n\nregisterStyles('', typography, { moduleId: 'material-typography' });\n\nconst $tpl = document.createElement('template');\n$tpl.innerHTML = `<style>${font.toString().replace(':host', 'html')}</style>`;\ndocument.head.appendChild($tpl.content);\n\nexport { font, typography };\n\n/* Import Roboto from Google Fonts */\nif (!window.polymerSkipLoadingFontRoboto) {\n  /* prettier-ignore */\n  const font = 'https://fonts.googleapis.com/css?family=Roboto+Mono:400,700|Roboto:400,300,300italic,400italic,500,500italic,700,700italic';\n  const link = document.createElement('link');\n  link.rel = 'stylesheet';\n  link.type = 'text/css';\n  link.crossOrigin = 'anonymous';\n  link.href = font;\n  document.head.appendChild(link);\n}\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport './version.js';\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst shadow = css`\n  /* prettier-ignore */\n  :host {\n    /* from http://codepen.io/shyndman/pen/c5394ddf2e8b2a5c9185904b57421cdb */\n    --material-shadow-elevation-2dp: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n    --material-shadow-elevation-3dp: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 1px 8px 0 rgba(0, 0, 0, 0.12), 0 3px 3px -2px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-4dp: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-6dp: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-8dp: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-12dp: 0 12px 16px 1px rgba(0, 0, 0, 0.14), 0 4px 22px 3px rgba(0, 0, 0, 0.12), 0 6px 7px -4px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-16dp: 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-24dp: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12), 0 11px 15px -7px rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst $tpl = document.createElement('template');\n$tpl.innerHTML = `<style>${shadow.toString().replace(':host', 'html')}</style>`;\ndocument.head.appendChild($tpl.content);\n\nexport { shadow };\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport '../typography.js';\nimport '../shadow.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst overlay = css`\n  :host {\n    top: 16px;\n    right: 16px;\n    /* TODO (@jouni): remove unnecessary multiplication after https://github.com/vaadin/vaadin-overlay/issues/90 is fixed */\n    bottom: calc(1px * var(--vaadin-overlay-viewport-bottom) + 16px);\n    left: 16px;\n  }\n\n  [part='overlay'] {\n    background-color: var(--material-background-color);\n    border-radius: 4px;\n    box-shadow: var(--material-shadow-elevation-4dp);\n    color: var(--material-body-text-color);\n    font-family: var(--material-font-family);\n    font-size: var(--material-body-font-size);\n    font-weight: 400;\n  }\n\n  [part='content'] {\n    padding: 8px 0;\n  }\n\n  [part='backdrop'] {\n    opacity: 0.2;\n    animation: 0.2s vaadin-overlay-backdrop-enter;\n    will-change: opacity;\n  }\n\n  @keyframes vaadin-overlay-backdrop-enter {\n    0% {\n      opacity: 0;\n    }\n  }\n`;\n\nregisterStyles('', overlay, { moduleId: 'material-overlay' });\n\nexport { overlay };\n", "import { overlay } from '@vaadin/vaadin-material-styles/mixins/overlay.js';\nimport { registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles('vaadin-overlay', overlay, { moduleId: 'material-vaadin-overlay' });\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' -> '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction calcEditDistances(current, currentStart, currentEnd,\n                            old, oldStart, oldEnd) {\n  // \"Deletion\" columns\n  let rowCount = oldEnd - oldStart + 1;\n  let columnCount = currentEnd - currentStart + 1;\n  let distances = new Array(rowCount);\n\n  // \"Addition\" rows. Initialize null column.\n  for (let i = 0; i < rowCount; i++) {\n    distances[i] = new Array(columnCount);\n    distances[i][0] = i;\n  }\n\n  // Initialize null row\n  for (let j = 0; j < columnCount; j++)\n    distances[0][j] = j;\n\n  for (let i = 1; i < rowCount; i++) {\n    for (let j = 1; j < columnCount; j++) {\n      if (equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n        distances[i][j] = distances[i - 1][j - 1];\n      else {\n        let north = distances[i - 1][j] + 1;\n        let west = distances[i][j - 1] + 1;\n        distances[i][j] = north < west ? north : west;\n      }\n    }\n  }\n\n  return distances;\n}\n\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction spliceOperationsFromEditDistances(distances) {\n  let i = distances.length - 1;\n  let j = distances[0].length - 1;\n  let current = distances[i][j];\n  let edits = [];\n  while (i > 0 || j > 0) {\n    if (i == 0) {\n      edits.push(EDIT_ADD);\n      j--;\n      continue;\n    }\n    if (j == 0) {\n      edits.push(EDIT_DELETE);\n      i--;\n      continue;\n    }\n    let northWest = distances[i - 1][j - 1];\n    let west = distances[i - 1][j];\n    let north = distances[i][j - 1];\n\n    let min;\n    if (west < north)\n      min = west < northWest ? west : northWest;\n    else\n      min = north < northWest ? north : northWest;\n\n    if (min == northWest) {\n      if (northWest == current) {\n        edits.push(EDIT_LEAVE);\n      } else {\n        edits.push(EDIT_UPDATE);\n        current = northWest;\n      }\n      i--;\n      j--;\n    } else if (min == west) {\n      edits.push(EDIT_DELETE);\n      i--;\n      current = west;\n    } else {\n      edits.push(EDIT_ADD);\n      j--;\n      current = north;\n    }\n  }\n\n  edits.reverse();\n  return edits;\n}\n\n/**\n * Splice Projection functions:\n *\n * A splice map is a representation of how a previous array of items\n * was transformed into a new array of items. Conceptually it is a list of\n * tuples of\n *\n *   <index, removed, addedCount>\n *\n * which are kept in ascending index order of. The tuple represents that at\n * the |index|, |removed| sequence of items were removed, and counting forward\n * from |index|, |addedCount| items were added.\n */\n\n/**\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n *\n * @param {!Array} current The current \"changed\" array for which to\n * calculate splices.\n * @param {number} currentStart Starting index in the `current` array for\n * which splices are calculated.\n * @param {number} currentEnd Ending index in the `current` array for\n * which splices are calculated.\n * @param {!Array} old The original \"unchanged\" array to compare `current`\n * against to determine splices.\n * @param {number} oldStart Starting index in the `old` array for\n * which splices are calculated.\n * @param {number} oldEnd Ending index in the `old` array for\n * which splices are calculated.\n * @return {!Array} Returns an array of splice record objects. Each of these\n * contains: `index` the location where the splice occurred; `removed`\n * the array of removed items from this location; `addedCount` the number\n * of items added at this location.\n */\nfunction calcSplices(current, currentStart, currentEnd,\n                      old, oldStart, oldEnd) {\n  let prefixCount = 0;\n  let suffixCount = 0;\n  let splice;\n\n  let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n  if (currentStart == 0 && oldStart == 0)\n    prefixCount = sharedPrefix(current, old, minLength);\n\n  if (currentEnd == current.length && oldEnd == old.length)\n    suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n\n  currentStart += prefixCount;\n  oldStart += prefixCount;\n  currentEnd -= suffixCount;\n  oldEnd -= suffixCount;\n\n  if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n    return [];\n\n  if (currentStart == currentEnd) {\n    splice = newSplice(currentStart, [], 0);\n    while (oldStart < oldEnd)\n      splice.removed.push(old[oldStart++]);\n\n    return [ splice ];\n  } else if (oldStart == oldEnd)\n    return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n  let ops = spliceOperationsFromEditDistances(\n      calcEditDistances(current, currentStart, currentEnd,\n                             old, oldStart, oldEnd));\n\n  splice = undefined;\n  let splices = [];\n  let index = currentStart;\n  let oldIndex = oldStart;\n  for (let i = 0; i < ops.length; i++) {\n    switch(ops[i]) {\n      case EDIT_LEAVE:\n        if (splice) {\n          splices.push(splice);\n          splice = undefined;\n        }\n\n        index++;\n        oldIndex++;\n        break;\n      case EDIT_UPDATE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n      case EDIT_ADD:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n        break;\n      case EDIT_DELETE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n    }\n  }\n\n  if (splice) {\n    splices.push(splice);\n  }\n  return splices;\n}\n\nfunction sharedPrefix(current, old, searchLength) {\n  for (let i = 0; i < searchLength; i++)\n    if (!equals(current[i], old[i]))\n      return i;\n  return searchLength;\n}\n\nfunction sharedSuffix(current, old, searchLength) {\n  let index1 = current.length;\n  let index2 = old.length;\n  let count = 0;\n  while (count < searchLength && equals(current[--index1], old[--index2]))\n    count++;\n\n  return count;\n}\n\n/**\n * Returns an array of splice records indicating the minimum edits required\n * to transform the `previous` array into the `current` array.\n *\n * Splice records are ordered by index and contain the following fields:\n * - `index`: index where edit started\n * - `removed`: array of removed items from this index\n * - `addedCount`: number of items added at this index\n *\n * This function is based on the Levenshtein \"minimum edit distance\"\n * algorithm. Note that updates are treated as removal followed by addition.\n *\n * The worst-case time complexity of this algorithm is `O(l * p)`\n *   l: The length of the current array\n *   p: The length of the previous array\n *\n * However, the worst-case complexity is reduced by an `O(n)` optimization\n * to detect any shared prefix & suffix between the two arrays and only\n * perform the more expensive minimum edit distance calculation over the\n * non-shared portions of the arrays.\n *\n * @function\n * @param {!Array} current The \"changed\" array for which splices will be\n * calculated.\n * @param {!Array} previous The \"unchanged\" original array to compare\n * `current` against to determine the splices.\n * @return {!Array} Returns an array of splice record objects. Each of these\n * contains: `index` the location where the splice occurred; `removed`\n * the array of removed items from this location; `addedCount` the number\n * of items added at this location.\n */\nexport function calculateSplices(current, previous) {\n  return calcSplices(current, 0, current.length, previous, 0,\n                          previous.length);\n}\n\nfunction equals(currentValue, previousValue) {\n  return currentValue === previousValue;\n}\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nimport { calculateSplices } from './array-splice.js';\nimport { microTask } from './async.js';\nimport { wrap } from './wrap.js';\n\n/**\n * Returns true if `node` is a slot element\n * @param {!Node} node Node to test.\n * @return {boolean} Returns true if the given `node` is a slot\n * @private\n */\nfunction isSlot(node) {\n  return (node.localName === 'slot');\n}\n\n/**\n * Class that listens for changes (additions or removals) to\n * \"flattened nodes\" on a given `node`. The list of flattened nodes consists\n * of a node's children and, for any children that are `<slot>` elements,\n * the expanded flattened list of `assignedNodes`.\n * For example, if the observed node has children `<a></a><slot></slot><b></b>`\n * and the `<slot>` has one `<div>` assigned to it, then the flattened\n * nodes list is `<a></a><div></div><b></b>`. If the `<slot>` has other\n * `<slot>` elements assigned to it, these are flattened as well.\n *\n * The provided `callback` is called whenever any change to this list\n * of flattened nodes occurs, where an addition or removal of a node is\n * considered a change. The `callback` is called with one argument, an object\n * containing an array of any `addedNodes` and `removedNodes`.\n *\n * Note: the callback is called asynchronous to any changes\n * at a microtask checkpoint. This is because observation is performed using\n * `MutationObserver` and the `<slot>` element's `slotchange` event which\n * are asynchronous.\n *\n * An example:\n * ```js\n * class TestSelfObserve extends PolymerElement {\n *   static get is() { return 'test-self-observe';}\n *   connectedCallback() {\n *     super.connectedCallback();\n *     this._observer = new FlattenedNodesObserver(this, (info) => {\n *       this.info = info;\n *     });\n *   }\n *   disconnectedCallback() {\n *     super.disconnectedCallback();\n *     this._observer.disconnect();\n *   }\n * }\n * customElements.define(TestSelfObserve.is, TestSelfObserve);\n * ```\n *\n * @summary Class that listens for changes (additions or removals) to\n * \"flattened nodes\" on a given `node`.\n * @implements {PolymerDomApi.ObserveHandle}\n */\nexport let FlattenedNodesObserver = class {\n\n  /**\n   * Returns the list of flattened nodes for the given `node`.\n   * This list consists of a node's children and, for any children\n   * that are `<slot>` elements, the expanded flattened list of `assignedNodes`.\n   * For example, if the observed node has children `<a></a><slot></slot><b></b>`\n   * and the `<slot>` has one `<div>` assigned to it, then the flattened\n   * nodes list is `<a></a><div></div><b></b>`. If the `<slot>` has other\n   * `<slot>` elements assigned to it, these are flattened as well.\n   *\n   * @param {!HTMLElement|!HTMLSlotElement} node The node for which to\n   *      return the list of flattened nodes.\n   * @return {!Array<!Node>} The list of flattened nodes for the given `node`.\n   * @nocollapse See https://github.com/google/closure-compiler/issues/2763\n   */\n  // eslint-disable-next-line\n  static getFlattenedNodes(node) {\n    const wrapped = wrap(node);\n    if (isSlot(node)) {\n      node = /** @type {!HTMLSlotElement} */(node); // eslint-disable-line no-self-assign\n      return wrapped.assignedNodes({flatten: true});\n    } else {\n      return Array.from(wrapped.childNodes).map((node) => {\n        if (isSlot(node)) {\n          node = /** @type {!HTMLSlotElement} */(node); // eslint-disable-line no-self-assign\n          return wrap(node).assignedNodes({flatten: true});\n        } else {\n          return [node];\n        }\n      }).reduce((a, b) => a.concat(b), []);\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} target Node on which to listen for changes.\n   * @param {?function(this: Element, { target: !HTMLElement, addedNodes: !Array<!Element>, removedNodes: !Array<!Element> }):void} callback Function called when there are additions\n   * or removals from the target's list of flattened nodes.\n   */\n  // eslint-disable-next-line\n  constructor(target, callback) {\n    /**\n     * @type {MutationObserver}\n     * @private\n     */\n    this._shadyChildrenObserver = null;\n    /**\n     * @type {MutationObserver}\n     * @private\n     */\n    this._nativeChildrenObserver = null;\n    this._connected = false;\n    /**\n     * @type {!HTMLElement}\n     * @private\n     */\n    this._target = target;\n    this.callback = callback;\n    this._effectiveNodes = [];\n    this._observer = null;\n    this._scheduled = false;\n    /**\n     * @type {function()}\n     * @private\n     */\n    this._boundSchedule = () => {\n      this._schedule();\n    };\n    this.connect();\n    this._schedule();\n  }\n\n  /**\n   * Activates an observer. This method is automatically called when\n   * a `FlattenedNodesObserver` is created. It should only be called to\n   * re-activate an observer that has been deactivated via the `disconnect` method.\n   *\n   * @return {void}\n   */\n  connect() {\n    if (isSlot(this._target)) {\n      this._listenSlots([this._target]);\n    } else if (wrap(this._target).children) {\n      this._listenSlots(\n          /** @type {!NodeList<!Node>} */ (wrap(this._target).children));\n      if (window.ShadyDOM) {\n        this._shadyChildrenObserver =\n          window.ShadyDOM.observeChildren(this._target, (mutations) => {\n            this._processMutations(mutations);\n          });\n      } else {\n        this._nativeChildrenObserver =\n          new MutationObserver((mutations) => {\n            this._processMutations(mutations);\n          });\n        this._nativeChildrenObserver.observe(this._target, {childList: true});\n      }\n    }\n    this._connected = true;\n  }\n\n  /**\n   * Deactivates the flattened nodes observer. After calling this method\n   * the observer callback will not be called when changes to flattened nodes\n   * occur. The `connect` method may be subsequently called to reactivate\n   * the observer.\n   *\n   * @return {void}\n   * @override\n   */\n  disconnect() {\n    if (isSlot(this._target)) {\n      this._unlistenSlots([this._target]);\n    } else if (wrap(this._target).children) {\n      this._unlistenSlots(\n          /** @type {!NodeList<!Node>} */ (wrap(this._target).children));\n      if (window.ShadyDOM && this._shadyChildrenObserver) {\n        window.ShadyDOM.unobserveChildren(this._shadyChildrenObserver);\n        this._shadyChildrenObserver = null;\n      } else if (this._nativeChildrenObserver) {\n        this._nativeChildrenObserver.disconnect();\n        this._nativeChildrenObserver = null;\n      }\n    }\n    this._connected = false;\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  _schedule() {\n    if (!this._scheduled) {\n      this._scheduled = true;\n      microTask.run(() => this.flush());\n    }\n  }\n\n  /**\n   * @param {Array<MutationRecord>} mutations Mutations signaled by the mutation observer\n   * @return {void}\n   * @private\n   */\n  _processMutations(mutations) {\n    this._processSlotMutations(mutations);\n    this.flush();\n  }\n\n  /**\n   * @param {Array<MutationRecord>} mutations Mutations signaled by the mutation observer\n   * @return {void}\n   * @private\n   */\n  _processSlotMutations(mutations) {\n    if (mutations) {\n      for (let i=0; i < mutations.length; i++) {\n        let mutation = mutations[i];\n        if (mutation.addedNodes) {\n          this._listenSlots(mutation.addedNodes);\n        }\n        if (mutation.removedNodes) {\n          this._unlistenSlots(mutation.removedNodes);\n        }\n      }\n    }\n  }\n\n  /**\n   * Flushes the observer causing any pending changes to be immediately\n   * delivered the observer callback. By default these changes are delivered\n   * asynchronously at the next microtask checkpoint.\n   *\n   * @return {boolean} Returns true if any pending changes caused the observer\n   * callback to run.\n   */\n  flush() {\n    if (!this._connected) {\n      return false;\n    }\n    if (window.ShadyDOM) {\n      ShadyDOM.flush();\n    }\n    if (this._nativeChildrenObserver) {\n      this._processSlotMutations(this._nativeChildrenObserver.takeRecords());\n    } else if (this._shadyChildrenObserver) {\n      this._processSlotMutations(this._shadyChildrenObserver.takeRecords());\n    }\n    this._scheduled = false;\n    let info = {\n      target: this._target,\n      addedNodes: [],\n      removedNodes: []\n    };\n    let newNodes = this.constructor.getFlattenedNodes(this._target);\n    let splices = calculateSplices(newNodes,\n      this._effectiveNodes);\n    // process removals\n    for (let i=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=0, n; (j < s.removed.length) && (n=s.removed[j]); j++) {\n        info.removedNodes.push(n);\n      }\n    }\n    // process adds\n    for (let i=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=s.index; j < s.index + s.addedCount; j++) {\n        info.addedNodes.push(newNodes[j]);\n      }\n    }\n    // update cache\n    this._effectiveNodes = newNodes;\n    let didFlush = false;\n    if (info.addedNodes.length || info.removedNodes.length) {\n      didFlush = true;\n      this.callback.call(this._target, info);\n    }\n    return didFlush;\n  }\n\n  /**\n   * @param {!Array<!Node>|!NodeList<!Node>} nodeList Nodes that could change\n   * @return {void}\n   * @private\n   */\n  _listenSlots(nodeList) {\n    for (let i=0; i < nodeList.length; i++) {\n      let n = nodeList[i];\n      if (isSlot(n)) {\n        n.addEventListener('slotchange', this._boundSchedule);\n      }\n    }\n  }\n\n  /**\n   * @param {!Array<!Node>|!NodeList<!Node>} nodeList Nodes that could change\n   * @return {void}\n   * @private\n   */\n  _unlistenSlots(nodeList) {\n    for (let i=0; i < nodeList.length; i++) {\n      let n = nodeList[i];\n      if (isSlot(n)) {\n        n.removeEventListener('slotchange', this._boundSchedule);\n      }\n    }\n  }\n\n};", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Module for scheduling flushable pre-render and post-render tasks.\n *\n * @summary Module for scheduling flushable pre-render and post-render tasks.\n */\n\nimport './boot.js';\n\nlet scheduled = false;\nlet beforeRenderQueue = [];\nlet afterRenderQueue = [];\n\nfunction schedule() {\n  scheduled = true;\n  // before next render\n  requestAnimationFrame(function() {\n    scheduled = false;\n    flushQueue(beforeRenderQueue);\n    // after the render\n    setTimeout(function() {\n      runQueue(afterRenderQueue);\n    });\n  });\n}\n\nfunction flushQueue(queue) {\n  while (queue.length) {\n    callMethod(queue.shift());\n  }\n}\n\nfunction runQueue(queue) {\n  for (let i=0, l=queue.length; i < l; i++) {\n    callMethod(queue.shift());\n  }\n}\n\nfunction callMethod(info) {\n  const context = info[0];\n  const callback = info[1];\n  const args = info[2];\n  try {\n    callback.apply(context, args);\n  } catch(e) {\n    setTimeout(() => {\n      throw e;\n    });\n  }\n}\n\n/**\n * Flushes all `beforeNextRender` tasks, followed by all `afterNextRender`\n * tasks.\n *\n * @return {void}\n */\nexport function flush() {\n  while (beforeRenderQueue.length || afterRenderQueue.length) {\n    flushQueue(beforeRenderQueue);\n    flushQueue(afterRenderQueue);\n  }\n  scheduled = false;\n}\n\n\n/**\n * Enqueues a callback which will be run before the next render, at\n * `requestAnimationFrame` timing.\n *\n * This method is useful for enqueuing work that requires DOM measurement,\n * since measurement may not be reliable in custom element callbacks before\n * the first render, as well as for batching measurement tasks in general.\n *\n * Tasks in this queue may be flushed by calling `flush()`.\n *\n * @param {*} context Context object the callback function will be bound to\n * @param {function(...*):void} callback Callback function\n * @param {!Array=} args An array of arguments to call the callback function with\n * @return {void}\n */\nexport function beforeNextRender(context, callback, args) {\n  if (!scheduled) {\n    schedule();\n  }\n  beforeRenderQueue.push([context, callback, args]);\n}\n\n/**\n * Enqueues a callback which will be run after the next render, equivalent\n * to one task (`setTimeout`) after the next `requestAnimationFrame`.\n *\n * This method is useful for tuning the first-render performance of an\n * element or application by deferring non-critical work until after the\n * first paint.  Typical non-render-critical work may include adding UI\n * event listeners and aria attributes.\n *\n * @param {*} context Context object the callback function will be bound to\n * @param {function(...*):void} callback Callback function\n * @param {!Array=} args An array of arguments to call the callback function with\n * @return {void}\n */\nexport function afterNextRender(context, callback, args) {\n  if (!scheduled) {\n    schedule();\n  }\n  afterRenderQueue.push([context, callback, args]);\n}\n\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { dedupingMixin } from '../utils/mixin.js';\n\n// Common implementation for mixin & behavior\nfunction mutablePropertyChange(inst, property, value, old, mutableData) {\n  let isObject;\n  if (mutableData) {\n    isObject = (typeof value === 'object' && value !== null);\n    // Pull `old` for Objects from temp cache, but treat `null` as a primitive\n    if (isObject) {\n      old = inst.__dataTemp[property];\n    }\n  }\n  // Strict equality check, but return false for NaN===NaN\n  let shouldChange = (old !== value && (old === old || value === value));\n  // Objects are stored in temporary cache (cleared at end of\n  // turn), which is used for dirty-checking\n  if (isObject && shouldChange) {\n    inst.__dataTemp[property] = value;\n  }\n  return shouldChange;\n}\n\n/**\n * Element class mixin to skip strict dirty-checking for objects and arrays\n * (always consider them to be \"dirty\"), for use on elements utilizing\n * `PropertyEffects`\n *\n * By default, `PropertyEffects` performs strict dirty checking on\n * objects, which means that any deep modifications to an object or array will\n * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n * references from the root to the mutation were changed).\n *\n * Polymer also provides a proprietary data mutation and path notification API\n * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n * mutation and notification of deep changes in an object graph to all elements\n * bound to the same object graph.\n *\n * In cases where neither immutable patterns nor the data mutation API can be\n * used, applying this mixin will cause Polymer to skip dirty checking for\n * objects and arrays (always consider them to be \"dirty\").  This allows a\n * user to make a deep modification to a bound object graph, and then either\n * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n * elements that wish to be updated based on deep mutations must apply this\n * mixin or otherwise skip strict dirty checking for objects/arrays.\n * Specifically, any elements in the binding tree between the source of a\n * mutation and the consumption of it must apply this mixin or enable the\n * `OptionalMutableData` mixin.\n *\n * In order to make the dirty check strategy configurable, see\n * `OptionalMutableData`.\n *\n * Note, the performance characteristics of propagating large object graphs\n * will be worse as opposed to using strict dirty checking with immutable\n * patterns or Polymer's path notification API.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin to skip strict dirty-checking for objects\n *   and arrays\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const MutableData = dedupingMixin(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_MutableData}\n   */\n  class MutableData extends superClass {\n    /**\n     * Overrides `PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * This method pulls the value to dirty check against from the `__dataTemp`\n     * cache (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, true);\n    }\n\n  }\n\n  return MutableData;\n\n});\n\n/**\n * Element class mixin to add the optional ability to skip strict\n * dirty-checking for objects and arrays (always consider them to be\n * \"dirty\") by setting a `mutable-data` attribute on an element instance.\n *\n * By default, `PropertyEffects` performs strict dirty checking on\n * objects, which means that any deep modifications to an object or array will\n * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n * references from the root to the mutation were changed).\n *\n * Polymer also provides a proprietary data mutation and path notification API\n * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n * mutation and notification of deep changes in an object graph to all elements\n * bound to the same object graph.\n *\n * In cases where neither immutable patterns nor the data mutation API can be\n * used, applying this mixin will allow Polymer to skip dirty checking for\n * objects and arrays (always consider them to be \"dirty\").  This allows a\n * user to make a deep modification to a bound object graph, and then either\n * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n * elements that wish to be updated based on deep mutations must apply this\n * mixin or otherwise skip strict dirty checking for objects/arrays.\n * Specifically, any elements in the binding tree between the source of a\n * mutation and the consumption of it must enable this mixin or apply the\n * `MutableData` mixin.\n *\n * While this mixin adds the ability to forgo Object/Array dirty checking,\n * the `mutableData` flag defaults to false and must be set on the instance.\n *\n * Note, the performance characteristics of propagating large object graphs\n * will be worse by relying on `mutableData: true` as opposed to using\n * strict dirty checking with immutable patterns or Polymer's path notification\n * API.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin to optionally skip strict dirty-checking\n *   for objects and arrays\n */\nexport const OptionalMutableData = dedupingMixin(superClass => {\n\n  /**\n   * @mixinClass\n   * @polymer\n   * @implements {Polymer_OptionalMutableData}\n   */\n  class OptionalMutableData extends superClass {\n\n    /** @nocollapse */\n    static get properties() {\n      return {\n        /**\n         * Instance-level flag for configuring the dirty-checking strategy\n         * for this element.  When true, Objects and Arrays will skip dirty\n         * checking, otherwise strict equality checking will be used.\n         */\n        mutableData: Boolean\n      };\n    }\n\n    /**\n     * Overrides `PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * When `this.mutableData` is true on this instance, this method\n     * pulls the value to dirty check against from the `__dataTemp` cache\n     * (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, this.mutableData);\n    }\n  }\n\n  return OptionalMutableData;\n\n});\n\n// Export for use by legacy behavior\nMutableData._mutablePropertyChange = mutablePropertyChange;\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Module for preparing and stamping instances of templates that utilize\n * Polymer's data-binding and declarative event listener features.\n *\n * Example:\n *\n *     // Get a template from somewhere, e.g. light DOM\n *     let template = this.querySelector('template');\n *     // Prepare the template\n *     let TemplateClass = Templatize.templatize(template);\n *     // Instance the template with an initial data model\n *     let instance = new TemplateClass({myProp: 'initial'});\n *     // Insert the instance's DOM somewhere, e.g. element's shadow DOM\n *     this.shadowRoot.appendChild(instance.root);\n *     // Changing a property on the instance will propagate to bindings\n *     // in the template\n *     instance.myProp = 'new value';\n *\n * The `options` dictionary passed to `templatize` allows for customizing\n * features of the generated template class, including how outer-scope host\n * properties should be forwarded into template instances, how any instance\n * properties added into the template's scope should be notified out to\n * the host, and whether the instance should be decorated as a \"parent model\"\n * of any event handlers.\n *\n *     // Customize property forwarding and event model decoration\n *     let TemplateClass = Templatize.templatize(template, this, {\n *       parentModel: true,\n *       forwardHostProp(property, value) {...},\n *       instanceProps: {...},\n *       notifyInstanceProp(instance, property, value) {...},\n *     });\n *\n * @summary Module for preparing and stamping instances of templates\n *   utilizing Polymer templating features.\n */\n\nimport './boot.js';\n\nimport { PropertyEffects } from '../mixins/property-effects.js';\nimport { MutableData } from '../mixins/mutable-data.js';\nimport { strictTemplatePolicy, legacyWarnings } from './settings.js';\nimport { wrap } from './wrap.js';\n\n// Base class for HTMLTemplateElement extension that has property effects\n// machinery for propagating host properties to children. This is an ES5\n// class only because Babel (incorrectly) requires super() in the class\n// constructor even though no `this` is used and it returns an instance.\nlet newInstance = null;\n\n/**\n * @constructor\n * @extends {HTMLTemplateElement}\n * @private\n */\nfunction HTMLTemplateElementExtension() { return newInstance; }\nHTMLTemplateElementExtension.prototype = Object.create(HTMLTemplateElement.prototype, {\n  constructor: {\n    value: HTMLTemplateElementExtension,\n    writable: true\n  }\n});\n\n/**\n * @constructor\n * @implements {Polymer_PropertyEffects}\n * @extends {HTMLTemplateElementExtension}\n * @private\n */\nconst DataTemplate = PropertyEffects(HTMLTemplateElementExtension);\n\n/**\n * @constructor\n * @implements {Polymer_MutableData}\n * @extends {DataTemplate}\n * @private\n */\nconst MutableDataTemplate = MutableData(DataTemplate);\n\n// Applies a DataTemplate subclass to a <template> instance\nfunction upgradeTemplate(template, constructor) {\n  newInstance = template;\n  Object.setPrototypeOf(template, constructor.prototype);\n  new constructor();\n  newInstance = null;\n}\n\n/**\n * Base class for TemplateInstance.\n * @constructor\n * @extends {HTMLElement}\n * @implements {Polymer_PropertyEffects}\n * @private\n */\nconst templateInstanceBase = PropertyEffects(class {});\n\nexport function showHideChildren(hide, children) {\n  for (let i=0; i<children.length; i++) {\n    let n = children[i];\n    // Ignore non-changes\n    if (Boolean(hide) != Boolean(n.__hideTemplateChildren__)) {\n      // clear and restore text\n      if (n.nodeType === Node.TEXT_NODE) {\n        if (hide) {\n          n.__polymerTextContent__ = n.textContent;\n          n.textContent = '';\n        } else {\n          n.textContent = n.__polymerTextContent__;\n        }\n      // remove and replace slot\n      } else if (n.localName === 'slot') {\n        if (hide) {\n          n.__polymerReplaced__ = document.createComment('hidden-slot');\n          wrap(wrap(n).parentNode).replaceChild(n.__polymerReplaced__, n);\n        } else {\n          const replace = n.__polymerReplaced__;\n          if (replace) {\n            wrap(wrap(replace).parentNode).replaceChild(n, replace);\n          }\n        }\n      }\n      // hide and show nodes\n      else if (n.style) {\n        if (hide) {\n          n.__polymerDisplay__ = n.style.display;\n          n.style.display = 'none';\n        } else {\n          n.style.display = n.__polymerDisplay__;\n        }\n      }\n    }\n    n.__hideTemplateChildren__ = hide;\n    if (n._showHideChildren) {\n      n._showHideChildren(hide);\n    }\n  }\n}\n\n/**\n * @polymer\n * @customElement\n * @appliesMixin PropertyEffects\n * @unrestricted\n */\nclass TemplateInstanceBase extends templateInstanceBase {\n  constructor(props) {\n    super();\n    this._configureProperties(props);\n    /** @type {!StampedTemplate} */\n    this.root = this._stampTemplate(this.__dataHost);\n    // Save list of stamped children\n    let children = [];\n    /** @suppress {invalidCasts} */\n    this.children = /** @type {!NodeList} */ (children);\n    // Polymer 1.x did not use `Polymer.dom` here so not bothering.\n    for (let n = this.root.firstChild; n; n=n.nextSibling) {\n      children.push(n);\n      n.__templatizeInstance = this;\n    }\n    if (this.__templatizeOwner &&\n      this.__templatizeOwner.__hideTemplateChildren__) {\n      this._showHideChildren(true);\n    }\n    // Flush props only when props are passed if instance props exist\n    // or when there isn't instance props.\n    let options = this.__templatizeOptions;\n    if ((props && options.instanceProps) || !options.instanceProps) {\n      this._enableProperties();\n    }\n  }\n  /**\n   * Configure the given `props` by calling `_setPendingProperty`. Also\n   * sets any properties stored in `__hostProps`.\n   * @private\n   * @param {Object} props Object of property name-value pairs to set.\n   * @return {void}\n   */\n  _configureProperties(props) {\n    let options = this.__templatizeOptions;\n    if (options.forwardHostProp) {\n      for (let hprop in this.__hostProps) {\n        this._setPendingProperty(hprop, this.__dataHost['_host_' + hprop]);\n      }\n    }\n    // Any instance props passed in the constructor will overwrite host props;\n    // normally this would be a user error but we don't specifically filter them\n    for (let iprop in props) {\n      this._setPendingProperty(iprop, props[iprop]);\n    }\n  }\n  /**\n   * Forwards a host property to this instance.  This method should be\n   * called on instances from the `options.forwardHostProp` callback\n   * to propagate changes of host properties to each instance.\n   *\n   * Note this method enqueues the change, which are flushed as a batch.\n   *\n   * @param {string} prop Property or path name\n   * @param {*} value Value of the property to forward\n   * @return {void}\n   */\n  forwardHostProp(prop, value) {\n    if (this._setPendingPropertyOrPath(prop, value, false, true)) {\n      this.__dataHost._enqueueClient(this);\n    }\n  }\n\n  /**\n   * Override point for adding custom or simulated event handling.\n   *\n   * @override\n   * @param {!Node} node Node to add event listener to\n   * @param {string} eventName Name of event\n   * @param {function(!Event):void} handler Listener function to add\n   * @return {void}\n   */\n  _addEventListenerToNode(node, eventName, handler) {\n    if (this._methodHost && this.__templatizeOptions.parentModel) {\n      // If this instance should be considered a parent model, decorate\n      // events this template instance as `model`\n      this._methodHost._addEventListenerToNode(node, eventName, (e) => {\n        e.model = this;\n        handler(e);\n      });\n    } else {\n      // Otherwise delegate to the template's host (which could be)\n      // another template instance\n      let templateHost = this.__dataHost.__dataHost;\n      if (templateHost) {\n        templateHost._addEventListenerToNode(node, eventName, handler);\n      }\n    }\n  }\n  /**\n   * Shows or hides the template instance top level child elements. For\n   * text nodes, `textContent` is removed while \"hidden\" and replaced when\n   * \"shown.\"\n   * @param {boolean} hide Set to true to hide the children;\n   * set to false to show them.\n   * @return {void}\n   * @protected\n   */\n  _showHideChildren(hide) {\n    showHideChildren(hide, this.children);\n  }\n  /**\n   * Overrides default property-effects implementation to intercept\n   * textContent bindings while children are \"hidden\" and cache in\n   * private storage for later retrieval.\n   *\n   * @override\n   * @param {!Node} node The node to set a property on\n   * @param {string} prop The property to set\n   * @param {*} value The value to set\n   * @return {void}\n   * @protected\n   */\n  _setUnmanagedPropertyToNode(node, prop, value) {\n    if (node.__hideTemplateChildren__ &&\n        node.nodeType == Node.TEXT_NODE && prop == 'textContent') {\n      node.__polymerTextContent__ = value;\n    } else {\n      super._setUnmanagedPropertyToNode(node, prop, value);\n    }\n  }\n  /**\n   * Find the parent model of this template instance.  The parent model\n   * is either another templatize instance that had option `parentModel: true`,\n   * or else the host element.\n   *\n   * @return {!Polymer_PropertyEffects} The parent model of this instance\n   */\n  get parentModel() {\n    let model = this.__parentModel;\n    if (!model) {\n      let options;\n      model = this;\n      do {\n        // A template instance's `__dataHost` is a <template>\n        // `model.__dataHost.__dataHost` is the template's host\n        model = model.__dataHost.__dataHost;\n      } while ((options = model.__templatizeOptions) && !options.parentModel);\n      this.__parentModel = model;\n    }\n    return model;\n  }\n\n  /**\n   * Stub of HTMLElement's `dispatchEvent`, so that effects that may\n   * dispatch events safely no-op.\n   *\n   * @param {Event} event Event to dispatch\n   * @return {boolean} Always true.\n   * @override\n   */\n   dispatchEvent(event) { // eslint-disable-line no-unused-vars\n     return true;\n  }\n}\n\n/** @type {!DataTemplate} */\nTemplateInstanceBase.prototype.__dataHost;\n/** @type {!TemplatizeOptions} */\nTemplateInstanceBase.prototype.__templatizeOptions;\n/** @type {!Polymer_PropertyEffects} */\nTemplateInstanceBase.prototype._methodHost;\n/** @type {!Object} */\nTemplateInstanceBase.prototype.__templatizeOwner;\n/** @type {!Object} */\nTemplateInstanceBase.prototype.__hostProps;\n\n/**\n * @constructor\n * @extends {TemplateInstanceBase}\n * @implements {Polymer_MutableData}\n * @private\n */\nconst MutableTemplateInstanceBase = MutableData(\n    // This cast shouldn't be neccessary, but Closure doesn't understand that\n    // TemplateInstanceBase is a constructor function.\n    /** @type {function(new:TemplateInstanceBase)} */ (TemplateInstanceBase));\n\nfunction findMethodHost(template) {\n  // Technically this should be the owner of the outermost template.\n  // In shadow dom, this is always getRootNode().host, but we can\n  // approximate this via cooperation with our dataHost always setting\n  // `_methodHost` as long as there were bindings (or id's) on this\n  // instance causing it to get a dataHost.\n  let templateHost = template.__dataHost;\n  return templateHost && templateHost._methodHost || templateHost;\n}\n\n/* eslint-disable valid-jsdoc */\n/**\n * @suppress {missingProperties} class.prototype is not defined for some reason\n */\nfunction createTemplatizerClass(template, templateInfo, options) {\n  /**\n   * @constructor\n   * @extends {TemplateInstanceBase}\n   */\n  let templatizerBase = options.mutableData ?\n    MutableTemplateInstanceBase : TemplateInstanceBase;\n\n  // Affordance for global mixins onto TemplatizeInstance\n  if (templatize.mixin) {\n    templatizerBase = templatize.mixin(templatizerBase);\n  }\n\n  /**\n   * Anonymous class created by the templatize\n   * @constructor\n   * @private\n   */\n  let klass = class extends templatizerBase { };\n  /** @override */\n  klass.prototype.__templatizeOptions = options;\n  klass.prototype._bindTemplate(template);\n  addNotifyEffects(klass, template, templateInfo, options);\n  return klass;\n}\n\n/**\n * Adds propagate effects from the template to the template instance for\n * properties that the host binds to the template using the `_host_` prefix.\n *\n * @suppress {missingProperties} class.prototype is not defined for some reason\n */\nfunction addPropagateEffects(target, templateInfo, options, methodHost) {\n  let userForwardHostProp = options.forwardHostProp;\n  if (userForwardHostProp && templateInfo.hasHostProps) {\n    // Under the `removeNestedTemplates` optimization, a custom element like\n    // `dom-if` or `dom-repeat` can itself be treated as the \"template\"; this\n    // flag is used to switch between upgrading a `<template>` to be a property\n    // effects client vs. adding the effects directly to the custom element\n    const isTemplate = target.localName == 'template';\n    // Provide data API and property effects on memoized template class\n    let klass = templateInfo.templatizeTemplateClass;\n    if (!klass) {\n      if (isTemplate) {\n        /**\n         * @constructor\n         * @extends {DataTemplate}\n         */\n        let templatizedBase =\n            options.mutableData ? MutableDataTemplate : DataTemplate;\n\n        // NOTE: due to https://github.com/google/closure-compiler/issues/2928,\n        // combining the next two lines into one assignment causes a spurious\n        // type error.\n        /** @private */\n        class TemplatizedTemplate extends templatizedBase {}\n        klass = templateInfo.templatizeTemplateClass = TemplatizedTemplate;\n      } else {\n        /**\n         * @constructor\n         * @extends {PolymerElement}\n         */\n        const templatizedBase = target.constructor;\n\n        // Create a cached subclass of the base custom element class onto which\n        // to put the template-specific propagate effects\n        // NOTE: due to https://github.com/google/closure-compiler/issues/2928,\n        // combining the next two lines into one assignment causes a spurious\n        // type error.\n        /** @private */\n        class TemplatizedTemplateExtension extends templatizedBase {}\n        klass = templateInfo.templatizeTemplateClass =\n            TemplatizedTemplateExtension;\n      }\n      // Add template - >instances effects\n      // and host <- template effects\n      let hostProps = templateInfo.hostProps;\n      for (let prop in hostProps) {\n        klass.prototype._addPropertyEffect('_host_' + prop,\n          klass.prototype.PROPERTY_EFFECT_TYPES.PROPAGATE,\n          {fn: createForwardHostPropEffect(prop, userForwardHostProp)});\n        klass.prototype._createNotifyingProperty('_host_' + prop);\n      }\n      if (legacyWarnings && methodHost) {\n        warnOnUndeclaredProperties(templateInfo, options, methodHost);\n      }\n    }\n    // Mix any pre-bound data into __data; no need to flush this to\n    // instances since they pull from the template at instance-time\n    if (target.__dataProto) {\n      // Note, generally `__dataProto` could be chained, but it's guaranteed\n      // to not be since this is a vanilla template we just added effects to\n      Object.assign(target.__data, target.__dataProto);\n    }\n    if (isTemplate) {\n      upgradeTemplate(target, klass);\n      // Clear any pending data for performance\n      target.__dataTemp = {};\n      target.__dataPending = null;\n      target.__dataOld = null;\n      target._enableProperties();\n    } else {\n      // Swizzle the cached subclass prototype onto the custom element\n      Object.setPrototypeOf(target, klass.prototype);\n      // Check for any pre-bound instance host properties, and do the\n      // instance property delete/assign dance for those (directly into data;\n      // not need to go through accessor since they are pulled at instance time)\n      const hostProps = templateInfo.hostProps;\n      for (let prop in hostProps) {\n        prop = '_host_' + prop;\n        if (prop in target) {\n          const val = target[prop];\n          delete target[prop];\n          target.__data[prop] = val;\n        }\n      }\n    }\n  }\n}\n/* eslint-enable valid-jsdoc */\n\nfunction createForwardHostPropEffect(hostProp, userForwardHostProp) {\n  return function forwardHostProp(template, prop, props) {\n    userForwardHostProp.call(template.__templatizeOwner,\n      prop.substring('_host_'.length), props[prop]);\n  };\n}\n\nfunction addNotifyEffects(klass, template, templateInfo, options) {\n  let hostProps = templateInfo.hostProps || {};\n  for (let iprop in options.instanceProps) {\n    delete hostProps[iprop];\n    let userNotifyInstanceProp = options.notifyInstanceProp;\n    if (userNotifyInstanceProp) {\n      klass.prototype._addPropertyEffect(iprop,\n        klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n        {fn: createNotifyInstancePropEffect(iprop, userNotifyInstanceProp)});\n    }\n  }\n  if (options.forwardHostProp && template.__dataHost) {\n    for (let hprop in hostProps) {\n      // As we're iterating hostProps in this function, note whether\n      // there were any, for an optimization in addPropagateEffects\n      if (!templateInfo.hasHostProps) {\n        templateInfo.hasHostProps = true;\n      }\n      klass.prototype._addPropertyEffect(hprop,\n        klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n        {fn: createNotifyHostPropEffect()});\n    }\n  }\n}\n\nfunction createNotifyInstancePropEffect(instProp, userNotifyInstanceProp) {\n  return function notifyInstanceProp(inst, prop, props) {\n    userNotifyInstanceProp.call(inst.__templatizeOwner,\n      inst, prop, props[prop]);\n  };\n}\n\nfunction createNotifyHostPropEffect() {\n  return function notifyHostProp(inst, prop, props) {\n    inst.__dataHost._setPendingPropertyOrPath('_host_' + prop, props[prop], true, true);\n  };\n}\n\n\n/**\n * Returns an anonymous `PropertyEffects` class bound to the\n * `<template>` provided.  Instancing the class will result in the\n * template being stamped into a document fragment stored as the instance's\n * `root` property, after which it can be appended to the DOM.\n *\n * Templates may utilize all Polymer data-binding features as well as\n * declarative event listeners.  Event listeners and inline computing\n * functions in the template will be called on the host of the template.\n *\n * The constructor returned takes a single argument dictionary of initial\n * property values to propagate into template bindings.  Additionally\n * host properties can be forwarded in, and instance properties can be\n * notified out by providing optional callbacks in the `options` dictionary.\n *\n * Valid configuration in `options` are as follows:\n *\n * - `forwardHostProp(property, value)`: Called when a property referenced\n *   in the template changed on the template's host. As this library does\n *   not retain references to templates instanced by the user, it is the\n *   templatize owner's responsibility to forward host property changes into\n *   user-stamped instances.  The `instance.forwardHostProp(property, value)`\n *    method on the generated class should be called to forward host\n *   properties into the template to prevent unnecessary property-changed\n *   notifications. Any properties referenced in the template that are not\n *   defined in `instanceProps` will be notified up to the template's host\n *   automatically.\n * - `instanceProps`: Dictionary of property names that will be added\n *   to the instance by the templatize owner.  These properties shadow any\n *   host properties, and changes within the template to these properties\n *   will result in `notifyInstanceProp` being called.\n * - `mutableData`: When `true`, the generated class will skip strict\n *   dirty-checking for objects and arrays (always consider them to be\n *   \"dirty\").\n * - `notifyInstanceProp(instance, property, value)`: Called when\n *   an instance property changes.  Users may choose to call `notifyPath`\n *   on e.g. the owner to notify the change.\n * - `parentModel`: When `true`, events handled by declarative event listeners\n *   (`on-event=\"handler\"`) will be decorated with a `model` property pointing\n *   to the template instance that stamped it.  It will also be returned\n *   from `instance.parentModel` in cases where template instance nesting\n *   causes an inner model to shadow an outer model.\n *\n * All callbacks are called bound to the `owner`. Any context\n * needed for the callbacks (such as references to `instances` stamped)\n * should be stored on the `owner` such that they can be retrieved via\n * `this`.\n *\n * When `options.forwardHostProp` is declared as an option, any properties\n * referenced in the template will be automatically forwarded from the host of\n * the `<template>` to instances, with the exception of any properties listed in\n * the `options.instanceProps` object.  `instanceProps` are assumed to be\n * managed by the owner of the instances, either passed into the constructor\n * or set after the fact.  Note, any properties passed into the constructor will\n * always be set to the instance (regardless of whether they would normally\n * be forwarded from the host).\n *\n * Note that `templatize()` can be run only once for a given `<template>`.\n * Further calls will result in an error. Also, there is a special\n * behavior if the template was duplicated through a mechanism such as\n * `<dom-repeat>` or `<test-fixture>`. In this case, all calls to\n * `templatize()` return the same class for all duplicates of a template.\n * The class returned from `templatize()` is generated only once using\n * the `options` from the first call. This means that any `options`\n * provided to subsequent calls will be ignored. Therefore, it is very\n * important not to close over any variables inside the callbacks. Also,\n * arrow functions must be avoided because they bind the outer `this`.\n * Inside the callbacks, any contextual information can be accessed\n * through `this`, which points to the `owner`.\n *\n * @param {!HTMLTemplateElement} template Template to templatize\n * @param {Polymer_PropertyEffects=} owner Owner of the template instances;\n *   any optional callbacks will be bound to this owner.\n * @param {Object=} options Options dictionary (see summary for details)\n * @return {function(new:TemplateInstanceBase, Object=)} Generated class bound\n *   to the template provided\n * @suppress {invalidCasts}\n */\nexport function templatize(template, owner, options) {\n  // Under strictTemplatePolicy, the templatized element must be owned\n  // by a (trusted) Polymer element, indicated by existence of _methodHost;\n  // e.g. for dom-if & dom-repeat in main document, _methodHost is null\n  if (strictTemplatePolicy && !findMethodHost(template)) {\n    throw new Error('strictTemplatePolicy: template owner not trusted');\n  }\n  options = /** @type {!TemplatizeOptions} */(options || {});\n  if (template.__templatizeOwner) {\n    throw new Error('A <template> can only be templatized once');\n  }\n  template.__templatizeOwner = owner;\n  const ctor = owner ? owner.constructor : TemplateInstanceBase;\n  let templateInfo = ctor._parseTemplate(template);\n  // Get memoized base class for the prototypical template, which\n  // includes property effects for binding template & forwarding\n  /**\n   * @constructor\n   * @extends {TemplateInstanceBase}\n   */\n  let baseClass = templateInfo.templatizeInstanceClass;\n  if (!baseClass) {\n    baseClass = createTemplatizerClass(template, templateInfo, options);\n    templateInfo.templatizeInstanceClass = baseClass;\n  }\n  const methodHost = findMethodHost(template);\n  // Host property forwarding must be installed onto template instance\n  addPropagateEffects(template, templateInfo, options, methodHost);\n  // Subclass base class and add reference for this specific template\n  /** @private */\n  let klass = class TemplateInstance extends baseClass {};\n  /** @override */\n  klass.prototype._methodHost = methodHost;\n  /** @override */\n  klass.prototype.__dataHost = /** @type {!DataTemplate} */ (template);\n  /** @override */\n  klass.prototype.__templatizeOwner = /** @type {!Object} */ (owner);\n  /** @override */\n  klass.prototype.__hostProps = templateInfo.hostProps;\n  klass = /** @type {function(new:TemplateInstanceBase)} */(klass); //eslint-disable-line no-self-assign\n  return klass;\n}\n\nfunction warnOnUndeclaredProperties(templateInfo, options, methodHost) {\n  const declaredProps = methodHost.constructor._properties;\n  const {propertyEffects} = templateInfo;\n  const {instanceProps} = options;\n  for (let prop in propertyEffects) {\n    // Ensure properties with template effects are declared on the outermost\n    // host (`methodHost`), unless they are instance props or static functions\n    if (!declaredProps[prop] && !(instanceProps && instanceProps[prop])) {\n      const effects = propertyEffects[prop];\n      for (let i=0; i<effects.length; i++) {\n        const {part} = effects[i].info;\n        if (!(part.signature && part.signature.static)) {\n          console.warn(`Property '${prop}' used in template but not ` +\n            `declared in 'properties'; attribute will not be observed.`);\n          break;\n        }\n      }\n    }\n  }\n}\n\n/**\n * Returns the template \"model\" associated with a given element, which\n * serves as the binding scope for the template instance the element is\n * contained in. A template model is an instance of\n * `TemplateInstanceBase`, and should be used to manipulate data\n * associated with this template instance.\n *\n * Example:\n *\n *   let model = modelForElement(el);\n *   if (model.index < 10) {\n *     model.set('item.checked', true);\n *   }\n *\n * @param {HTMLElement} template The model will be returned for\n *   elements stamped from this template (accepts either an HTMLTemplateElement)\n *   or a `<dom-if>`/`<dom-repeat>` element when using `removeNestedTemplates`\n *   optimization.\n * @param {Node=} node Node for which to return a template model.\n * @return {TemplateInstanceBase} Template instance representing the\n *   binding scope for the element\n */\nexport function modelForElement(template, node) {\n  let model;\n  while (node) {\n    // An element with a __templatizeInstance marks the top boundary\n    // of a scope; walk up until we find one, and then ensure that\n    // its __dataHost matches `this`, meaning this dom-repeat stamped it\n    if ((model = node.__dataHost ? node : node.__templatizeInstance)) {\n      // Found an element stamped by another template; keep walking up\n      // from its __dataHost\n      if (model.__dataHost != template) {\n        node = model.__dataHost;\n      } else {\n        return model;\n      }\n    } else {\n      // Still in a template scope, keep going up until\n      // a __templatizeInstance is found\n      node = wrap(node).parentNode;\n    }\n  }\n  return null;\n}\n\nexport { TemplateInstanceBase };\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst testUserAgent = (regexp) => regexp.test(navigator.userAgent);\n\nconst testPlatform = (regexp) => regexp.test(navigator.platform);\n\nconst testVendor = (regexp) => regexp.test(navigator.vendor);\n\nexport const isAndroid = testUserAgent(/Android/);\n\nexport const isChrome = testUserAgent(/Chrome/) && testVendor(/Google Inc/);\n\nexport const isFirefox = testUserAgent(/Firefox/);\n\n// IPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\nexport const isIPad = testPlatform(/^iPad/) || (testPlatform(/^Mac/) && navigator.maxTouchPoints > 1);\n\nexport const isIPhone = testPlatform(/^iPhone/);\n\nexport const isIOS = isIPhone || isIPad;\n\nexport const isSafari = testUserAgent(/^((?!chrome|android).)*safari/i);\n\nexport const isTouch = (() => {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * @typedef ReactiveController\n * @type {import('lit').ReactiveController}\n */\n\n/**\n * A mixin for connecting controllers to the element.\n *\n * @polymerMixin\n */\nexport const ControllerMixin = dedupingMixin(\n  (superClass) =>\n    class ControllerMixinClass extends superClass {\n      constructor() {\n        super();\n\n        /**\n         * @type {Set<ReactiveController>}\n         */\n        this.__controllers = new Set();\n      }\n\n      /** @protected */\n      connectedCallback() {\n        super.connectedCallback();\n\n        this.__controllers.forEach((c) => {\n          if (c.hostConnected) {\n            c.hostConnected();\n          }\n        });\n      }\n\n      /** @protected */\n      disconnectedCallback() {\n        super.disconnectedCallback();\n\n        this.__controllers.forEach((c) => {\n          if (c.hostDisconnected) {\n            c.hostDisconnected();\n          }\n        });\n      }\n\n      /**\n       * Registers a controller to participate in the element update cycle.\n       *\n       * @param {ReactiveController} controller\n       * @protected\n       */\n      addController(controller) {\n        this.__controllers.add(controller);\n        // Call hostConnected if a controller is added after the element is attached.\n        if (this.$ !== undefined && this.isConnected && controller.hostConnected) {\n          controller.hostConnected();\n        }\n      }\n\n      /**\n       * Removes a controller from the element.\n       *\n       * @param {ReactiveController} controller\n       * @protected\n       */\n      removeController(controller) {\n        this.__controllers.delete(controller);\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n// We consider the keyboard to be active if the window has received a keydown\n// event since the last mousedown event.\nlet keyboardActive = false;\n\n// Listen for top-level keydown and mousedown events.\n// Use capture phase so we detect events even if they're handled.\nwindow.addEventListener(\n  'keydown',\n  () => {\n    keyboardActive = true;\n  },\n  { capture: true },\n);\n\nwindow.addEventListener(\n  'mousedown',\n  () => {\n    keyboardActive = false;\n  },\n  { capture: true },\n);\n\n/**\n * Returns true if the window has received a keydown\n * event since the last mousedown event.\n *\n * @return {boolean}\n */\nexport function isKeyboardActive() {\n  return keyboardActive;\n}\n\n/**\n * Returns true if the element is hidden directly with `display: none` or `visibility: hidden`,\n * false otherwise.\n *\n * The method doesn't traverse the element's ancestors, it only checks for the CSS properties\n * set directly to or inherited by the element.\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nfunction isElementHiddenDirectly(element) {\n  // Check inline style first to save a re-flow.\n  const style = element.style;\n  if (style.visibility === 'hidden' || style.display === 'none') {\n    return true;\n  }\n\n  const computedStyle = window.getComputedStyle(element);\n  if (computedStyle.visibility === 'hidden' || computedStyle.display === 'none') {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Returns the normalized element tabindex. If not focusable, returns -1.\n * It checks for the attribute \"tabindex\" instead of the element property\n * `tabIndex` since browsers assign different values to it.\n * e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\n *\n * @param {HTMLElement} element\n * @return {number}\n */\nfunction normalizeTabIndex(element) {\n  if (!isElementFocusable(element)) {\n    return -1;\n  }\n\n  const tabIndex = element.getAttribute('tabindex') || 0;\n  return Number(tabIndex);\n}\n\n/**\n * Returns if element `a` has lower tab order compared to element `b`\n * (both elements are assumed to be focusable and tabbable).\n * Elements with tabindex = 0 have lower tab order compared to elements\n * with tabindex > 0.\n * If both have same tabindex, it returns false.\n *\n * @param {HTMLElement} a\n * @param {HTMLElement} b\n * @return {boolean}\n */\nfunction hasLowerTabOrder(a, b) {\n  // Normalize tabIndexes\n  // e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\n  const ati = Math.max(a.tabIndex, 0);\n  const bti = Math.max(b.tabIndex, 0);\n  return ati === 0 || bti === 0 ? bti > ati : ati > bti;\n}\n\n/**\n * Merge sort iterator, merges the two arrays into one, sorted by tabindex.\n *\n * @param {HTMLElement[]} left\n * @param {HTMLElement[]} right\n * @return {HTMLElement[]}\n */\nfunction mergeSortByTabIndex(left, right) {\n  const result = [];\n  while (left.length > 0 && right.length > 0) {\n    if (hasLowerTabOrder(left[0], right[0])) {\n      result.push(right.shift());\n    } else {\n      result.push(left.shift());\n    }\n  }\n\n  return result.concat(left, right);\n}\n\n/**\n * Sorts an array of elements by tabindex. Returns a new array.\n *\n * @param {HTMLElement[]} elements\n * @return {HTMLElement[]}\n */\nfunction sortElementsByTabIndex(elements) {\n  // Implement a merge sort as Array.prototype.sort does a non-stable sort\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n  const len = elements.length;\n  if (len < 2) {\n    return elements;\n  }\n  const pivot = Math.ceil(len / 2);\n  const left = sortElementsByTabIndex(elements.slice(0, pivot));\n  const right = sortElementsByTabIndex(elements.slice(pivot));\n\n  return mergeSortByTabIndex(left, right);\n}\n\n/**\n * Searches for nodes that are tabbable and adds them to the `result` array.\n * Returns if the `result` array needs to be sorted by tabindex.\n *\n * @param {Node} node The starting point for the search; added to `result` if tabbable.\n * @param {HTMLElement[]} result\n * @return {boolean}\n * @private\n */\nfunction collectFocusableNodes(node, result) {\n  if (node.nodeType !== Node.ELEMENT_NODE || isElementHiddenDirectly(node)) {\n    // Don't traverse children if the node is not an HTML element or not visible.\n    return false;\n  }\n\n  const element = /** @type {HTMLElement} */ (node);\n  const tabIndex = normalizeTabIndex(element);\n  let needsSort = tabIndex > 0;\n  if (tabIndex >= 0) {\n    result.push(element);\n  }\n\n  let children = [];\n  if (element.localName === 'slot') {\n    children = element.assignedNodes({ flatten: true });\n  } else {\n    // Use shadow root if possible, will check for distributed nodes.\n    children = (element.shadowRoot || element).children;\n  }\n  [...children].forEach((child) => {\n    // Ensure method is always invoked to collect focusable children.\n    needsSort = collectFocusableNodes(child, result) || needsSort;\n  });\n  return needsSort;\n}\n\n/**\n * Returns true if the element is hidden, false otherwise.\n *\n * An element is treated as hidden when any of the following conditions are met:\n * - the element itself or one of its ancestors has `display: none`.\n * - the element has or inherits `visibility: hidden`.\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nexport function isElementHidden(element) {\n  // `offsetParent` is `null` when the element itself\n  // or one of its ancestors is hidden with `display: none`.\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n  // However `offsetParent` is also null when the element is using fixed\n  // positioning, so additionally check if the element takes up layout space.\n  if (element.offsetParent === null && element.clientWidth === 0 && element.clientHeight === 0) {\n    return true;\n  }\n\n  return isElementHiddenDirectly(element);\n}\n\n/**\n * Returns true if the element is focusable, otherwise false.\n *\n * The list of focusable elements is taken from http://stackoverflow.com/a/1600194/4228703.\n * However, there isn't a definite list, it's up to the browser.\n * The only standard we have is DOM Level 2 HTML https://www.w3.org/TR/DOM-Level-2-HTML/html.html,\n * according to which the only elements that have a `focus()` method are:\n * - HTMLInputElement\n * - HTMLSelectElement\n * - HTMLTextAreaElement\n * - HTMLAnchorElement\n *\n * This notably omits HTMLButtonElement and HTMLAreaElement.\n * Referring to these tests with tabbables in different browsers\n * http://allyjs.io/data-tables/focusable.html\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nexport function isElementFocusable(element) {\n  // The element cannot be focused if its `tabindex` attribute is set to `-1`.\n  if (element.matches('[tabindex=\"-1\"]')) {\n    return false;\n  }\n\n  // Elements that cannot be focused if they have a `disabled` attribute.\n  if (element.matches('input, select, textarea, button, object')) {\n    return element.matches(':not([disabled])');\n  }\n\n  // Elements that can be focused even if they have a `disabled` attribute.\n  return element.matches('a[href], area[href], iframe, [tabindex], [contentEditable]');\n}\n\n/**\n * Returns true if the element is focused, false otherwise.\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nexport function isElementFocused(element) {\n  return element.getRootNode().activeElement === element;\n}\n\n/**\n * Returns a tab-ordered array of focusable elements for a root element.\n * The resulting array will include the root element if it is focusable.\n *\n * The method traverses nodes in shadow DOM trees too if any.\n *\n * @param {HTMLElement} element\n * @return {HTMLElement[]}\n */\nexport function getFocusableElements(element) {\n  const focusableElements = [];\n  const needsSortByTabIndex = collectFocusableNodes(element, focusableElements);\n  // If there is at least one element with tabindex > 0, we need to sort\n  // the final array by tabindex.≈\n  if (needsSortByTabIndex) {\n    return sortElementsByTabIndex(focusableElements);\n  }\n  return focusableElements;\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { getFocusableElements, isElementFocused } from './focus-utils.js';\n\nconst instances = [];\n\n/**\n * A controller for trapping focus within a DOM node.\n */\nexport class FocusTrapController {\n  /**\n   * @param {HTMLElement} host\n   */\n  constructor(host) {\n    /**\n     * The controller host element.\n     *\n     * @type {HTMLElement}\n     */\n    this.host = host;\n\n    /**\n     * A node for trapping focus in.\n     *\n     * @type {HTMLElement | null}\n     * @private\n     */\n    this.__trapNode = null;\n\n    this.__onKeyDown = this.__onKeyDown.bind(this);\n  }\n\n  hostConnected() {\n    document.addEventListener('keydown', this.__onKeyDown);\n  }\n\n  hostDisconnected() {\n    document.removeEventListener('keydown', this.__onKeyDown);\n  }\n\n  /**\n   * Activates a focus trap for a DOM node that will prevent focus from escaping the node.\n   * The trap can be deactivated with the `.releaseFocus()` method.\n   *\n   * If focus is initially outside the trap, the method will move focus inside,\n   * on the first focusable element of the trap in the tab order.\n   * The first focusable element can be the trap node itself if it is focusable\n   * and comes first in the tab order.\n   *\n   * If there are no focusable elements, the method will throw an exception\n   * and the trap will not be set.\n   *\n   * @param {HTMLElement} trapNode\n   */\n  trapFocus(trapNode) {\n    this.__trapNode = trapNode;\n\n    if (this.__focusableElements.length === 0) {\n      this.__trapNode = null;\n      throw new Error('The trap node should have at least one focusable descendant or be focusable itself.');\n    }\n\n    instances.push(this);\n\n    if (this.__focusedElementIndex === -1) {\n      this.__focusableElements[0].focus();\n    }\n  }\n\n  /**\n   * Deactivates the focus trap set with the `.trapFocus()` method\n   * so that it becomes possible to tab outside the trap node.\n   */\n  releaseFocus() {\n    this.__trapNode = null;\n\n    instances.pop();\n  }\n\n  /**\n   * A `keydown` event handler that manages tabbing navigation when the trap is enabled.\n   *\n   * - Moves focus to the next focusable element of the trap on `Tab` press.\n   * When no next element to focus, the method moves focus to the first focusable element.\n   * - Moves focus to the prev focusable element of the trap on `Shift+Tab` press.\n   * When no prev element to focus, the method moves focus to the last focusable element.\n   *\n   * @param {KeyboardEvent} event\n   * @private\n   */\n  __onKeyDown(event) {\n    if (!this.__trapNode) {\n      return;\n    }\n\n    // Only handle events for the last instance\n    if (this !== Array.from(instances).pop()) {\n      return;\n    }\n\n    if (event.key === 'Tab') {\n      event.preventDefault();\n\n      const backward = event.shiftKey;\n      this.__focusNextElement(backward);\n    }\n  }\n\n  /**\n   * - Moves focus to the next focusable element if `backward === false`.\n   * When no next element to focus, the method moves focus to the first focusable element.\n   * - Moves focus to the prev focusable element if `backward === true`.\n   * When no prev element to focus the method moves focus to the last focusable element.\n   *\n   * If no focusable elements, the method returns immediately.\n   *\n   * @param {boolean} backward\n   * @private\n   */\n  __focusNextElement(backward = false) {\n    const focusableElements = this.__focusableElements;\n    const step = backward ? -1 : 1;\n    const currentIndex = this.__focusedElementIndex;\n    const nextIndex = (focusableElements.length + currentIndex + step) % focusableElements.length;\n    const element = focusableElements[nextIndex];\n    element.focus();\n    if (element.localName === 'input') {\n      element.select();\n    }\n  }\n\n  /**\n   * An array of tab-ordered focusable elements inside the trap node.\n   *\n   * @return {HTMLElement[]}\n   * @private\n   */\n  get __focusableElements() {\n    return getFocusableElements(this.__trapNode);\n  }\n\n  /**\n   * The index of the element inside the trap node that currently has focus.\n   *\n   * @return {HTMLElement | undefined}\n   * @private\n   */\n  get __focusedElementIndex() {\n    const focusableElements = this.__focusableElements;\n    return focusableElements.indexOf(focusableElements.filter(isElementFocused).pop());\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { isIOS } from '@vaadin/component-base/src/browser-utils.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { FocusTrapController } from '@vaadin/component-base/src/focus-trap-controller.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n *\n * `<vaadin-overlay>` is a Web Component for creating overlays. The content of the overlay\n * can be populated in two ways: imperatively by using renderer callback function and\n * declaratively by using Polymer's Templates.\n *\n * ### Rendering\n *\n * By default, the overlay uses the content provided by using the renderer callback function.\n *\n * The renderer function provides `root`, `owner`, `model` arguments when applicable.\n * Generate DOM content by using `model` object properties if needed, append it to the `root`\n * element and control the state of the host element by accessing `owner`. Before generating new\n * content, users are able to check if there is already content in `root` for reusing it.\n *\n * ```html\n * <vaadin-overlay id=\"overlay\"></vaadin-overlay>\n * ```\n * ```js\n * const overlay = document.querySelector('#overlay');\n * overlay.renderer = function(root) {\n *  root.textContent = \"Overlay content\";\n * };\n * ```\n *\n * Renderer is called on the opening of the overlay and each time the related model is updated.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * **NOTE:** when the renderer property is defined, the `<template>` content is not used.\n *\n * ### Templating\n *\n * Alternatively, the content can be provided with Polymer Template.\n * Overlay finds the first child template and uses that in case renderer callback function\n * is not provided. You can also set a custom template using the `template` property.\n *\n * After the content from the template is stamped, the `content` property\n * points to the content container.\n *\n * The overlay provides `forwardHostProp` when calling\n * `Polymer.Templatize.templatize` for the template, so that the bindings\n * from the parent scope propagate to the content.\n *\n * ### Styling\n *\n * To style the overlay content, use styles in the parent scope:\n *\n * - If the overlay is used in a component, then the component styles\n *   apply the overlay content.\n * - If the overlay is used in the global DOM scope, then global styles\n *   apply to the overlay content.\n *\n * See examples for styling the overlay content in the live demos.\n *\n * The following Shadow DOM parts are available for styling the overlay component itself:\n *\n * Part name  | Description\n * -----------|---------------------------------------------------------|\n * `backdrop` | Backdrop of the overlay\n * `overlay`  | Container for position/sizing/alignment of the content\n * `content`  | Content of the overlay\n *\n * The following state attributes are available for styling:\n *\n * Attribute | Description | Part\n * ---|---|---\n * `opening` | Applied just after the overlay is attached to the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n * `closing` | Applied just before the overlay is detached from the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n *\n * The following custom CSS properties are available for styling:\n *\n * Custom CSS property | Description | Default value\n * ---|---|---\n * `--vaadin-overlay-viewport-bottom` | Bottom offset of the visible viewport area | `0` or detected offset\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} vaadin-overlay-open - Fired after the overlay is opened.\n * @fires {CustomEvent} vaadin-overlay-close - Fired before the overlay will be closed. If canceled the closing of the overlay is canceled as well.\n * @fires {CustomEvent} vaadin-overlay-closing - Fired when the overlay will be closed.\n * @fires {CustomEvent} vaadin-overlay-outside-click - Fired before the overlay will be closed on outside click. If canceled the closing of the overlay is canceled as well.\n * @fires {CustomEvent} vaadin-overlay-escape-press - Fired before the overlay will be closed on ESC button press. If canceled the closing of the overlay is canceled as well.\n *\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes DirMixin\n * @mixes ControllerMixin\n */\nclass Overlay extends ThemableMixin(DirMixin(ControllerMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          z-index: 200;\n          position: fixed;\n\n          /* Despite of what the names say, <vaadin-overlay> is just a container\n          for position/sizing/alignment. The actual overlay is the overlay part. */\n\n          /* Default position constraints: the entire viewport. Note: themes can\n          override this to introduce gaps between the overlay and the viewport. */\n          top: 0;\n          right: 0;\n          bottom: var(--vaadin-overlay-viewport-bottom);\n          left: 0;\n\n          /* Use flexbox alignment for the overlay part. */\n          display: flex;\n          flex-direction: column; /* makes dropdowns sizing easier */\n          /* Align to center by default. */\n          align-items: center;\n          justify-content: center;\n\n          /* Allow centering when max-width/max-height applies. */\n          margin: auto;\n\n          /* The host is not clickable, only the overlay part is. */\n          pointer-events: none;\n\n          /* Remove tap highlight on touch devices. */\n          -webkit-tap-highlight-color: transparent;\n\n          /* CSS API for host */\n          --vaadin-overlay-viewport-bottom: 0;\n        }\n\n        :host([hidden]),\n        :host(:not([opened]):not([closing])) {\n          display: none !important;\n        }\n\n        [part='overlay'] {\n          -webkit-overflow-scrolling: touch;\n          overflow: auto;\n          pointer-events: auto;\n\n          /* Prevent overflowing the host in MSIE 11 */\n          max-width: 100%;\n          box-sizing: border-box;\n\n          -webkit-tap-highlight-color: initial; /* reenable tap highlight inside */\n        }\n\n        [part='backdrop'] {\n          z-index: -1;\n          content: '';\n          background: rgba(0, 0, 0, 0.5);\n          position: fixed;\n          top: 0;\n          left: 0;\n          bottom: 0;\n          right: 0;\n          pointer-events: auto;\n        }\n      </style>\n\n      <div id=\"backdrop\" part=\"backdrop\" hidden$=\"[[!withBackdrop]]\"></div>\n      <div part=\"overlay\" id=\"overlay\" tabindex=\"0\">\n        <div part=\"content\" id=\"content\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-overlay';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * When true, the overlay is visible and attached to body.\n       */\n      opened: {\n        type: Boolean,\n        notify: true,\n        observer: '_openedChanged',\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Owner element passed with renderer function\n       * @type {HTMLElement}\n       */\n      owner: Element,\n\n      /**\n       * Custom function for rendering the content of the overlay.\n       * Receives three arguments:\n       *\n       * - `root` The root container DOM element. Append your content to it.\n       * - `owner` The host element of the renderer function.\n       * - `model` The object with the properties related with rendering.\n       * @type {OverlayRenderer | null | undefined}\n       */\n      renderer: Function,\n\n      /**\n       * The template of the overlay content.\n       * @type {HTMLTemplateElement | null | undefined}\n       */\n      template: {\n        type: Object,\n        notify: true,\n      },\n\n      /**\n       * References the content container after the template is stamped.\n       * @type {!HTMLElement | undefined}\n       */\n      content: {\n        type: Object,\n        notify: true,\n      },\n\n      /**\n       * When true the overlay has backdrop on top of content when opened.\n       * @type {boolean}\n       */\n      withBackdrop: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Object with properties that is passed to `renderer` function\n       */\n      model: Object,\n\n      /**\n       * When true the overlay won't disable the main content, showing\n       * it doesn’t change the functionality of the user interface.\n       * @type {boolean}\n       */\n      modeless: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_modelessChanged',\n      },\n\n      /**\n       * When set to true, the overlay is hidden. This also closes the overlay\n       * immediately in case there is a closing animation in progress.\n       * @type {boolean}\n       */\n      hidden: {\n        type: Boolean,\n        reflectToAttribute: true,\n        observer: '_hiddenChanged',\n      },\n\n      /**\n       * When true move focus to the first focusable element in the overlay,\n       * or to the overlay if there are no focusable elements.\n       * @type {boolean}\n       */\n      focusTrap: {\n        type: Boolean,\n        value: false,\n      },\n\n      /**\n       * Set to true to enable restoring of focus when overlay is closed.\n       * @type {boolean}\n       */\n      restoreFocusOnClose: {\n        type: Boolean,\n        value: false,\n      },\n\n      /**\n       * Set to specify the element which should be focused on overlay close,\n       * if `restoreFocusOnClose` is set to true.\n       * @type {HTMLElement}\n       */\n      restoreFocusNode: {\n        type: HTMLElement,\n      },\n\n      /** @private */\n      _mouseDownInside: {\n        type: Boolean,\n      },\n\n      /** @private */\n      _mouseUpInside: {\n        type: Boolean,\n      },\n\n      /** @private */\n      _instance: {\n        type: Object,\n      },\n\n      /** @private */\n      _originalContentPart: Object,\n\n      /** @private */\n      _contentNodes: Array,\n\n      /** @private */\n      _oldOwner: Element,\n\n      /** @private */\n      _oldModel: Object,\n\n      /** @private */\n      _oldTemplate: Object,\n\n      /** @private */\n      _oldRenderer: Object,\n\n      /** @private */\n      _oldOpened: Boolean,\n    };\n  }\n\n  static get observers() {\n    return ['_templateOrRendererChanged(template, renderer, owner, model, opened)'];\n  }\n\n  constructor() {\n    super();\n    this._boundMouseDownListener = this._mouseDownListener.bind(this);\n    this._boundMouseUpListener = this._mouseUpListener.bind(this);\n    this._boundOutsideClickListener = this._outsideClickListener.bind(this);\n    this._boundKeydownListener = this._keydownListener.bind(this);\n\n    this._observer = new FlattenedNodesObserver(this, (info) => {\n      this._setTemplateFromNodes(info.addedNodes);\n    });\n\n    // Listener for preventing closing of the paper-dialog and all components extending `iron-overlay-behavior`.\n    this._boundIronOverlayCanceledListener = this._ironOverlayCanceled.bind(this);\n\n    /* c8 ignore next 3 */\n    if (isIOS) {\n      this._boundIosResizeListener = () => this._detectIosNavbar();\n    }\n\n    this.__focusTrapController = new FocusTrapController(this);\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._observer.flush();\n\n    // Need to add dummy click listeners to this and the backdrop or else\n    // the document click event listener (_outsideClickListener) may never\n    // get invoked on iOS Safari (reproducible in <vaadin-dialog>\n    // and <vaadin-context-menu>).\n    this.addEventListener('click', () => {});\n    this.$.backdrop.addEventListener('click', () => {});\n\n    this.addController(this.__focusTrapController);\n  }\n\n  /** @private */\n  _detectIosNavbar() {\n    /* c8 ignore next 15 */\n    if (!this.opened) {\n      return;\n    }\n\n    const innerHeight = window.innerHeight;\n    const innerWidth = window.innerWidth;\n\n    const landscape = innerWidth > innerHeight;\n\n    const clientHeight = document.documentElement.clientHeight;\n\n    if (landscape && clientHeight > innerHeight) {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', `${clientHeight - innerHeight}px`);\n    } else {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', '0');\n    }\n  }\n\n  /**\n   * @param {!Array<!Element>} nodes\n   * @protected\n   */\n  _setTemplateFromNodes(nodes) {\n    this.template = nodes.find((node) => node.localName && node.localName === 'template') || this.template;\n  }\n\n  /**\n   * @param {Event=} sourceEvent\n   * @event vaadin-overlay-close\n   * fired before the `vaadin-overlay` will be closed. If canceled the closing of the overlay is canceled as well.\n   */\n  close(sourceEvent) {\n    const evt = new CustomEvent('vaadin-overlay-close', {\n      bubbles: true,\n      cancelable: true,\n      detail: { sourceEvent },\n    });\n    this.dispatchEvent(evt);\n    if (!evt.defaultPrevented) {\n      this.opened = false;\n    }\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    /* c8 ignore next 3 */\n    if (this._boundIosResizeListener) {\n      this._detectIosNavbar();\n      window.addEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    /* c8 ignore next 3 */\n    if (this._boundIosResizeListener) {\n      window.removeEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  /**\n   * Requests an update for the content of the overlay.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (this.renderer) {\n      this.renderer.call(this.owner, this.content, this.owner, this.model);\n    }\n  }\n\n  /** @private */\n  _ironOverlayCanceled(event) {\n    event.preventDefault();\n  }\n\n  /** @private */\n  _mouseDownListener(event) {\n    this._mouseDownInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /** @private */\n  _mouseUpListener(event) {\n    this._mouseUpInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /**\n   * We need to listen on 'click' / 'tap' event and capture it and close the overlay before\n   * propagating the event to the listener in the button. Otherwise, if the clicked button would call\n   * open(), this would happen: https://www.youtube.com/watch?v=Z86V_ICUCD4\n   *\n   * @event vaadin-overlay-outside-click\n   * fired before the `vaadin-overlay` will be closed on outside click. If canceled the closing of the overlay is canceled as well.\n   *\n   * @private\n   */\n  _outsideClickListener(event) {\n    if (event.composedPath().includes(this.$.overlay) || this._mouseDownInside || this._mouseUpInside) {\n      this._mouseDownInside = false;\n      this._mouseUpInside = false;\n      return;\n    }\n    if (!this._last) {\n      return;\n    }\n\n    const evt = new CustomEvent('vaadin-overlay-outside-click', {\n      bubbles: true,\n      cancelable: true,\n      detail: { sourceEvent: event },\n    });\n    this.dispatchEvent(evt);\n\n    if (this.opened && !evt.defaultPrevented) {\n      this.close(event);\n    }\n  }\n\n  /**\n   * @event vaadin-overlay-escape-press\n   * fired before the `vaadin-overlay` will be closed on ESC button press. If canceled the closing of the overlay is canceled as well.\n   *\n   * @private\n   */\n  _keydownListener(event) {\n    if (!this._last) {\n      return;\n    }\n\n    // Only close modeless overlay on Esc press when it contains focus\n    if (this.modeless && !event.composedPath().includes(this.$.overlay)) {\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      const evt = new CustomEvent('vaadin-overlay-escape-press', {\n        bubbles: true,\n        cancelable: true,\n        detail: { sourceEvent: event },\n      });\n      this.dispatchEvent(evt);\n\n      if (this.opened && !evt.defaultPrevented) {\n        this.close(event);\n      }\n    }\n  }\n\n  /** @protected */\n  _ensureTemplatized() {\n    this._setTemplateFromNodes(Array.from(this.children));\n  }\n\n  /**\n   * @event vaadin-overlay-open\n   * fired after the `vaadin-overlay` is opened.\n   *\n   * @private\n   */\n  _openedChanged(opened, wasOpened) {\n    if (!this._instance) {\n      this._ensureTemplatized();\n    }\n\n    if (opened) {\n      // Store focused node.\n      this.__restoreFocusNode = this._getActiveElement();\n      this._animatedOpening();\n\n      afterNextRender(this, () => {\n        if (this.focusTrap) {\n          this.__focusTrapController.trapFocus(this.$.overlay);\n        }\n\n        const evt = new CustomEvent('vaadin-overlay-open', { bubbles: true });\n        this.dispatchEvent(evt);\n      });\n\n      document.addEventListener('keydown', this._boundKeydownListener);\n\n      if (!this.modeless) {\n        this._addGlobalListeners();\n      }\n    } else if (wasOpened) {\n      if (this.focusTrap) {\n        this.__focusTrapController.releaseFocus();\n      }\n\n      this._animatedClosing();\n\n      document.removeEventListener('keydown', this._boundKeydownListener);\n\n      if (!this.modeless) {\n        this._removeGlobalListeners();\n      }\n    }\n  }\n\n  /** @private */\n  _hiddenChanged(hidden) {\n    if (hidden && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  _shouldAnimate() {\n    const name = getComputedStyle(this).getPropertyValue('animation-name');\n    const hidden = getComputedStyle(this).getPropertyValue('display') === 'none';\n    return !hidden && name && name !== 'none';\n  }\n\n  /**\n   * @param {string} type\n   * @param {Function} callback\n   * @protected\n   */\n  _enqueueAnimation(type, callback) {\n    const handler = `__${type}Handler`;\n    const listener = (event) => {\n      if (event && event.target !== this) {\n        return;\n      }\n      callback();\n      this.removeEventListener('animationend', listener);\n      delete this[handler];\n    };\n    this[handler] = listener;\n    this.addEventListener('animationend', listener);\n  }\n\n  /**\n   * @param {string} type\n   * @protected\n   */\n  _flushAnimation(type) {\n    const handler = `__${type}Handler`;\n    if (typeof this[handler] === 'function') {\n      this[handler]();\n    }\n  }\n\n  /** @protected */\n  _animatedOpening() {\n    if (this.parentNode === document.body && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n    this._attachOverlay();\n    if (!this.modeless) {\n      this._enterModalState();\n    }\n    this.setAttribute('opening', '');\n\n    if (this._shouldAnimate()) {\n      this._enqueueAnimation('opening', () => {\n        this._finishOpening();\n      });\n    } else {\n      this._finishOpening();\n    }\n  }\n\n  /** @protected */\n  _attachOverlay() {\n    this._placeholder = document.createComment('vaadin-overlay-placeholder');\n    this.parentNode.insertBefore(this._placeholder, this);\n    document.body.appendChild(this);\n    this.bringToFront();\n  }\n\n  /** @protected */\n  _finishOpening() {\n    document.addEventListener('iron-overlay-canceled', this._boundIronOverlayCanceledListener);\n    this.removeAttribute('opening');\n  }\n\n  /** @protected */\n  _finishClosing() {\n    document.removeEventListener('iron-overlay-canceled', this._boundIronOverlayCanceledListener);\n    this._detachOverlay();\n    this.$.overlay.style.removeProperty('pointer-events');\n    this.removeAttribute('closing');\n  }\n\n  /**\n   * @event vaadin-overlay-closing\n   * Fired when the overlay will be closed.\n   *\n   * @protected\n   */\n  _animatedClosing() {\n    if (this.hasAttribute('opening')) {\n      this._flushAnimation('opening');\n    }\n    if (this._placeholder) {\n      this._exitModalState();\n\n      // Use this.restoreFocusNode if specified, otherwise fallback to the node\n      // which was focused before opening the overlay.\n      const restoreFocusNode = this.restoreFocusNode || this.__restoreFocusNode;\n\n      if (this.restoreFocusOnClose && restoreFocusNode) {\n        // If the activeElement is `<body>` or inside the overlay,\n        // we are allowed to restore the focus. In all the other\n        // cases focus might have been moved elsewhere by another\n        // component or by the user interaction (e.g. click on a\n        // button outside the overlay).\n        const activeElement = this._getActiveElement();\n\n        if (activeElement === document.body || this._deepContains(activeElement)) {\n          // Focusing the restoreFocusNode doesn't always work synchronously on Firefox and Safari\n          // (e.g. combo-box overlay close on outside click).\n          setTimeout(() => restoreFocusNode.focus());\n        }\n        this.__restoreFocusNode = null;\n      }\n\n      this.setAttribute('closing', '');\n      this.dispatchEvent(new CustomEvent('vaadin-overlay-closing'));\n\n      if (this._shouldAnimate()) {\n        this._enqueueAnimation('closing', () => {\n          this._finishClosing();\n        });\n      } else {\n        this._finishClosing();\n      }\n    }\n  }\n\n  /** @protected */\n  _detachOverlay() {\n    this._placeholder.parentNode.insertBefore(this, this._placeholder);\n    this._placeholder.parentNode.removeChild(this._placeholder);\n  }\n\n  /**\n   * Returns all attached overlays in visual stacking order.\n   * @private\n   */\n  static get __attachedInstances() {\n    return Array.from(document.body.children)\n      .filter((el) => el instanceof Overlay && !el.hasAttribute('closing'))\n      .sort((a, b) => a.__zIndex - b.__zIndex || 0);\n  }\n\n  /**\n   * Returns true if this is the last one in the opened overlays stack\n   * @return {boolean}\n   * @protected\n   */\n  get _last() {\n    return this === Overlay.__attachedInstances.pop();\n  }\n\n  /** @private */\n  _modelessChanged(modeless) {\n    if (!modeless) {\n      if (this.opened) {\n        this._addGlobalListeners();\n        this._enterModalState();\n      }\n    } else {\n      this._removeGlobalListeners();\n      this._exitModalState();\n    }\n  }\n\n  /** @protected */\n  _addGlobalListeners() {\n    document.addEventListener('mousedown', this._boundMouseDownListener);\n    document.addEventListener('mouseup', this._boundMouseUpListener);\n    // Firefox leaks click to document on contextmenu even if prevented\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=990614\n    document.documentElement.addEventListener('click', this._boundOutsideClickListener, true);\n  }\n\n  /** @protected */\n  _enterModalState() {\n    if (document.body.style.pointerEvents !== 'none') {\n      // Set body pointer-events to 'none' to disable mouse interactions with\n      // other document nodes.\n      this._previousDocumentPointerEvents = document.body.style.pointerEvents;\n      document.body.style.pointerEvents = 'none';\n    }\n\n    // Disable pointer events in other attached overlays\n    Overlay.__attachedInstances.forEach((el) => {\n      if (el !== this) {\n        el.shadowRoot.querySelector('[part=\"overlay\"]').style.pointerEvents = 'none';\n      }\n    });\n  }\n\n  /** @protected */\n  _removeGlobalListeners() {\n    document.removeEventListener('mousedown', this._boundMouseDownListener);\n    document.removeEventListener('mouseup', this._boundMouseUpListener);\n    document.documentElement.removeEventListener('click', this._boundOutsideClickListener, true);\n  }\n\n  /** @protected */\n  _exitModalState() {\n    if (this._previousDocumentPointerEvents !== undefined) {\n      // Restore body pointer-events\n      document.body.style.pointerEvents = this._previousDocumentPointerEvents;\n      delete this._previousDocumentPointerEvents;\n    }\n\n    // Restore pointer events in the previous overlay(s)\n    const instances = Overlay.__attachedInstances;\n    let el;\n    // Use instances.pop() to ensure the reverse order\n    while ((el = instances.pop())) {\n      if (el === this) {\n        // Skip the current instance\n        continue;\n      }\n      el.shadowRoot.querySelector('[part=\"overlay\"]').style.removeProperty('pointer-events');\n      if (!el.modeless) {\n        // Stop after the last modal\n        break;\n      }\n    }\n  }\n\n  /** @protected */\n  _removeOldContent() {\n    if (!this.content || !this._contentNodes) {\n      return;\n    }\n\n    this._observer.disconnect();\n\n    this._contentNodes.forEach((node) => {\n      if (node.parentNode === this.content) {\n        this.content.removeChild(node);\n      }\n    });\n\n    if (this._originalContentPart) {\n      // Restore the original <div part=\"content\">\n      this.$.content.parentNode.replaceChild(this._originalContentPart, this.$.content);\n      this.$.content = this._originalContentPart;\n      this._originalContentPart = undefined;\n    }\n\n    this._observer.connect();\n\n    this._contentNodes = undefined;\n    this.content = undefined;\n  }\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @protected\n   */\n  _stampOverlayTemplate(template) {\n    this._removeOldContent();\n\n    if (!template._Templatizer) {\n      template._Templatizer = templatize(template, this, {\n        forwardHostProp(prop, value) {\n          if (this._instance) {\n            this._instance.forwardHostProp(prop, value);\n          }\n        },\n      });\n    }\n\n    this._instance = new template._Templatizer({});\n    this._contentNodes = Array.from(this._instance.root.childNodes);\n\n    const templateRoot = template._templateRoot || (template._templateRoot = template.getRootNode());\n\n    if (templateRoot !== document) {\n      if (!this.$.content.shadowRoot) {\n        this.$.content.attachShadow({ mode: 'open' });\n      }\n\n      let scopeCssText = Array.from(templateRoot.querySelectorAll('style')).reduce(\n        (result, style) => result + style.textContent,\n        '',\n      );\n\n      // The overlay root’s :host styles should not apply inside the overlay\n      scopeCssText = scopeCssText.replace(/:host/g, ':host-nomatch');\n\n      if (scopeCssText) {\n        // Append a style to the content shadowRoot\n        const style = document.createElement('style');\n        style.textContent = scopeCssText;\n        this.$.content.shadowRoot.appendChild(style);\n        this._contentNodes.unshift(style);\n      }\n\n      this.$.content.shadowRoot.appendChild(this._instance.root);\n      this.content = this.$.content.shadowRoot;\n    } else {\n      this.appendChild(this._instance.root);\n      this.content = this;\n    }\n  }\n\n  /** @private */\n  _removeNewRendererOrTemplate(template, oldTemplate, renderer, oldRenderer) {\n    if (template !== oldTemplate) {\n      this.template = undefined;\n    } else if (renderer !== oldRenderer) {\n      this.renderer = undefined;\n    }\n  }\n\n  /** @private */\n  // eslint-disable-next-line max-params\n  _templateOrRendererChanged(template, renderer, owner, model, opened) {\n    if (template && renderer) {\n      this._removeNewRendererOrTemplate(template, this._oldTemplate, renderer, this._oldRenderer);\n      throw new Error('You should only use either a renderer or a template for overlay content');\n    }\n\n    const ownerOrModelChanged = this._oldOwner !== owner || this._oldModel !== model;\n    this._oldModel = model;\n    this._oldOwner = owner;\n\n    const templateChanged = this._oldTemplate !== template;\n    this._oldTemplate = template;\n\n    const rendererChanged = this._oldRenderer !== renderer;\n    this._oldRenderer = renderer;\n\n    const openedChanged = this._oldOpened !== opened;\n    this._oldOpened = opened;\n\n    if (rendererChanged) {\n      this.content = this;\n      this.content.innerHTML = '';\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n      // When clearing the rendered content, this part needs to be manually disposed of.\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n      delete this.content._$litPart$;\n    }\n\n    if (template && templateChanged) {\n      this._stampOverlayTemplate(template);\n    } else if (renderer && (rendererChanged || openedChanged || ownerOrModelChanged)) {\n      if (opened) {\n        this.requestContentUpdate();\n      }\n    }\n  }\n\n  /**\n   * @return {!Element}\n   * @protected\n   */\n  _getActiveElement() {\n    // Document.activeElement can be null\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\n    let active = document.activeElement || document.body;\n    while (active.shadowRoot && active.shadowRoot.activeElement) {\n      active = active.shadowRoot.activeElement;\n    }\n    return active;\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   * @protected\n   */\n  _deepContains(node) {\n    if (this.contains(node)) {\n      return true;\n    }\n    let n = node;\n    const doc = node.ownerDocument;\n    // Walk from node to `this` or `document`\n    while (n && n !== doc && n !== this) {\n      n = n.parentNode || n.host;\n    }\n    return n === this;\n  }\n\n  /**\n   * Brings the overlay as visually the frontmost one\n   */\n  bringToFront() {\n    let zIndex = '';\n    const frontmost = Overlay.__attachedInstances.filter((o) => o !== this).pop();\n    if (frontmost) {\n      const frontmostZIndex = frontmost.__zIndex;\n      zIndex = frontmostZIndex + 1;\n    }\n    this.style.zIndex = zIndex;\n    this.__zIndex = zIndex || parseFloat(getComputedStyle(this).zIndex);\n  }\n}\n\ncustomElements.define(Overlay.is, Overlay);\n\nexport { Overlay };\n", "import '@vaadin/overlay/theme/material/vaadin-overlay.js';\nimport { overlay } from '@vaadin/vaadin-material-styles/mixins/overlay.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst datePickerOverlay = css`\n  :host([fullscreen]) {\n    top: 0 !important;\n    right: 0 !important;\n    bottom: var(--vaadin-overlay-viewport-bottom) !important;\n    left: 0 !important;\n    align-items: stretch;\n    justify-content: stretch;\n  }\n\n  [part='overlay'] {\n    overflow: hidden;\n    -webkit-overflow-scrolling: auto;\n  }\n\n  :host(:not([fullscreen])) [part='overlay'] {\n    width: 360px;\n    max-height: 500px;\n    border-radius: 0 4px 4px;\n  }\n\n  :host([dir='ltr']:not([fullscreen])[end-aligned]) [part='overlay'],\n  :host([dir='rtl']:not([fullscreen])[start-aligned]) [part='overlay'] {\n    border-radius: 4px 0 4px 4px;\n  }\n\n  :host(:not([fullscreen])[bottom-aligned]) [part='overlay'] {\n    border-radius: 4px;\n  }\n\n  :host(:not([fullscreen])[show-week-numbers]) [part='overlay'] {\n    width: 396px;\n  }\n\n  [part='content'] {\n    padding: 0;\n  }\n`;\n\nregisterStyles('vaadin-date-picker-overlay', [overlay, datePickerOverlay], {\n  moduleId: 'material-date-picker-overlay',\n});\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport './version.js';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    @font-face {\n      font-family: 'material-icons';\n      src: url(data:application/font-woff;charset=utf-8;base64,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) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n\n    html {\n      --material-icons-arrow-downward: \"\\\\ea01\";\n      --material-icons-arrow-upward: \"\\\\ea02\";\n      --material-icons-calendar: \"\\\\ea03\";\n      --material-icons-check: \"\\\\ea04\";\n      --material-icons-chevron-left: \"\\\\ea05\";\n      --material-icons-chevron-right: \"\\\\ea06\";\n      --material-icons-clear: \"\\\\ea07\";\n      --material-icons-clock: \"\\\\ea08\";\n      --material-icons-dropdown: \"\\\\ea09\";\n      --material-icons-error: \"\\\\ea0a\";\n      --material-icons-eye: \"\\\\ea0b\";\n      --material-icons-eye-disabled: \"\\\\ea0c\";\n      --material-icons-play: \"\\\\ea0d\";\n      --material-icons-reload: \"\\\\ea0e\";\n      --material-icons-upload: \"\\\\ea0f\";\n    }\n  </style>\n`;\n\ndocument.head.appendChild(template.content);\n", "import '@vaadin/vaadin-material-styles/color.js';\nimport '@vaadin/vaadin-material-styles/shadow.js';\nimport '@vaadin/vaadin-material-styles/typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst button = css`\n  :host {\n    padding: 8px;\n    min-width: 64px;\n    box-sizing: border-box;\n    display: inline-flex;\n    align-items: baseline;\n    justify-content: center;\n    border-radius: 4px;\n    color: var(--material-primary-text-color);\n    font-family: var(--material-font-family);\n    text-transform: uppercase;\n    font-size: var(--material-button-font-size);\n    line-height: 20px;\n    font-weight: 500;\n    letter-spacing: 0.05em;\n    white-space: nowrap;\n    overflow: hidden;\n    transition: box-shadow 0.2s;\n    -webkit-tap-highlight-color: transparent;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  :host::before,\n  :host::after {\n    content: '';\n    pointer-events: none;\n    position: absolute;\n    border-radius: inherit;\n    opacity: 0;\n    background-color: currentColor;\n  }\n\n  :host::before {\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    transition: opacity 0.5s;\n  }\n\n  :host::after {\n    border-radius: 50%;\n    width: 320px;\n    height: 320px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    transition: all 0.9s;\n  }\n\n  [part='label'] ::slotted(*) {\n    vertical-align: middle;\n  }\n\n  :host(:hover)::before,\n  :host([focus-ring])::before {\n    opacity: 0.08;\n    transition-duration: 0.2s;\n  }\n\n  :host([active])::before {\n    opacity: 0.16;\n    transition: opacity 0.4s;\n  }\n\n  :host([active])::after {\n    transform: translate(-50%, -50%) scale(0.0000001); /* animation works weirdly with scale(0) */\n    opacity: 0.1;\n    transition: 0s;\n  }\n\n  :host(:hover:not([active]))::after {\n    transform: translate(-50%, -50%) scale(1);\n    opacity: 0;\n  }\n\n  :host([disabled]) {\n    pointer-events: none;\n    color: var(--material-disabled-text-color);\n  }\n\n  /* Contained and outline variants */\n  :host([theme~='contained']),\n  :host([theme~='outlined']) {\n    padding: 8px 16px;\n  }\n\n  :host([theme~='outlined']) {\n    box-shadow: inset 0 0 0 1px var(--_material-button-outline-color, rgba(0, 0, 0, 0.2));\n  }\n\n  :host([theme~='contained']:not([disabled])) {\n    background-color: var(--material-primary-color);\n    color: var(--material-primary-contrast-color);\n    box-shadow: var(--material-shadow-elevation-2dp);\n  }\n\n  :host([theme~='contained'][disabled]) {\n    background-color: var(--material-secondary-background-color);\n  }\n\n  :host([theme~='contained']:hover) {\n    box-shadow: var(--material-shadow-elevation-4dp);\n  }\n\n  :host([theme~='contained'][active]) {\n    box-shadow: var(--material-shadow-elevation-8dp);\n  }\n\n  /* Icon alignment */\n\n  [part] ::slotted(vaadin-icon),\n  [part] ::slotted(iron-icon) {\n    display: block;\n    width: 18px;\n    height: 18px;\n  }\n\n  [part='prefix'] ::slotted(vaadin-icon),\n  [part='prefix'] ::slotted(iron-icon) {\n    margin-right: 8px;\n    margin-left: -4px;\n  }\n\n  [part='suffix'] ::slotted(vaadin-icon),\n  [part='suffix'] ::slotted(iron-icon) {\n    margin-left: 8px;\n    margin-right: -4px;\n  }\n\n  /* RTL specific styles */\n\n  :host([dir='rtl'])::before {\n    left: auto;\n    right: 0;\n  }\n\n  :host([dir='rtl'])::after {\n    left: auto;\n    right: 50%;\n    transform: translate(50%, -50%);\n  }\n\n  :host([active][dir='rtl'])::after {\n    transform: translate(50%, -50%) scale(0.0000001);\n  }\n\n  :host(:hover:not([active])[dir='rtl'])::after {\n    transform: translate(50%, -50%) scale(1);\n  }\n\n  :host([dir='rtl']) [part='prefix'] ::slotted(vaadin-icon),\n  :host([dir='rtl']) [part='prefix'] ::slotted(iron-icon) {\n    margin-right: -4px;\n    margin-left: 8px;\n  }\n\n  :host([dir='rtl']) [part='suffix'] ::slotted(vaadin-icon),\n  :host([dir='rtl']) [part='suffix'] ::slotted(iron-icon) {\n    margin-left: -4px;\n    margin-right: 8px;\n  }\n`;\n\nregisterStyles('vaadin-button', button, { moduleId: 'material-button' });\n\nexport { button };\n", "const DEV_MODE_CODE_REGEXP =\n  /\\/\\*[\\*!]\\s+vaadin-dev-mode:start([\\s\\S]*)vaadin-dev-mode:end\\s+\\*\\*\\//i;\n\nconst FlowClients = window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients;\n\nfunction isMinified() {\n  function test() {\n    /** vaadin-dev-mode:start\n    return false;\n    vaadin-dev-mode:end **/\n    return true;\n  }\n  return uncommentAndRun(test);\n}\n\nfunction isDevelopmentMode() {\n  try {\n    if (isForcedDevelopmentMode()) {\n      return true;\n    }\n\n    if (!isLocalhost()) {\n      return false;\n    }\n\n    if (FlowClients) {\n      return !isFlowProductionMode();\n    }\n\n    return !isMinified();\n  } catch (e) {\n    // Some error in this code, assume production so no further actions will be taken\n    return false;\n  }\n}\n\nfunction isForcedDevelopmentMode() {\n  return localStorage.getItem(\"vaadin.developmentmode.force\");\n}\n\nfunction isLocalhost() {\n  return ([\"localhost\",\"127.0.0.1\"].indexOf(window.location.hostname) >= 0);\n}\n\nfunction isFlowProductionMode() {\n  if (FlowClients) {\n    const productionModeApps = Object.keys(FlowClients)\n      .map(key => FlowClients[key])\n      .filter(client => client.productionMode);\n    if (productionModeApps.length > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction uncommentAndRun(callback, args) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n\n  const match = DEV_MODE_CODE_REGEXP.exec(callback.toString());\n  if (match) {\n    try {\n      // requires CSP: script-src 'unsafe-eval'\n      callback = new Function(match[1]);\n    } catch (e) {\n      // eat the exception\n      console.log('vaadin-development-mode-detector: uncommentAndRun() failed', e)\n    }\n  }\n\n  return callback(args);\n}\n\n// A guard against polymer-modulizer removing the window.Vaadin\n// initialization above.\nwindow['Vaadin'] = window['Vaadin'] || {};\n\n/**\n * Inspects the source code of the given `callback` function for\n * specially-marked _commented_ code. If such commented code is found in the\n * callback source, uncomments and runs that code instead of the callback\n * itself. Otherwise runs the callback as is.\n *\n * The optional arguments are passed into the callback / uncommented code,\n * the result is returned.\n *\n * See the `isMinified()` function source code in this file for an example.\n *\n */\nexport const runIfDevelopmentMode = function(callback, args) {\n  if (window.Vaadin.developmentMode) {\n    return uncommentAndRun(callback, args);\n  }\n};\n\nif (window.Vaadin.developmentMode === undefined) {\n  window.Vaadin.developmentMode = isDevelopmentMode();\n}\n", "/* This file is autogenerated from src/vaadin-usage-statistics.tpl.html */\n/*\n\nThis script gathers usage statistics from the application running in development mode.\n\nStatistics gathering is automatically disabled and excluded from production builds.\n\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\n\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport { runIfDevelopmentMode } from '@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js';\n\nfunction maybeGatherAndSendStats() {\n  /** vaadin-dev-mode:start\n  (function () {\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar getPolymerVersion = function getPolymerVersion() {\n  return window.Polymer && window.Polymer.version;\n};\n\nvar StatisticsGatherer = function () {\n  function StatisticsGatherer(logger) {\n    classCallCheck(this, StatisticsGatherer);\n\n    this.now = new Date().getTime();\n    this.logger = logger;\n  }\n\n  createClass(StatisticsGatherer, [{\n    key: 'frameworkVersionDetectors',\n    value: function frameworkVersionDetectors() {\n      return {\n        'Flow': function Flow() {\n          if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {\n            var flowVersions = Object.keys(window.Vaadin.Flow.clients).map(function (key) {\n              return window.Vaadin.Flow.clients[key];\n            }).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().flow;\n            });\n            if (flowVersions.length > 0) {\n              return flowVersions[0];\n            }\n          }\n        },\n        'Vaadin Framework': function VaadinFramework() {\n          if (window.vaadin && window.vaadin.clients) {\n            var frameworkVersions = Object.values(window.vaadin.clients).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().vaadinVersion;\n            });\n            if (frameworkVersions.length > 0) {\n              return frameworkVersions[0];\n            }\n          }\n        },\n        'AngularJs': function AngularJs() {\n          if (window.angular && window.angular.version && window.angular.version) {\n            return window.angular.version.full;\n          }\n        },\n        'Angular': function Angular() {\n          if (window.ng) {\n            var tags = document.querySelectorAll(\"[ng-version]\");\n            if (tags.length > 0) {\n              return tags[0].getAttribute(\"ng-version\");\n            }\n            return \"Unknown\";\n          }\n        },\n        'Backbone.js': function BackboneJs() {\n          if (window.Backbone) {\n            return window.Backbone.VERSION;\n          }\n        },\n        'React': function React() {\n          var reactSelector = '[data-reactroot], [data-reactid]';\n          if (!!document.querySelector(reactSelector)) {\n            // React does not publish the version by default\n            return \"unknown\";\n          }\n        },\n        'Ember': function Ember() {\n          if (window.Em && window.Em.VERSION) {\n            return window.Em.VERSION;\n          } else if (window.Ember && window.Ember.VERSION) {\n            return window.Ember.VERSION;\n          }\n        },\n        'jQuery': function (_jQuery) {\n          function jQuery() {\n            return _jQuery.apply(this, arguments);\n          }\n\n          jQuery.toString = function () {\n            return _jQuery.toString();\n          };\n\n          return jQuery;\n        }(function () {\n          if (typeof jQuery === 'function' && jQuery.prototype.jquery !== undefined) {\n            return jQuery.prototype.jquery;\n          }\n        }),\n        'Polymer': function Polymer() {\n          var version = getPolymerVersion();\n          if (version) {\n            return version;\n          }\n        },\n        'LitElement': function LitElement() {\n          var version = window.litElementVersions && window.litElementVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'LitHtml': function LitHtml() {\n          var version = window.litHtmlVersions && window.litHtmlVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'Vue.js': function VueJs() {\n          if (window.Vue) {\n            return window.Vue.version;\n          }\n        }\n      };\n    }\n  }, {\n    key: 'getUsedVaadinElements',\n    value: function getUsedVaadinElements(elements) {\n      var version = getPolymerVersion();\n      var elementClasses = void 0;\n      // NOTE: In case you edit the code here, YOU MUST UPDATE any statistics reporting code in Flow.\n      // Check all locations calling the method getEntries() in\n      // https://github.com/vaadin/flow/blob/master/flow-server/src/main/java/com/vaadin/flow/internal/UsageStatistics.java#L106\n      // Currently it is only used by BootstrapHandler.\n      if (version && version.indexOf('2') === 0) {\n        // Polymer 2: components classes are stored in window.Vaadin\n        elementClasses = Object.keys(window.Vaadin).map(function (c) {\n          return window.Vaadin[c];\n        }).filter(function (c) {\n          return c.is;\n        });\n      } else {\n        // Polymer 3: components classes are stored in window.Vaadin.registrations\n        elementClasses = window.Vaadin.registrations || [];\n      }\n      elementClasses.forEach(function (klass) {\n        var version = klass.version ? klass.version : \"0.0.0\";\n        elements[klass.is] = { version: version };\n      });\n    }\n  }, {\n    key: 'getUsedVaadinThemes',\n    value: function getUsedVaadinThemes(themes) {\n      ['Lumo', 'Material'].forEach(function (themeName) {\n        var theme;\n        var version = getPolymerVersion();\n        if (version && version.indexOf('2') === 0) {\n          // Polymer 2: themes are stored in window.Vaadin\n          theme = window.Vaadin[themeName];\n        } else {\n          // Polymer 3: themes are stored in custom element registry\n          theme = customElements.get('vaadin-' + themeName.toLowerCase() + '-styles');\n        }\n        if (theme && theme.version) {\n          themes[themeName] = { version: theme.version };\n        }\n      });\n    }\n  }, {\n    key: 'getFrameworks',\n    value: function getFrameworks(frameworks) {\n      var detectors = this.frameworkVersionDetectors();\n      Object.keys(detectors).forEach(function (framework) {\n        var detector = detectors[framework];\n        try {\n          var version = detector();\n          if (version) {\n            frameworks[framework] = { version: version };\n          }\n        } catch (e) {}\n      });\n    }\n  }, {\n    key: 'gather',\n    value: function gather(storage) {\n      var storedStats = storage.read();\n      var gatheredStats = {};\n      var types = [\"elements\", \"frameworks\", \"themes\"];\n\n      types.forEach(function (type) {\n        gatheredStats[type] = {};\n        if (!storedStats[type]) {\n          storedStats[type] = {};\n        }\n      });\n\n      var previousStats = JSON.stringify(storedStats);\n\n      this.getUsedVaadinElements(gatheredStats.elements);\n      this.getFrameworks(gatheredStats.frameworks);\n      this.getUsedVaadinThemes(gatheredStats.themes);\n\n      var now = this.now;\n      types.forEach(function (type) {\n        var keys = Object.keys(gatheredStats[type]);\n        keys.forEach(function (key) {\n          if (!storedStats[type][key] || _typeof(storedStats[type][key]) != _typeof({})) {\n            storedStats[type][key] = { firstUsed: now };\n          }\n          // Discards any previously logged version number\n          storedStats[type][key].version = gatheredStats[type][key].version;\n          storedStats[type][key].lastUsed = now;\n        });\n      });\n\n      var newStats = JSON.stringify(storedStats);\n      storage.write(newStats);\n      if (newStats != previousStats && Object.keys(storedStats).length > 0) {\n        this.logger.debug(\"New stats: \" + newStats);\n      }\n    }\n  }]);\n  return StatisticsGatherer;\n}();\n\nvar StatisticsStorage = function () {\n  function StatisticsStorage(key) {\n    classCallCheck(this, StatisticsStorage);\n\n    this.key = key;\n  }\n\n  createClass(StatisticsStorage, [{\n    key: 'read',\n    value: function read() {\n      var localStorageStatsString = localStorage.getItem(this.key);\n      try {\n        return JSON.parse(localStorageStatsString ? localStorageStatsString : '{}');\n      } catch (e) {\n        return {};\n      }\n    }\n  }, {\n    key: 'write',\n    value: function write(data) {\n      localStorage.setItem(this.key, data);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      localStorage.removeItem(this.key);\n    }\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty() {\n      var storedStats = this.read();\n      var empty = true;\n      Object.keys(storedStats).forEach(function (key) {\n        if (Object.keys(storedStats[key]).length > 0) {\n          empty = false;\n        }\n      });\n\n      return empty;\n    }\n  }]);\n  return StatisticsStorage;\n}();\n\nvar StatisticsSender = function () {\n  function StatisticsSender(url, logger) {\n    classCallCheck(this, StatisticsSender);\n\n    this.url = url;\n    this.logger = logger;\n  }\n\n  createClass(StatisticsSender, [{\n    key: 'send',\n    value: function send(data, errorHandler) {\n      var logger = this.logger;\n\n      if (navigator.onLine === false) {\n        logger.debug(\"Offline, can't send\");\n        errorHandler();\n        return;\n      }\n      logger.debug(\"Sending data to \" + this.url);\n\n      var req = new XMLHttpRequest();\n      req.withCredentials = true;\n      req.addEventListener(\"load\", function () {\n        // Stats sent, nothing more to do\n        logger.debug(\"Response: \" + req.responseText);\n      });\n      req.addEventListener(\"error\", function () {\n        logger.debug(\"Send failed\");\n        errorHandler();\n      });\n      req.addEventListener(\"abort\", function () {\n        logger.debug(\"Send aborted\");\n        errorHandler();\n      });\n      req.open(\"POST\", this.url);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.send(data);\n    }\n  }]);\n  return StatisticsSender;\n}();\n\nvar StatisticsLogger = function () {\n  function StatisticsLogger(id) {\n    classCallCheck(this, StatisticsLogger);\n\n    this.id = id;\n  }\n\n  createClass(StatisticsLogger, [{\n    key: '_isDebug',\n    value: function _isDebug() {\n      return localStorage.getItem(\"vaadin.\" + this.id + \".debug\");\n    }\n  }, {\n    key: 'debug',\n    value: function debug(msg) {\n      if (this._isDebug()) {\n        console.info(this.id + \": \" + msg);\n      }\n    }\n  }]);\n  return StatisticsLogger;\n}();\n\nvar UsageStatistics = function () {\n  function UsageStatistics() {\n    classCallCheck(this, UsageStatistics);\n\n    this.now = new Date();\n    this.timeNow = this.now.getTime();\n    this.gatherDelay = 10; // Delay between loading this file and gathering stats\n    this.initialDelay = 24 * 60 * 60;\n\n    this.logger = new StatisticsLogger(\"statistics\");\n    this.storage = new StatisticsStorage(\"vaadin.statistics.basket\");\n    this.gatherer = new StatisticsGatherer(this.logger);\n    this.sender = new StatisticsSender(\"https://tools.vaadin.com/usage-stats/submit\", this.logger);\n  }\n\n  createClass(UsageStatistics, [{\n    key: 'maybeGatherAndSend',\n    value: function maybeGatherAndSend() {\n      var _this = this;\n\n      if (localStorage.getItem(UsageStatistics.optOutKey)) {\n        return;\n      }\n      this.gatherer.gather(this.storage);\n      setTimeout(function () {\n        _this.maybeSend();\n      }, this.gatherDelay * 1000);\n    }\n  }, {\n    key: 'lottery',\n    value: function lottery() {\n      return true;\n    }\n  }, {\n    key: 'currentMonth',\n    value: function currentMonth() {\n      return this.now.getYear() * 12 + this.now.getMonth();\n    }\n  }, {\n    key: 'maybeSend',\n    value: function maybeSend() {\n      var firstUse = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      var monthProcessed = Number(localStorage.getItem(UsageStatistics.monthProcessedKey));\n\n      if (!firstUse) {\n        // Use a grace period to avoid interfering with tests, incognito mode etc\n        firstUse = this.timeNow;\n        localStorage.setItem(UsageStatistics.firstUseKey, firstUse);\n      }\n\n      if (this.timeNow < firstUse + this.initialDelay * 1000) {\n        this.logger.debug(\"No statistics will be sent until the initial delay of \" + this.initialDelay + \"s has passed\");\n        return;\n      }\n      if (this.currentMonth() <= monthProcessed) {\n        this.logger.debug(\"This month has already been processed\");\n        return;\n      }\n      localStorage.setItem(UsageStatistics.monthProcessedKey, this.currentMonth());\n      // Use random sampling\n      if (this.lottery()) {\n        this.logger.debug(\"Congratulations, we have a winner!\");\n      } else {\n        this.logger.debug(\"Sorry, no stats from you this time\");\n        return;\n      }\n\n      this.send();\n    }\n  }, {\n    key: 'send',\n    value: function send() {\n      // Ensure we have the latest data\n      this.gatherer.gather(this.storage);\n\n      // Read, send and clean up\n      var data = this.storage.read();\n      data[\"firstUse\"] = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      data[\"usageStatisticsVersion\"] = UsageStatistics.version;\n      var info = 'This request contains usage statistics gathered from the application running in development mode. \\n\\nStatistics gathering is automatically disabled and excluded from production builds.\\n\\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\\n\\n\\n\\n';\n      var self = this;\n      this.sender.send(info + JSON.stringify(data), function () {\n        // Revert the 'month processed' flag\n        localStorage.setItem(UsageStatistics.monthProcessedKey, self.currentMonth() - 1);\n      });\n    }\n  }], [{\n    key: 'version',\n    get: function get$1() {\n      return '2.1.2';\n    }\n  }, {\n    key: 'firstUseKey',\n    get: function get$1() {\n      return 'vaadin.statistics.firstuse';\n    }\n  }, {\n    key: 'monthProcessedKey',\n    get: function get$1() {\n      return 'vaadin.statistics.monthProcessed';\n    }\n  }, {\n    key: 'optOutKey',\n    get: function get$1() {\n      return 'vaadin.statistics.optout';\n    }\n  }]);\n  return UsageStatistics;\n}();\n\ntry {\n  window.Vaadin = window.Vaadin || {};\n  window.Vaadin.usageStatsChecker = window.Vaadin.usageStatsChecker || new UsageStatistics();\n  window.Vaadin.usageStatsChecker.maybeGatherAndSend();\n} catch (e) {\n  // Intentionally ignored as this is not a problem in the app being developed\n}\n\n}());\n\n  vaadin-dev-mode:end **/\n}\n\nexport const usageStatistics = function() {\n  if (typeof runIfDevelopmentMode === 'function') {\n    return runIfDevelopmentMode(maybeGatherAndSendStats);\n  }\n};\n", "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @fileoverview\n *\n * This module provides a number of strategies for enqueuing asynchronous\n * tasks. Each sub-module provides a standard `run(fn)` interface that returns a\n * handle, and a `cancel(handle)` interface for canceling async tasks before\n * they run.\n *\n * @summary Module that provides a number of strategies for enqueuing\n * asynchronous tasks.\n */\n\n// Microtask implemented using Mutation Observer\nlet microtaskCurrHandle = 0;\nlet microtaskLastHandle = 0;\nconst microtaskCallbacks = [];\nlet microtaskNodeContent = 0;\nlet microtaskScheduled = false;\nconst microtaskNode = document.createTextNode('');\nnew window.MutationObserver(microtaskFlush).observe(microtaskNode, { characterData: true });\n\nfunction microtaskFlush() {\n  microtaskScheduled = false;\n  const len = microtaskCallbacks.length;\n  for (let i = 0; i < len; i++) {\n    const cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(() => {\n          throw e;\n        });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\n\n/**\n * Async interface wrapper around `setTimeout`.\n *\n * @namespace\n * @summary Async interface wrapper around `setTimeout`.\n */\nconst timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof timeOut\n   * @param {number=} delay Time to wait before calling callbacks in ms\n   * @return {!AsyncInterface} An async timeout interface\n   */\n  after(delay) {\n    return {\n      run(fn) {\n        return window.setTimeout(fn, delay);\n      },\n      cancel(handle) {\n        window.clearTimeout(handle);\n      },\n    };\n  },\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof timeOut\n   * @param {!Function} fn Callback to run\n   * @param {number=} delay Delay in milliseconds\n   * @return {number} Handle used for canceling task\n   */\n  run(fn, delay) {\n    return window.setTimeout(fn, delay);\n  },\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.clearTimeout(handle);\n  },\n};\nexport { timeOut };\n\n/**\n * Async interface wrapper around `requestAnimationFrame`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestAnimationFrame`.\n */\nconst animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof animationFrame\n   * @param {function(number):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestAnimationFrame(fn);\n  },\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof animationFrame\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelAnimationFrame(handle);\n  },\n};\nexport { animationFrame };\n\n/**\n * Async interface wrapper around `requestIdleCallback`.  Falls back to\n * `setTimeout` on browsers that do not support `requestIdleCallback`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestIdleCallback`.\n */\nconst idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof idlePeriod\n   * @param {function(!IdleDeadline):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestIdleCallback ? window.requestIdleCallback(fn) : window.setTimeout(fn, 16);\n  },\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    if (window.cancelIdleCallback) {\n      window.cancelIdleCallback(handle);\n    } else {\n      window.clearTimeout(handle);\n    }\n  },\n};\nexport { idlePeriod };\n\n/**\n * Async interface for enqueuing callbacks that run at microtask timing.\n *\n * Note that microtask timing is achieved via a single `MutationObserver`,\n * and thus callbacks enqueued with this API will all run in a single\n * batch, and not interleaved with other microtasks such as promises.\n * Promises are avoided as an implementation choice for the time being\n * due to Safari bugs that cause Promises to lack microtask guarantees.\n *\n * @namespace\n * @summary Async interface for enqueuing callbacks that run at microtask\n *   timing.\n */\nconst microTask = {\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof microTask\n   * @param {!Function=} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(callback) {\n    if (!microtaskScheduled) {\n      microtaskScheduled = true;\n      microtaskNode.textContent = microtaskNodeContent;\n      microtaskNodeContent += 1;\n    }\n    microtaskCallbacks.push(callback);\n    const result = microtaskCurrHandle;\n    microtaskCurrHandle += 1;\n    return result;\n  },\n\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    const idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error(`invalid async handle: ${handle}`);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  },\n};\nexport { microTask };\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @summary Collapse multiple callbacks into one invocation after a timer.\n */\nexport class Debouncer {\n  /**\n   * Creates a debouncer if no debouncer is passed as a parameter\n   * or it cancels an active debouncer otherwise. The following\n   * example shows how a debouncer can be called multiple times within a\n   * microtask and \"debounced\" such that the provided callback function is\n   * called once. Add this method to a custom element:\n   *\n   * ```js\n   * import {microTask} from '@vaadin/component-base/src/async.js';\n   * import {Debouncer} from '@vaadin/component-base/src/debounce.js';\n   * // ...\n   *\n   * _debounceWork() {\n   *   this._debounceJob = Debouncer.debounce(this._debounceJob,\n   *       microTask, () => this._doWork());\n   * }\n   * ```\n   *\n   * If the `_debounceWork` method is called multiple times within the same\n   * microtask, the `_doWork` function will be called only once at the next\n   * microtask checkpoint.\n   *\n   * Note: In testing it is often convenient to avoid asynchrony. To accomplish\n   * this with a debouncer, you can use `enqueueDebouncer` and\n   * `flush`. For example, extend the above example by adding\n   * `enqueueDebouncer(this._debounceJob)` at the end of the\n   * `_debounceWork` method. Then in a test, call `flush` to ensure\n   * the debouncer has completed.\n   *\n   * @param {Debouncer?} debouncer Debouncer object.\n   * @param {!AsyncInterface} asyncModule Object with Async interface\n   * @param {function()} callback Callback to run.\n   * @return {!Debouncer} Returns a debouncer object.\n   */\n  static debounce(debouncer, asyncModule, callback) {\n    if (debouncer instanceof Debouncer) {\n      // Cancel the async callback, but leave in debouncerQueue if it was\n      // enqueued, to maintain 1.x flush order\n      debouncer._cancelAsync();\n    } else {\n      debouncer = new Debouncer();\n    }\n    debouncer.setConfig(asyncModule, callback);\n    return debouncer;\n  }\n\n  constructor() {\n    this._asyncModule = null;\n    this._callback = null;\n    this._timer = null;\n  }\n\n  /**\n   * Sets the scheduler; that is, a module with the Async interface,\n   * a callback and optional arguments to be passed to the run function\n   * from the async module.\n   *\n   * @param {!AsyncInterface} asyncModule Object with Async interface.\n   * @param {function()} callback Callback to run.\n   * @return {void}\n   */\n  setConfig(asyncModule, callback) {\n    this._asyncModule = asyncModule;\n    this._callback = callback;\n    this._timer = this._asyncModule.run(() => {\n      this._timer = null;\n      debouncerQueue.delete(this);\n      this._callback();\n    });\n  }\n\n  /**\n   * Cancels an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  cancel() {\n    if (this.isActive()) {\n      this._cancelAsync();\n      // Canceling a debouncer removes its spot from the flush queue,\n      // so if a debouncer is manually canceled and re-debounced, it\n      // will reset its flush order (this is a very minor difference from 1.x)\n      // Re-debouncing via the `debounce` API retains the 1.x FIFO flush order\n      debouncerQueue.delete(this);\n    }\n  }\n\n  /**\n   * Cancels a debouncer's async callback.\n   *\n   * @return {void}\n   */\n  _cancelAsync() {\n    if (this.isActive()) {\n      this._asyncModule.cancel(/** @type {number} */ (this._timer));\n      this._timer = null;\n    }\n  }\n\n  /**\n   * Flushes an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  flush() {\n    if (this.isActive()) {\n      this.cancel();\n      this._callback();\n    }\n  }\n\n  /**\n   * Returns true if the debouncer is active.\n   *\n   * @return {boolean} True if active.\n   */\n  isActive() {\n    return this._timer != null;\n  }\n}\n\nlet debouncerQueue = new Set();\n\n/**\n * Adds a `Debouncer` to a list of globally flushable tasks.\n *\n * @param {!Debouncer} debouncer Debouncer to enqueue\n * @return {void}\n */\nexport function enqueueDebouncer(debouncer) {\n  debouncerQueue.add(debouncer);\n}\n\n/**\n * Flushes any enqueued debouncers\n *\n * @return {boolean} Returns whether any debouncers were flushed\n */\nexport function flushDebouncers() {\n  const didFlush = Boolean(debouncerQueue.size);\n  // If new debouncers are added while flushing, Set.forEach will ensure\n  // newly added ones are also flushed\n  debouncerQueue.forEach((debouncer) => {\n    try {\n      debouncer.flush();\n    } catch (e) {\n      setTimeout(() => {\n        throw e;\n      });\n    }\n  });\n  return didFlush;\n}\n\nexport const flush = () => {\n  let debouncers;\n  do {\n    debouncers = flushDebouncers();\n  } while (debouncers);\n};\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { setCancelSyntheticClickEvents } from '@polymer/polymer/lib/utils/settings.js';\nimport { usageStatistics } from '@vaadin/vaadin-usage-statistics/vaadin-usage-statistics.js';\nimport { idlePeriod } from './async.js';\nimport { Debouncer, enqueueDebouncer } from './debounce.js';\nimport { DirMixin } from './dir-mixin.js';\n\n// This setting affects the legacy Polymer gestures which get activated\n// once you import any iron component e.g iron-icon.\n// It has to be explicitly disabled to prevent click issues in iOS + VoiceOver\n// for buttons that are based on `[role=button]` e.g vaadin-button.\nsetCancelSyntheticClickEvents(false);\n\nwindow.Vaadin = window.Vaadin || {};\n\n/**\n * Array of Vaadin custom element classes that have been finalized.\n */\nwindow.Vaadin.registrations = window.Vaadin.registrations || [];\n\nwindow.Vaadin.developmentModeCallback = window.Vaadin.developmentModeCallback || {};\n\nwindow.Vaadin.developmentModeCallback['vaadin-usage-statistics'] = function () {\n  usageStatistics();\n};\n\nlet statsJob;\n\nconst registered = new Set();\n\n/**\n * @polymerMixin\n * @mixes DirMixin\n */\nexport const ElementMixin = (superClass) =>\n  class VaadinElementMixin extends DirMixin(superClass) {\n    static get version() {\n      return '23.3.13';\n    }\n\n    /** @protected */\n    static finalize() {\n      super.finalize();\n\n      const { is } = this;\n\n      // Registers a class prototype for telemetry purposes.\n      if (is && !registered.has(is)) {\n        window.Vaadin.registrations.push(this);\n        registered.add(is);\n\n        if (window.Vaadin.developmentModeCallback) {\n          statsJob = Debouncer.debounce(statsJob, idlePeriod, () => {\n            window.Vaadin.developmentModeCallback['vaadin-usage-statistics']();\n          });\n          enqueueDebouncer(statsJob);\n        }\n      }\n    }\n\n    constructor() {\n      super();\n\n      if (document.doctype === null) {\n        console.warn(\n          'Vaadin components require the \"standards mode\" declaration. Please add <!DOCTYPE html> to the HTML document.',\n        );\n      }\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nlet uniqueId = 0;\n\n/**\n * Resets the unique id counter.\n *\n * @return {void}\n */\nexport function resetUniqueId() {\n  uniqueId = 0;\n}\n\n/**\n * Returns a unique integer id.\n *\n * @return {number}\n */\nexport function generateUniqueId() {\n  // eslint-disable-next-line no-plusplus\n  return uniqueId++;\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { generateUniqueId } from './unique-id-utils.js';\n\n/**\n * A controller for providing content to slot element and observing changes.\n */\nexport class SlotController extends EventTarget {\n  /**\n   * Ensure that every instance has unique ID.\n   *\n   * @param {string} slotName\n   * @param {HTMLElement} host\n   * @return {string}\n   * @protected\n   */\n  static generateId(slotName, host) {\n    const prefix = slotName || 'default';\n    return `${prefix}-${host.localName}-${generateUniqueId()}`;\n  }\n\n  constructor(host, slotName, slotFactory, slotInitializer, useUniqueId) {\n    super();\n\n    this.host = host;\n    this.slotName = slotName;\n    this.slotFactory = slotFactory;\n    this.slotInitializer = slotInitializer;\n\n    // Only generate the default ID if requested by the controller.\n    if (useUniqueId) {\n      this.defaultId = SlotController.generateId(slotName, host);\n    }\n  }\n\n  hostConnected() {\n    if (!this.initialized) {\n      let node = this.getSlotChild();\n\n      if (!node) {\n        node = this.attachDefaultNode();\n      } else {\n        this.node = node;\n        this.initCustomNode(node);\n      }\n\n      this.initNode(node);\n\n      // TODO: Consider making this behavior opt-in to improve performance.\n      this.observe();\n\n      this.initialized = true;\n    }\n  }\n\n  /**\n   * Create and attach default node using the slot factory.\n   * @return {Node | undefined}\n   * @protected\n   */\n  attachDefaultNode() {\n    const { host, slotName, slotFactory } = this;\n\n    // Check if the node was created previously and if so, reuse it.\n    let node = this.defaultNode;\n\n    // Slot factory is optional, some slots don't have default content.\n    if (!node && slotFactory) {\n      node = slotFactory(host);\n      if (node instanceof Element) {\n        if (slotName !== '') {\n          node.setAttribute('slot', slotName);\n        }\n        this.node = node;\n        this.defaultNode = node;\n      }\n    }\n\n    if (node) {\n      host.appendChild(node);\n    }\n\n    return node;\n  }\n\n  /**\n   * Return a reference to the node managed by the controller.\n   * @return {Node}\n   */\n  getSlotChild() {\n    const { slotName } = this;\n    return Array.from(this.host.childNodes).find((node) => {\n      // Either an element (any slot) or a text node (only un-named slot).\n      return (\n        (node.nodeType === Node.ELEMENT_NODE && node.slot === slotName) ||\n        (node.nodeType === Node.TEXT_NODE && node.textContent.trim() && slotName === '')\n      );\n    });\n  }\n\n  /**\n   * @param {Node} node\n   * @protected\n   */\n  initNode(node) {\n    const { slotInitializer } = this;\n    // Don't try to bind `this` to initializer (normally it's arrow function).\n    // Instead, pass the host as a first argument to access component's state.\n    if (slotInitializer) {\n      slotInitializer(this.host, node);\n    }\n  }\n\n  /**\n   * Override to initialize the newly added custom node.\n   *\n   * @param {Node} _node\n   * @protected\n   */\n  initCustomNode(_node) {}\n\n  /**\n   * Override to teardown slotted node when it's removed.\n   *\n   * @param {Node} _node\n   * @protected\n   */\n  teardownNode(_node) {}\n\n  /**\n   * Setup the observer to manage slot content changes.\n   * @protected\n   */\n  observe() {\n    const { slotName } = this;\n    const selector = slotName === '' ? 'slot:not([name])' : `slot[name=${slotName}]`;\n    const slot = this.host.shadowRoot.querySelector(selector);\n\n    this.__slotObserver = new FlattenedNodesObserver(slot, (info) => {\n      // TODO: support default slot with multiple nodes (e.g. confirm-dialog)\n      const current = this.node;\n      const newNode = info.addedNodes.find((node) => node !== current);\n\n      if (info.removedNodes.length) {\n        info.removedNodes.forEach((node) => {\n          this.teardownNode(node);\n        });\n      }\n\n      if (newNode) {\n        // Custom node is added, remove the current one.\n        if (current && current.isConnected) {\n          this.host.removeChild(current);\n        }\n\n        this.node = newNode;\n\n        if (newNode !== this.defaultNode) {\n          this.initCustomNode(newNode);\n\n          this.initNode(newNode);\n        }\n      }\n    });\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotController } from './slot-controller.js';\n\n/**\n * A controller that manages the slotted tooltip element.\n */\nexport class TooltipController extends SlotController {\n  constructor(host) {\n    // Do not provide slot factory to create tooltip lazily.\n    super(host, 'tooltip');\n\n    this.setTarget(host);\n  }\n\n  /**\n   * Override to initialize the newly added custom tooltip.\n   *\n   * @param {Node} tooltipNode\n   * @protected\n   * @override\n   */\n  initCustomNode(tooltipNode) {\n    tooltipNode.target = this.target;\n\n    if (this.context !== undefined) {\n      tooltipNode.context = this.context;\n    }\n\n    if (this.manual !== undefined) {\n      tooltipNode.manual = this.manual;\n    }\n\n    if (this.opened !== undefined) {\n      tooltipNode.opened = this.opened;\n    }\n\n    if (this.position !== undefined) {\n      tooltipNode._position = this.position;\n    }\n\n    if (this.shouldShow !== undefined) {\n      tooltipNode.shouldShow = this.shouldShow;\n    }\n  }\n\n  /**\n   * Set a context object to be used by generator.\n   * @param {object} context\n   */\n  setContext(context) {\n    this.context = context;\n\n    const tooltipNode = this.node;\n    if (tooltipNode) {\n      tooltipNode.context = context;\n    }\n  }\n\n  /**\n   * Toggle manual state on the slotted tooltip.\n   * @param {boolean} manual\n   */\n  setManual(manual) {\n    this.manual = manual;\n\n    const tooltipNode = this.node;\n    if (tooltipNode) {\n      tooltipNode.manual = manual;\n    }\n  }\n\n  /**\n   * Toggle opened state on the slotted tooltip.\n   * @param {boolean} opened\n   */\n  setOpened(opened) {\n    this.opened = opened;\n\n    const tooltipNode = this.node;\n    if (tooltipNode) {\n      tooltipNode.opened = opened;\n    }\n  }\n\n  /**\n   * Set default position for the slotted tooltip.\n   * This can be overridden by setting the position\n   * using corresponding property or attribute.\n   * @param {string} position\n   */\n  setPosition(position) {\n    this.position = position;\n\n    const tooltipNode = this.node;\n    if (tooltipNode) {\n      tooltipNode._position = position;\n    }\n  }\n\n  /**\n   * Set function used to detect whether to show\n   * the tooltip based on a condition.\n   * @param {Function} shouldShow\n   */\n  setShouldShow(shouldShow) {\n    this.shouldShow = shouldShow;\n\n    const tooltipNode = this.node;\n    if (tooltipNode) {\n      tooltipNode.shouldShow = shouldShow;\n    }\n  }\n\n  /**\n   * Set an HTML element to attach the tooltip to.\n   * @param {HTMLElement} target\n   */\n  setTarget(target) {\n    this.target = target;\n\n    const tooltipNode = this.node;\n    if (tooltipNode) {\n      tooltipNode.target = target;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to provide disabled property for field components.\n *\n * @polymerMixin\n */\nexport const DisabledMixin = dedupingMixin(\n  (superclass) =>\n    class DisabledMixinClass extends superclass {\n      static get properties() {\n        return {\n          /**\n           * If true, the user cannot interact with this element.\n           */\n          disabled: {\n            type: Boolean,\n            value: false,\n            observer: '_disabledChanged',\n            reflectToAttribute: true,\n          },\n        };\n      }\n\n      /**\n       * @param {boolean} disabled\n       * @protected\n       */\n      _disabledChanged(disabled) {\n        this._setAriaDisabled(disabled);\n      }\n\n      /**\n       * @param {boolean} disabled\n       * @protected\n       */\n      _setAriaDisabled(disabled) {\n        if (disabled) {\n          this.setAttribute('aria-disabled', 'true');\n        } else {\n          this.removeAttribute('aria-disabled');\n        }\n      }\n\n      /**\n       * Overrides the default element `click` method in order to prevent\n       * firing the `click` event when the element is disabled.\n       * @protected\n       * @override\n       */\n      click() {\n        if (!this.disabled) {\n          super.click();\n        }\n      }\n    },\n);\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @fileoverview\n *\n * Module for adding listeners to a node for the following normalized\n * cross-platform \"gesture\" events:\n * - `down` - mouse or touch went down\n * - `up` - mouse or touch went up\n * - `tap` - mouse click or finger tap\n * - `track` - mouse drag or touch move\n *\n * @summary Module for adding cross-platform gesture event listeners.\n */\n\nimport { microTask } from './async.js';\n\nconst passiveTouchGestures = false;\nconst wrap = (node) => node;\n\n// Detect native touch action support\nconst HAS_NATIVE_TA = typeof document.head.style.touchAction === 'string';\nconst GESTURE_KEY = '__polymerGestures';\nconst HANDLED_OBJ = '__polymerGesturesHandled';\nconst TOUCH_ACTION = '__polymerGesturesTouchAction';\n// Radius for tap and track\nconst TAP_DISTANCE = 25;\nconst TRACK_DISTANCE = 5;\n// Number of last N track positions to keep\nconst TRACK_LENGTH = 2;\n\nconst MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'click'];\n// An array of bitmask values for mapping MouseEvent.which to MouseEvent.buttons\nconst MOUSE_WHICH_TO_BUTTONS = [0, 1, 4, 2];\nconst MOUSE_HAS_BUTTONS = (function () {\n  try {\n    return new MouseEvent('test', { buttons: 1 }).buttons === 1;\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * @param {string} name Possible mouse event name\n * @return {boolean} true if mouse event, false if not\n */\nfunction isMouseEvent(name) {\n  return MOUSE_EVENTS.indexOf(name) > -1;\n}\n\n/* eslint no-empty: [\"error\", { \"allowEmptyCatch\": true }] */\n// check for passive event listeners\nlet supportsPassive = false;\n(function () {\n  try {\n    const opts = Object.defineProperty({}, 'passive', {\n      // eslint-disable-next-line getter-return\n      get() {\n        supportsPassive = true;\n      },\n    });\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch (e) {}\n})();\n\n/**\n * Generate settings for event listeners, dependant on `passiveTouchGestures`\n *\n * @param {string} eventName Event name to determine if `{passive}` option is\n *   needed\n * @return {{passive: boolean} | undefined} Options to use for addEventListener\n *   and removeEventListener\n */\nfunction PASSIVE_TOUCH(eventName) {\n  if (isMouseEvent(eventName) || eventName === 'touchend') {\n    return;\n  }\n  if (HAS_NATIVE_TA && supportsPassive && passiveTouchGestures) {\n    return { passive: true };\n  }\n}\n\n// Check for touch-only devices\nconst IS_TOUCH_ONLY = navigator.userAgent.match(/iP(?:[oa]d|hone)|Android/);\n\n// Defined at https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#enabling-and-disabling-form-controls:-the-disabled-attribute\n/** @type {!Object<boolean>} */\nconst canBeDisabled = {\n  button: true,\n  command: true,\n  fieldset: true,\n  input: true,\n  keygen: true,\n  optgroup: true,\n  option: true,\n  select: true,\n  textarea: true,\n};\n\n/**\n * @param {MouseEvent} ev event to test for left mouse button down\n * @return {boolean} has left mouse button down\n */\nfunction hasLeftMouseButton(ev) {\n  const type = ev.type;\n  // Exit early if the event is not a mouse event\n  if (!isMouseEvent(type)) {\n    return false;\n  }\n  // Ev.button is not reliable for mousemove (0 is overloaded as both left button and no buttons)\n  // instead we use ev.buttons (bitmask of buttons) or fall back to ev.which (deprecated, 0 for no buttons, 1 for left button)\n  if (type === 'mousemove') {\n    // Allow undefined for testing events\n    let buttons = ev.buttons === undefined ? 1 : ev.buttons;\n    if (ev instanceof window.MouseEvent && !MOUSE_HAS_BUTTONS) {\n      buttons = MOUSE_WHICH_TO_BUTTONS[ev.which] || 0;\n    }\n    // Buttons is a bitmask, check that the left button bit is set (1)\n    return Boolean(buttons & 1);\n  }\n  // Allow undefined for testing events\n  const button = ev.button === undefined ? 0 : ev.button;\n  // Ev.button is 0 in mousedown/mouseup/click for left button activation\n  return button === 0;\n}\n\nfunction isSyntheticClick(ev) {\n  if (ev.type === 'click') {\n    // Ev.detail is 0 for HTMLElement.click in most browsers\n    if (ev.detail === 0) {\n      return true;\n    }\n    // In the worst case, check that the x/y position of the click is within\n    // the bounding box of the target of the event\n    // Thanks IE 10 >:(\n    const t = _findOriginalTarget(ev);\n    // Make sure the target of the event is an element so we can use getBoundingClientRect,\n    // if not, just assume it is a synthetic click\n    if (!t.nodeType || /** @type {Element} */ (t).nodeType !== Node.ELEMENT_NODE) {\n      return true;\n    }\n    const bcr = /** @type {Element} */ (t).getBoundingClientRect();\n    // Use page x/y to account for scrolling\n    const x = ev.pageX,\n      y = ev.pageY;\n    // Ev is a synthetic click if the position is outside the bounding box of the target\n    return !(x >= bcr.left && x <= bcr.right && y >= bcr.top && y <= bcr.bottom);\n  }\n  return false;\n}\n\nconst POINTERSTATE = {\n  mouse: {\n    target: null,\n    mouseIgnoreJob: null,\n  },\n  touch: {\n    x: 0,\n    y: 0,\n    id: -1,\n    scrollDecided: false,\n  },\n};\n\nfunction firstTouchAction(ev) {\n  let ta = 'auto';\n  const path = getComposedPath(ev);\n  for (let i = 0, n; i < path.length; i++) {\n    n = path[i];\n    if (n[TOUCH_ACTION]) {\n      ta = n[TOUCH_ACTION];\n      break;\n    }\n  }\n  return ta;\n}\n\nfunction trackDocument(stateObj, movefn, upfn) {\n  stateObj.movefn = movefn;\n  stateObj.upfn = upfn;\n  document.addEventListener('mousemove', movefn);\n  document.addEventListener('mouseup', upfn);\n}\n\nfunction untrackDocument(stateObj) {\n  document.removeEventListener('mousemove', stateObj.movefn);\n  document.removeEventListener('mouseup', stateObj.upfn);\n  stateObj.movefn = null;\n  stateObj.upfn = null;\n}\n\n/**\n * Returns the composedPath for the given event.\n * @param {Event} event to process\n * @return {!Array<!EventTarget>} Path of the event\n */\nconst getComposedPath =\n  window.ShadyDOM && window.ShadyDOM.noPatch\n    ? window.ShadyDOM.composedPath\n    : (event) => (event.composedPath && event.composedPath()) || [];\n\n/** @type {!Object<string, !GestureRecognizer>} */\nexport const gestures = {};\n\n/** @type {!Array<!GestureRecognizer>} */\nexport const recognizers = [];\n\n/**\n * Finds the element rendered on the screen at the provided coordinates.\n *\n * Similar to `document.elementFromPoint`, but pierces through\n * shadow roots.\n *\n * @param {number} x Horizontal pixel coordinate\n * @param {number} y Vertical pixel coordinate\n * @return {Element} Returns the deepest shadowRoot inclusive element\n * found at the screen position given.\n */\nexport function deepTargetFind(x, y) {\n  let node = document.elementFromPoint(x, y);\n  let next = node;\n  // This code path is only taken when native ShadowDOM is used\n  // if there is a shadowroot, it may have a node at x/y\n  // if there is not a shadowroot, exit the loop\n  while (next && next.shadowRoot && !window.ShadyDOM) {\n    // If there is a node at x/y in the shadowroot, look deeper\n    const oldNext = next;\n    next = next.shadowRoot.elementFromPoint(x, y);\n    // On Safari, elementFromPoint may return the shadowRoot host\n    if (oldNext === next) {\n      break;\n    }\n    if (next) {\n      node = next;\n    }\n  }\n  return node;\n}\n\n/**\n * A cheaper check than ev.composedPath()[0];\n *\n * @private\n * @param {Event|Touch} ev Event.\n * @return {EventTarget} Returns the event target.\n */\nfunction _findOriginalTarget(ev) {\n  const path = getComposedPath(/** @type {?Event} */ (ev));\n  // It shouldn't be, but sometimes path is empty (window on Safari).\n  return path.length > 0 ? path[0] : ev.target;\n}\n\n/**\n * @private\n * @param {Event} ev Event.\n * @return {void}\n */\nfunction _handleNative(ev) {\n  const type = ev.type;\n  const node = ev.currentTarget;\n  const gobj = node[GESTURE_KEY];\n  if (!gobj) {\n    return;\n  }\n  const gs = gobj[type];\n  if (!gs) {\n    return;\n  }\n  if (!ev[HANDLED_OBJ]) {\n    ev[HANDLED_OBJ] = {};\n    if (type.startsWith('touch')) {\n      const t = ev.changedTouches[0];\n      if (type === 'touchstart') {\n        // Only handle the first finger\n        if (ev.touches.length === 1) {\n          POINTERSTATE.touch.id = t.identifier;\n        }\n      }\n      if (POINTERSTATE.touch.id !== t.identifier) {\n        return;\n      }\n      if (!HAS_NATIVE_TA) {\n        if (type === 'touchstart' || type === 'touchmove') {\n          _handleTouchAction(ev);\n        }\n      }\n    }\n  }\n  const handled = ev[HANDLED_OBJ];\n  // Used to ignore synthetic mouse events\n  if (handled.skip) {\n    return;\n  }\n  // Reset recognizer state\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    if (gs[r.name] && !handled[r.name]) {\n      if (r.flow && r.flow.start.indexOf(ev.type) > -1 && r.reset) {\n        r.reset();\n      }\n    }\n  }\n  // Enforce gesture recognizer order\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    if (gs[r.name] && !handled[r.name]) {\n      handled[r.name] = true;\n      r[type](ev);\n    }\n  }\n}\n\n/**\n * @private\n * @param {TouchEvent} ev Event.\n * @return {void}\n */\nfunction _handleTouchAction(ev) {\n  const t = ev.changedTouches[0];\n  const type = ev.type;\n  if (type === 'touchstart') {\n    POINTERSTATE.touch.x = t.clientX;\n    POINTERSTATE.touch.y = t.clientY;\n    POINTERSTATE.touch.scrollDecided = false;\n  } else if (type === 'touchmove') {\n    if (POINTERSTATE.touch.scrollDecided) {\n      return;\n    }\n    POINTERSTATE.touch.scrollDecided = true;\n    const ta = firstTouchAction(ev);\n    let shouldPrevent = false;\n    const dx = Math.abs(POINTERSTATE.touch.x - t.clientX);\n    const dy = Math.abs(POINTERSTATE.touch.y - t.clientY);\n    if (!ev.cancelable) {\n      // Scrolling is happening\n    } else if (ta === 'none') {\n      shouldPrevent = true;\n    } else if (ta === 'pan-x') {\n      shouldPrevent = dy > dx;\n    } else if (ta === 'pan-y') {\n      shouldPrevent = dx > dy;\n    }\n    if (shouldPrevent) {\n      ev.preventDefault();\n    } else {\n      prevent('track');\n    }\n  }\n}\n\n/**\n * Adds an event listener to a node for the given gesture type.\n *\n * @param {!EventTarget} node Node to add listener on\n * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`\n * @param {!function(!Event):void} handler Event listener function to call\n * @return {boolean} Returns true if a gesture event listener was added.\n */\nexport function addListener(node, evType, handler) {\n  if (gestures[evType]) {\n    _add(node, evType, handler);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes an event listener from a node for the given gesture type.\n *\n * @param {!EventTarget} node Node to remove listener from\n * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`\n * @param {!function(!Event):void} handler Event listener function previously passed to\n *  `addListener`.\n * @return {boolean} Returns true if a gesture event listener was removed.\n */\nexport function removeListener(node, evType, handler) {\n  if (gestures[evType]) {\n    _remove(node, evType, handler);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Automate the event listeners for the native events\n *\n * @private\n * @param {!EventTarget} node Node on which to add the event.\n * @param {string} evType Event type to add.\n * @param {function(!Event)} handler Event handler function.\n * @return {void}\n */\nfunction _add(node, evType, handler) {\n  const recognizer = gestures[evType];\n  const deps = recognizer.deps;\n  const name = recognizer.name;\n  let gobj = node[GESTURE_KEY];\n  if (!gobj) {\n    node[GESTURE_KEY] = gobj = {};\n  }\n  for (let i = 0, dep, gd; i < deps.length; i++) {\n    dep = deps[i];\n    // Don't add mouse handlers on iOS because they cause gray selection overlays\n    if (IS_TOUCH_ONLY && isMouseEvent(dep) && dep !== 'click') {\n      continue;\n    }\n    gd = gobj[dep];\n    if (!gd) {\n      gobj[dep] = gd = { _count: 0 };\n    }\n    if (gd._count === 0) {\n      node.addEventListener(dep, _handleNative, PASSIVE_TOUCH(dep));\n    }\n    gd[name] = (gd[name] || 0) + 1;\n    gd._count = (gd._count || 0) + 1;\n  }\n  node.addEventListener(evType, handler);\n  if (recognizer.touchAction) {\n    setTouchAction(node, recognizer.touchAction);\n  }\n}\n\n/**\n * Automate event listener removal for native events\n *\n * @private\n * @param {!EventTarget} node Node on which to remove the event.\n * @param {string} evType Event type to remove.\n * @param {function(!Event): void} handler Event handler function.\n * @return {void}\n */\nfunction _remove(node, evType, handler) {\n  const recognizer = gestures[evType];\n  const deps = recognizer.deps;\n  const name = recognizer.name;\n  const gobj = node[GESTURE_KEY];\n  if (gobj) {\n    for (let i = 0, dep, gd; i < deps.length; i++) {\n      dep = deps[i];\n      gd = gobj[dep];\n      if (gd && gd[name]) {\n        gd[name] = (gd[name] || 1) - 1;\n        gd._count = (gd._count || 1) - 1;\n        if (gd._count === 0) {\n          node.removeEventListener(dep, _handleNative, PASSIVE_TOUCH(dep));\n        }\n      }\n    }\n  }\n  node.removeEventListener(evType, handler);\n}\n\n/**\n * Registers a new gesture event recognizer for adding new custom\n * gesture event types.\n *\n * @param {!GestureRecognizer} recog Gesture recognizer descriptor\n * @return {void}\n */\nexport function register(recog) {\n  recognizers.push(recog);\n  for (let i = 0; i < recog.emits.length; i++) {\n    gestures[recog.emits[i]] = recog;\n  }\n}\n\n/**\n * @private\n * @param {string} evName Event name.\n * @return {Object} Returns the gesture for the given event name.\n */\nfunction _findRecognizerByEvent(evName) {\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    for (let j = 0, n; j < r.emits.length; j++) {\n      n = r.emits[j];\n      if (n === evName) {\n        return r;\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Sets scrolling direction on node.\n *\n * This value is checked on first move, thus it should be called prior to\n * adding event listeners.\n *\n * @param {!EventTarget} node Node to set touch action setting on\n * @param {string} value Touch action value\n * @return {void}\n */\nexport function setTouchAction(node, value) {\n  if (HAS_NATIVE_TA && node instanceof HTMLElement) {\n    // NOTE: add touchAction async so that events can be added in\n    // custom element constructors. Otherwise we run afoul of custom\n    // elements restriction against settings attributes (style) in the\n    // constructor.\n    microTask.run(() => {\n      node.style.touchAction = value;\n    });\n  }\n  node[TOUCH_ACTION] = value;\n}\n\n/**\n * Dispatches an event on the `target` element of `type` with the given\n * `detail`.\n * @private\n * @param {!EventTarget} target The element on which to fire an event.\n * @param {string} type The type of event to fire.\n * @param {!Object=} detail The detail object to populate on the event.\n * @return {void}\n */\nfunction _fire(target, type, detail) {\n  const ev = new Event(type, { bubbles: true, cancelable: true, composed: true });\n  ev.detail = detail;\n  wrap(/** @type {!Node} */ (target)).dispatchEvent(ev);\n  // Forward `preventDefault` in a clean way\n  if (ev.defaultPrevented) {\n    const preventer = detail.preventer || detail.sourceEvent;\n    if (preventer && preventer.preventDefault) {\n      preventer.preventDefault();\n    }\n  }\n}\n\n/**\n * Prevents the dispatch and default action of the given event name.\n *\n * @param {string} evName Event name.\n * @return {void}\n */\nexport function prevent(evName) {\n  const recognizer = _findRecognizerByEvent(evName);\n  if (recognizer.info) {\n    recognizer.info.prevent = true;\n  }\n}\n\nregister({\n  name: 'downup',\n  deps: ['mousedown', 'touchstart', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['mouseup', 'touchend'],\n  },\n  emits: ['down', 'up'],\n\n  info: {\n    movefn: null,\n    upfn: null,\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @return {void}\n   */\n  reset() {\n    untrackDocument(this.info);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  mousedown(e) {\n    if (!hasLeftMouseButton(e)) {\n      return;\n    }\n    const t = _findOriginalTarget(e);\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    const movefn = (e) => {\n      if (!hasLeftMouseButton(e)) {\n        downupFire('up', t, e);\n        untrackDocument(self.info);\n      }\n    };\n    const upfn = (e) => {\n      if (hasLeftMouseButton(e)) {\n        downupFire('up', t, e);\n      }\n      untrackDocument(self.info);\n    };\n    trackDocument(this.info, movefn, upfn);\n    downupFire('down', t, e);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchstart(e) {\n    downupFire('down', _findOriginalTarget(e), e.changedTouches[0], e);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchend(e) {\n    downupFire('up', _findOriginalTarget(e), e.changedTouches[0], e);\n  },\n});\n\n/**\n * @param {string} type\n * @param {EventTarget} target\n * @param {Event|Touch} event\n * @param {Event=} preventer\n * @return {void}\n */\nfunction downupFire(type, target, event, preventer) {\n  if (!target) {\n    return;\n  }\n  _fire(target, type, {\n    x: event.clientX,\n    y: event.clientY,\n    sourceEvent: event,\n    preventer,\n    prevent(e) {\n      return prevent(e);\n    },\n  });\n}\n\nregister({\n  name: 'track',\n  touchAction: 'none',\n  deps: ['mousedown', 'touchstart', 'touchmove', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['mouseup', 'touchend'],\n  },\n  emits: ['track'],\n\n  info: {\n    x: 0,\n    y: 0,\n    state: 'start',\n    started: false,\n    moves: [],\n    /** @this {GestureInfo} */\n    addMove(move) {\n      if (this.moves.length > TRACK_LENGTH) {\n        this.moves.shift();\n      }\n      this.moves.push(move);\n    },\n    movefn: null,\n    upfn: null,\n    prevent: false,\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @return {void}\n   */\n  reset() {\n    this.info.state = 'start';\n    this.info.started = false;\n    this.info.moves = [];\n    this.info.x = 0;\n    this.info.y = 0;\n    this.info.prevent = false;\n    untrackDocument(this.info);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  mousedown(e) {\n    if (!hasLeftMouseButton(e)) {\n      return;\n    }\n    const t = _findOriginalTarget(e);\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    const movefn = (e) => {\n      const x = e.clientX,\n        y = e.clientY;\n      if (trackHasMovedEnough(self.info, x, y)) {\n        // First move is 'start', subsequent moves are 'move', mouseup is 'end'\n        self.info.state = self.info.started ? (e.type === 'mouseup' ? 'end' : 'track') : 'start';\n        if (self.info.state === 'start') {\n          // If and only if tracking, always prevent tap\n          prevent('tap');\n        }\n        self.info.addMove({ x, y });\n        if (!hasLeftMouseButton(e)) {\n          // Always fire \"end\"\n          self.info.state = 'end';\n          untrackDocument(self.info);\n        }\n        if (t) {\n          trackFire(self.info, t, e);\n        }\n        self.info.started = true;\n      }\n    };\n    const upfn = (e) => {\n      if (self.info.started) {\n        movefn(e);\n      }\n\n      // Remove the temporary listeners\n      untrackDocument(self.info);\n    };\n    // Add temporary document listeners as mouse retargets\n    trackDocument(this.info, movefn, upfn);\n    this.info.x = e.clientX;\n    this.info.y = e.clientY;\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchstart(e) {\n    const ct = e.changedTouches[0];\n    this.info.x = ct.clientX;\n    this.info.y = ct.clientY;\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchmove(e) {\n    const t = _findOriginalTarget(e);\n    const ct = e.changedTouches[0];\n    const x = ct.clientX,\n      y = ct.clientY;\n    if (trackHasMovedEnough(this.info, x, y)) {\n      if (this.info.state === 'start') {\n        // If and only if tracking, always prevent tap\n        prevent('tap');\n      }\n      this.info.addMove({ x, y });\n      trackFire(this.info, t, ct);\n      this.info.state = 'track';\n      this.info.started = true;\n    }\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchend(e) {\n    const t = _findOriginalTarget(e);\n    const ct = e.changedTouches[0];\n    // Only trackend if track was started and not aborted\n    if (this.info.started) {\n      // Reset started state on up\n      this.info.state = 'end';\n      this.info.addMove({ x: ct.clientX, y: ct.clientY });\n      trackFire(this.info, t, ct);\n    }\n  },\n});\n\n/**\n * @param {!GestureInfo} info\n * @param {number} x\n * @param {number} y\n * @return {boolean}\n */\nfunction trackHasMovedEnough(info, x, y) {\n  if (info.prevent) {\n    return false;\n  }\n  if (info.started) {\n    return true;\n  }\n  const dx = Math.abs(info.x - x);\n  const dy = Math.abs(info.y - y);\n  return dx >= TRACK_DISTANCE || dy >= TRACK_DISTANCE;\n}\n\n/**\n * @param {!GestureInfo} info\n * @param {?EventTarget} target\n * @param {Touch} touch\n * @return {void}\n */\nfunction trackFire(info, target, touch) {\n  if (!target) {\n    return;\n  }\n  const secondlast = info.moves[info.moves.length - 2];\n  const lastmove = info.moves[info.moves.length - 1];\n  const dx = lastmove.x - info.x;\n  const dy = lastmove.y - info.y;\n  let ddx,\n    ddy = 0;\n  if (secondlast) {\n    ddx = lastmove.x - secondlast.x;\n    ddy = lastmove.y - secondlast.y;\n  }\n  _fire(target, 'track', {\n    state: info.state,\n    x: touch.clientX,\n    y: touch.clientY,\n    dx,\n    dy,\n    ddx,\n    ddy,\n    sourceEvent: touch,\n    hover() {\n      return deepTargetFind(touch.clientX, touch.clientY);\n    },\n  });\n}\n\nregister({\n  name: 'tap',\n  deps: ['mousedown', 'click', 'touchstart', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['click', 'touchend'],\n  },\n  emits: ['tap'],\n  info: {\n    x: NaN,\n    y: NaN,\n    prevent: false,\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @return {void}\n   */\n  reset() {\n    this.info.x = NaN;\n    this.info.y = NaN;\n    this.info.prevent = false;\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  mousedown(e) {\n    if (hasLeftMouseButton(e)) {\n      this.info.x = e.clientX;\n      this.info.y = e.clientY;\n    }\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  click(e) {\n    if (hasLeftMouseButton(e)) {\n      trackForward(this.info, e);\n    }\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchstart(e) {\n    const touch = e.changedTouches[0];\n    this.info.x = touch.clientX;\n    this.info.y = touch.clientY;\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchend(e) {\n    trackForward(this.info, e.changedTouches[0], e);\n  },\n});\n\n/**\n * @param {!GestureInfo} info\n * @param {Event | Touch} e\n * @param {Event=} preventer\n * @return {void}\n */\nfunction trackForward(info, e, preventer) {\n  const dx = Math.abs(e.clientX - info.x);\n  const dy = Math.abs(e.clientY - info.y);\n  // Find original target from `preventer` for TouchEvents, or `e` for MouseEvents\n  const t = _findOriginalTarget(preventer || e);\n  if (!t || (canBeDisabled[/** @type {!HTMLElement} */ (t).localName] && t.hasAttribute('disabled'))) {\n    return;\n  }\n  // Dx,dy can be NaN if `click` has been simulated and there was no `down` for `start`\n  if (isNaN(dx) || isNaN(dy) || (dx <= TAP_DISTANCE && dy <= TAP_DISTANCE) || isSyntheticClick(e)) {\n    // Prevent taps from being generated if an event has canceled them\n    if (!info.prevent) {\n      _fire(t, 'tap', {\n        x: e.clientX,\n        y: e.clientY,\n        sourceEvent: e,\n        preventer,\n      });\n    }\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin that manages keyboard handling.\n * The mixin subscribes to the keyboard events while an actual implementation\n * for the event handlers is left to the client (a component or another mixin).\n *\n * @polymerMixin\n */\nexport const KeyboardMixin = dedupingMixin(\n  (superclass) =>\n    class KeyboardMixinClass extends superclass {\n      /** @protected */\n      ready() {\n        super.ready();\n\n        this.addEventListener('keydown', (event) => {\n          this._onKeyDown(event);\n        });\n\n        this.addEventListener('keyup', (event) => {\n          this._onKeyUp(event);\n        });\n      }\n\n      /**\n       * A handler for the `keydown` event. By default, it calls\n       * separate methods for handling \"Enter\" and \"Escape\" keys.\n       * Override the method to implement your own behavior.\n       *\n       * @param {KeyboardEvent} event\n       * @protected\n       */\n      _onKeyDown(event) {\n        switch (event.key) {\n          case 'Enter':\n            this._onEnter(event);\n            break;\n          case 'Escape':\n            this._onEscape(event);\n            break;\n          default:\n            break;\n        }\n      }\n\n      /**\n       * A handler for the `keyup` event. By default, it does nothing.\n       * Override the method to implement your own behavior.\n       *\n       * @param {KeyboardEvent} _event\n       * @protected\n       */\n      _onKeyUp(_event) {\n        // To be implemented.\n      }\n\n      /**\n       * A handler for the \"Enter\" key. By default, it does nothing.\n       * Override the method to implement your own behavior.\n       *\n       * @param {KeyboardEvent} _event\n       * @protected\n       */\n      _onEnter(_event) {\n        // To be implemented.\n      }\n\n      /**\n       * A handler for the \"Escape\" key. By default, it does nothing.\n       * Override the method to implement your own behavior.\n       *\n       * @param {KeyboardEvent} _event\n       * @protected\n       */\n      _onEscape(_event) {\n        // To be implemented.\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { DisabledMixin } from './disabled-mixin.js';\nimport { addListener } from './gestures.js';\nimport { KeyboardMixin } from './keyboard-mixin.js';\n\n/**\n * A mixin to toggle the `active` attribute.\n *\n * The attribute is set whenever the user activates the element by a pointer\n * or presses an activation key on the element from the keyboard.\n *\n * The attribute is removed as soon as the element is deactivated\n * by the pointer or by releasing the activation key.\n *\n * @polymerMixin\n */\nexport const ActiveMixin = (superclass) =>\n  class ActiveMixinClass extends DisabledMixin(KeyboardMixin(superclass)) {\n    /**\n     * An array of activation keys.\n     *\n     * See possible values here:\n     * https://developer.mozilla.org/ru/docs/Web/API/KeyboardEvent/key/Key_Values\n     *\n     * @protected\n     * @return {!Array<!string>}\n     */\n    get _activeKeys() {\n      return [' '];\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      addListener(this, 'down', (event) => {\n        if (this._shouldSetActive(event)) {\n          this._setActive(true);\n        }\n      });\n\n      addListener(this, 'up', () => {\n        this._setActive(false);\n      });\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      // When the element is disconnecting from the DOM at the moment being active,\n      // the `active` attribute needs to be manually removed from the element.\n      // Otherwise, it will preserve on the element until the element is activated once again.\n      // The case reproduces for `<vaadin-date-picker>` when closing on `Cancel` or `Today` click.\n      this._setActive(false);\n    }\n\n    /**\n     * @param {KeyboardEvent | MouseEvent} _event\n     * @protected\n     */\n    _shouldSetActive(_event) {\n      return !this.disabled;\n    }\n\n    /**\n     * Sets the `active` attribute on the element if an activation key is pressed.\n     *\n     * @param {KeyboardEvent} event\n     * @protected\n     * @override\n     */\n    _onKeyDown(event) {\n      super._onKeyDown(event);\n\n      if (this._shouldSetActive(event) && this._activeKeys.includes(event.key)) {\n        this._setActive(true);\n\n        // Element can become hidden before the `keyup` event, e.g. on button click.\n        // Use document listener to ensure `active` attribute is removed correctly.\n        document.addEventListener(\n          'keyup',\n          (e) => {\n            if (this._activeKeys.includes(e.key)) {\n              this._setActive(false);\n            }\n          },\n          { once: true },\n        );\n      }\n    }\n\n    /**\n     * Toggles the `active` attribute on the element.\n     *\n     * @param {boolean} active\n     * @protected\n     */\n    _setActive(active) {\n      this.toggleAttribute('active', active);\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { isKeyboardActive } from './focus-utils.js';\n\n/**\n * A mixin to handle `focused` and `focus-ring` attributes based on focus.\n *\n * @polymerMixin\n */\nexport const FocusMixin = dedupingMixin(\n  (superclass) =>\n    class FocusMixinClass extends superclass {\n      /**\n       * @protected\n       * @return {boolean}\n       */\n      get _keyboardActive() {\n        return isKeyboardActive();\n      }\n\n      /** @protected */\n      ready() {\n        this.addEventListener('focusin', (e) => {\n          if (this._shouldSetFocus(e)) {\n            this._setFocused(true);\n          }\n        });\n\n        this.addEventListener('focusout', (e) => {\n          if (this._shouldRemoveFocus(e)) {\n            this._setFocused(false);\n          }\n        });\n\n        // In super.ready() other 'focusin' and 'focusout' listeners might be\n        // added, so we call it after our own ones to ensure they execute first.\n        // Issue to watch out: when incorrect, <vaadin-combo-box> refocuses the\n        // input field on iOS after “Done” is pressed.\n        super.ready();\n      }\n\n      /** @protected */\n      disconnectedCallback() {\n        super.disconnectedCallback();\n\n        // In non-Chrome browsers, blur does not fire on the element when it is disconnected.\n        // reproducible in `<vaadin-date-picker>` when closing on `Cancel` or `Today` click.\n        if (this.hasAttribute('focused')) {\n          this._setFocused(false);\n        }\n      }\n\n      /**\n       * Override to change how focused and focus-ring attributes are set.\n       *\n       * @param {boolean} focused\n       * @protected\n       */\n      _setFocused(focused) {\n        this.toggleAttribute('focused', focused);\n\n        // Focus-ring is true when the element was focused from the keyboard.\n        // Focus Ring [A11ycasts]: https://youtu.be/ilj2P5-5CjI\n        this.toggleAttribute('focus-ring', focused && this._keyboardActive);\n      }\n\n      /**\n       * Override to define if the field receives focus based on the event.\n       *\n       * @param {FocusEvent} _event\n       * @return {boolean}\n       * @protected\n       */\n      _shouldSetFocus(_event) {\n        return true;\n      }\n\n      /**\n       * Override to define if the field loses focus based on the event.\n       *\n       * @param {FocusEvent} _event\n       * @return {boolean}\n       * @protected\n       */\n      _shouldRemoveFocus(_event) {\n        return true;\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { DisabledMixin } from './disabled-mixin.js';\n\n/**\n * A mixin to toggle the `tabindex` attribute.\n *\n * The attribute is set to -1 whenever the user disables the element\n * and restored with the last known value once the element is enabled.\n *\n * @polymerMixin\n * @mixes DisabledMixin\n */\nexport const TabindexMixin = (superclass) =>\n  class TabindexMixinClass extends DisabledMixin(superclass) {\n    static get properties() {\n      return {\n        /**\n         * Indicates whether the element can be focused and where it participates in sequential keyboard navigation.\n         *\n         * @protected\n         */\n        tabindex: {\n          type: Number,\n          reflectToAttribute: true,\n          observer: '_tabindexChanged',\n        },\n\n        /**\n         * Stores the last known tabindex since the element has been disabled.\n         *\n         * @protected\n         */\n        _lastTabIndex: {\n          type: Number,\n        },\n      };\n    }\n\n    /**\n     * When the element gets disabled, the observer saves the last known tabindex\n     * and makes the element not focusable by setting tabindex to -1.\n     * As soon as the element gets enabled, the observer restores the last known tabindex\n     * so that the element can be focusable again.\n     *\n     * @protected\n     * @override\n     */\n    _disabledChanged(disabled, oldDisabled) {\n      super._disabledChanged(disabled, oldDisabled);\n\n      if (disabled) {\n        if (this.tabindex !== undefined) {\n          this._lastTabIndex = this.tabindex;\n        }\n        this.tabindex = -1;\n      } else if (oldDisabled) {\n        this.tabindex = this._lastTabIndex;\n      }\n    }\n\n    /**\n     * When the user has changed tabindex while the element is disabled,\n     * the observer reverts tabindex to -1 and rather saves the new tabindex value to apply it later.\n     * The new value will be applied as soon as the element becomes enabled.\n     *\n     * @protected\n     */\n    _tabindexChanged(tabindex) {\n      if (this.disabled && tabindex !== -1) {\n        this._lastTabIndex = tabindex;\n        this.tabindex = -1;\n      }\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ActiveMixin } from '@vaadin/component-base/src/active-mixin.js';\nimport { FocusMixin } from '@vaadin/component-base/src/focus-mixin.js';\nimport { TabindexMixin } from '@vaadin/component-base/src/tabindex-mixin.js';\n\n/**\n * A mixin providing common button functionality.\n *\n * @polymerMixin\n * @mixes ActiveMixin\n * @mixes FocusMixin\n * @mixes TabindexMixin\n */\nexport const ButtonMixin = (superClass) =>\n  class ButtonMixinClass extends ActiveMixin(TabindexMixin(FocusMixin(superClass))) {\n    static get properties() {\n      return {\n        /**\n         * Indicates whether the element can be focused and where it participates in sequential keyboard navigation.\n         *\n         * @override\n         * @protected\n         */\n        tabindex: {\n          value: 0,\n        },\n      };\n    }\n\n    /**\n     * By default, `Space` is the only possible activation key for a focusable HTML element.\n     * Nonetheless, the button is an exception as it can be also activated by pressing `Enter`.\n     * See the \"Keyboard Support\" section in https://www.w3.org/TR/wai-aria-practices/examples/button/button.html.\n     *\n     * @protected\n     * @override\n     */\n    get _activeKeys() {\n      return ['Enter', ' '];\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      // By default, if the user hasn't provided a custom role,\n      // the role attribute is set to \"button\".\n      if (!this.hasAttribute('role')) {\n        this.setAttribute('role', 'button');\n      }\n    }\n\n    /**\n     * Since the button component is designed on the base of the `[role=button]` attribute,\n     * and doesn't have a native <button> inside, in order to be fully accessible from the keyboard,\n     * it should manually fire the `click` event once an activation key is pressed,\n     * as it follows from the WAI-ARIA specifications:\n     * https://www.w3.org/TR/wai-aria-practices-1.1/#button\n     *\n     * According to the UI Events specifications,\n     * the `click` event should be fired exactly on `keydown`:\n     * https://www.w3.org/TR/uievents/#event-type-keydown\n     *\n     * @param {KeyboardEvent} event\n     * @protected\n     * @override\n     */\n    _onKeyDown(event) {\n      super._onKeyDown(event);\n\n      if (this._activeKeys.includes(event.key)) {\n        event.preventDefault();\n\n        // `DisabledMixin` overrides the standard `click()` method\n        // so that it doesn't fire the `click` event when the element is disabled.\n        this.click();\n      }\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ButtonMixin } from './vaadin-button-mixin.js';\n\n/**\n * `<vaadin-button>` is an accessible and customizable button that allows users to perform actions.\n *\n * ```html\n * <vaadin-button>Press me</vaadin-button>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------|-------------\n * `label`   | The label (text) inside the button.\n * `prefix`  | A slot for content before the label (e.g. an icon).\n * `suffix`  | A slot for content after the label (e.g. an icon).\n *\n * The following attributes are available for styling:\n *\n * Attribute    | Description\n * -------------|-------------\n * `active`     | Set when the button is pressed down, either with mouse, touch or the keyboard.\n * `disabled`   | Set when the button is disabled.\n * `focus-ring` | Set when the button is focused using the keyboard.\n * `focused`    | Set when the button is focused.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @extends HTMLElement\n * @mixes ButtonMixin\n * @mixes ControllerMixin\n * @mixes ElementMixin\n * @mixes ThemableMixin\n */\nclass Button extends ButtonMixin(ElementMixin(ThemableMixin(ControllerMixin(PolymerElement)))) {\n  static get is() {\n    return 'vaadin-button';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n          position: relative;\n          outline: none;\n          white-space: nowrap;\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          user-select: none;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        /* Aligns the button with form fields when placed on the same line.\n          Note, to make it work, the form fields should have the same \"::before\" pseudo-element. */\n        .vaadin-button-container::before {\n          content: '\\\\2003';\n          display: inline-block;\n          width: 0;\n          max-height: 100%;\n        }\n\n        .vaadin-button-container {\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n          text-align: center;\n          width: 100%;\n          height: 100%;\n          min-height: inherit;\n          text-shadow: inherit;\n        }\n\n        [part='prefix'],\n        [part='suffix'] {\n          flex: none;\n        }\n\n        [part='label'] {\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n      </style>\n      <div class=\"vaadin-button-container\">\n        <span part=\"prefix\" aria-hidden=\"true\">\n          <slot name=\"prefix\"></slot>\n        </span>\n        <span part=\"label\">\n          <slot></slot>\n        </span>\n        <span part=\"suffix\" aria-hidden=\"true\">\n          <slot name=\"suffix\"></slot>\n        </span>\n      </div>\n      <slot name=\"tooltip\"></slot>\n    `;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._tooltipController = new TooltipController(this);\n    this.addController(this._tooltipController);\n  }\n}\n\ncustomElements.define(Button.is, Button);\n\nexport { Button };\n", "import '@vaadin/vaadin-material-styles/color.js';\nimport '@vaadin/vaadin-material-styles/font-icons.js';\nimport '@vaadin/vaadin-material-styles/typography.js';\nimport '@vaadin/vaadin-material-styles/shadow.js';\nimport '@vaadin/button/theme/material/vaadin-button.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-date-picker-overlay-content',\n  css`\n    :host {\n      background: var(--material-background-color);\n      font-family: var(--material-font-family);\n      font-size: var(--material-body-font-size);\n      -webkit-text-size-adjust: 100%;\n      line-height: 1.4;\n    }\n\n    :host([fullscreen]) {\n      position: absolute;\n    }\n\n    /* Fullscreen Toolbar */\n\n    [part='overlay-header'] {\n      display: flex;\n      align-items: baseline;\n      position: relative;\n      z-index: 2;\n      color: var(--material-body-text-color);\n      background: var(--material-secondary-background-color);\n      border-bottom: 2px solid var(--material-primary-color);\n      padding: 8px;\n      box-shadow: var(--material-shadow-elevation-4dp);\n    }\n\n    [part='label'] {\n      padding: 0 8px;\n      flex: auto;\n    }\n\n    [part='clear-button'],\n    [part='toggle-button'] {\n      font-family: 'material-icons';\n      font-size: var(--material-icon-font-size);\n      line-height: 24px;\n      width: 24px;\n      height: 24px;\n      text-align: center;\n      padding: 8px;\n      color: var(--material-secondary-text-color);\n    }\n\n    [part='clear-button']:hover,\n    [part='toggle-button']:hover,\n    [part='years-toggle-button']:hover {\n      color: inherit;\n    }\n\n    [part='clear-button']::before {\n      content: var(--material-icons-clear);\n    }\n\n    [part='toggle-button']::before {\n      content: var(--material-icons-calendar);\n    }\n\n    [part='years-toggle-button'] {\n      padding: 4px 8px;\n      font-size: var(--material-body-font-size);\n      font-weight: 500;\n      line-height: 24px;\n      letter-spacing: 0.05em;\n      color: var(--material-secondary-text-color);\n    }\n\n    [part='years-toggle-button']::after {\n      content: var(--material-icons-play);\n      display: inline-block;\n      width: 24px;\n      font-family: 'material-icons';\n      font-size: var(--material-icon-font-size);\n      line-height: 24px;\n      text-align: center;\n      transition: transform 100ms cubic-bezier(0.4, 0, 0.2, 1);\n    }\n\n    :host([years-visible]) [part='years-toggle-button']::after {\n      transform: rotate(90deg);\n    }\n\n    /* Month scroller */\n\n    [part='months'] {\n      --vaadin-infinite-scroller-item-height: 328px;\n      text-align: center;\n    }\n\n    /* Year scroller */\n\n    [part='years'] {\n      z-index: 1;\n      background: var(--material-secondary-text-color);\n      color: var(--material-background-color);\n      text-align: center;\n    }\n\n    [part='years']::before {\n      z-index: 2;\n      border: 0;\n      width: 8px;\n      height: 8px;\n      transform: translateX(-50%) rotate(-45deg);\n      background: var(--material-background-color);\n    }\n\n    [part='year-number'] {\n      font-size: var(--material-small-font-size);\n      line-height: 10px; /* NOTE(platosha): chosen to align years to months */\n    }\n\n    [part='year-separator'] {\n      background-color: currentColor;\n      width: 4px;\n      height: 4px;\n      border-radius: 50%;\n      margin: calc(0.5 * var(--vaadin-infinite-scroller-item-height, 80px) - 0.5 * 10px - 0.5 * 4px) auto;\n    }\n\n    /* Bottom Bar */\n\n    [part='toolbar'] {\n      display: flex;\n      justify-content: flex-end;\n      padding: 8px 4px;\n      border-top: 1px solid var(--material-divider-color);\n    }\n\n    [part='cancel-button'] {\n      order: 1;\n    }\n\n    [part='today-button'] {\n      order: 2;\n    }\n\n    [part='today-button'],\n    [part='cancel-button'] {\n      margin: 0 4px;\n    }\n  `,\n  { moduleId: 'material-date-picker-overlay-content' },\n);\n", "import '@vaadin/vaadin-material-styles/color.js';\nimport '@vaadin/vaadin-material-styles/typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-month-calendar',\n  css`\n    :host {\n      color: var(--material-body-text-color);\n      padding: 0 calc(50% / 8 - 0.5em + 8px);\n    }\n\n    :host([show-week-numbers]) {\n      padding: 0 calc(50% / 9 - 0.5em + 8px);\n    }\n\n    [part='month-header'] {\n      font-size: var(--material-h6-font-size);\n      line-height: 1;\n      padding-top: 20px;\n      margin-bottom: 8px;\n    }\n\n    [part='week-number'],\n    [part='weekday'] {\n      font-size: var(--material-caption-font-size);\n      line-height: 44px;\n      height: 40px;\n      color: var(--material-secondary-text-color);\n    }\n\n    :host([disabled]),\n    :host([disabled]) [part='week-number'],\n    :host([disabled]) [part='weekday'] {\n      color: var(--material-disabled-text-color);\n    }\n\n    [part='date'] {\n      position: relative;\n      font-size: var(--material-body-font-size);\n      line-height: 42px;\n      height: 40px;\n      cursor: default;\n    }\n\n    [part='date']::after {\n      content: '';\n      position: absolute;\n      z-index: -4;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      width: 38px;\n      height: 38px;\n      box-sizing: border-box;\n      border-radius: 50%;\n      border: 2px solid transparent;\n    }\n\n    /* Today */\n\n    [part='date'][today] {\n      color: var(--material-primary-text-color);\n    }\n\n    /* Hover */\n\n    [part='date']:not([disabled]):hover::after {\n      background-color: var(--material-secondary-background-color);\n      border-color: var(--material-secondary-background-color);\n      z-index: -3;\n    }\n\n    /* Hide for touch devices */\n    @media (hover: none) {\n      [part='date']:not([disabled]):hover::after {\n        background-color: transparent;\n        border-color: transparent;\n        z-index: -4;\n      }\n    }\n\n    /* Selected */\n\n    [part='date'][selected] {\n      font-weight: 500;\n    }\n\n    [part='date']:not([disabled])[selected]::after,\n    [part='date'][selected]::after {\n      background-color: transparent;\n      border-color: currentColor;\n      z-index: -2;\n    }\n\n    /* Focused */\n\n    [part='date']:not([disabled])[focused],\n    [part='date']:not([disabled]):active {\n      color: var(--material-primary-contrast-color);\n    }\n\n    [part='date']:not([disabled])[focused]::after,\n    [part='date']:not([disabled]):active::after {\n      opacity: 0.7;\n      background-color: var(--material-primary-color);\n      border-color: var(--material-primary-color);\n      z-index: -1;\n    }\n\n    [part='date'][disabled] {\n      color: var(--material-disabled-text-color);\n    }\n\n    :host([focused]) [part='date']:not([disabled])[focused]::after {\n      opacity: 1;\n    }\n  `,\n  { moduleId: 'material-date-picker-month-calendar' },\n);\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../font-icons.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst fieldButton = css`\n  [part$='button'] {\n    flex: none;\n    width: 24px;\n    height: 24px;\n    padding: 4px;\n    color: var(--material-secondary-text-color);\n    font-size: var(--material-icon-font-size);\n    line-height: 24px;\n    text-align: center;\n  }\n\n  :host(:not([readonly])) [part$='button'] {\n    cursor: pointer;\n  }\n\n  :host(:not([readonly])) [part$='button']:hover {\n    color: var(--material-text-color);\n  }\n\n  :host([disabled]) [part$='button'],\n  :host([readonly]) [part$='button'] {\n    color: var(--material-disabled-text-color);\n  }\n\n  :host([disabled]) [part='clear-button'] {\n    display: none;\n  }\n\n  [part$='button']::before {\n    font-family: 'material-icons';\n  }\n`;\n\nregisterStyles('', fieldButton, { moduleId: 'material-field-button' });\n\nexport { fieldButton };\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nexport const helper = css`\n  [part='helper-text'] {\n    font-size: 0.75rem;\n    line-height: 1;\n    color: var(--material-secondary-text-color);\n  }\n\n  :host([has-helper]) [part='helper-text']::before {\n    content: '';\n    display: block;\n    height: 6px;\n  }\n\n  /* According to Material guidelines, helper text should be hidden when error message is set and input is invalid */\n  :host([has-helper][invalid][has-error-message]) [part='helper-text'] {\n    display: none;\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst requiredField = css`\n  [part='label'] {\n    display: block;\n    position: absolute;\n    top: 8px;\n    font-size: 1em;\n    line-height: 1;\n    height: 20px;\n    margin-bottom: -4px;\n    white-space: nowrap;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    color: var(--material-secondary-text-color);\n    transform-origin: 0 75%;\n    transform: scale(0.75);\n  }\n\n  :host([required]) [part='required-indicator']::after {\n    content: ' *';\n    color: inherit;\n  }\n\n  :host([invalid]) [part='label'] {\n    color: var(--material-error-text-color);\n  }\n\n  [part='error-message'] {\n    font-size: 0.75em;\n    line-height: 1;\n    color: var(--material-error-text-color);\n  }\n\n  :host([has-error-message]) [part='error-message']::before {\n    content: '';\n    display: block;\n    height: 6px;\n  }\n\n  :host(:not([invalid])) [part='error-message'] {\n    margin-top: 0;\n    max-height: 0;\n    overflow: hidden;\n  }\n\n  :host([invalid]) [part='error-message'] {\n    animation: reveal 0.2s;\n  }\n\n  @keyframes reveal {\n    0% {\n      opacity: 0;\n    }\n  }\n\n  /* RTL specific styles */\n  :host([dir='rtl']) [part='label'] {\n    transform-origin: 100% 75%;\n  }\n`;\n\nregisterStyles('', requiredField, { moduleId: 'material-required-field' });\n\nexport { requiredField };\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport '../font-icons.js';\nimport '../typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { fieldButton } from './field-button.js';\nimport { helper } from './helper.js';\nimport { requiredField } from './required-field.js';\n\nconst inputField = css`\n  :host {\n    display: inline-flex;\n    position: relative;\n    padding-top: 8px;\n    margin-bottom: 8px;\n    outline: none;\n    color: var(--material-body-text-color);\n    font-size: var(--material-body-font-size);\n    line-height: 24px;\n    font-family: var(--material-font-family);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  :host::before {\n    line-height: 32px;\n  }\n\n  /* Strange gymnastics to make fields vertically align nicely in most cases\n     (no label, with label, without prefix, with prefix, etc.) */\n\n  :host([has-label]) {\n    padding-top: 24px;\n  }\n\n  :host([has-label]) ::slotted([slot='tooltip']) {\n    --vaadin-tooltip-offset-bottom: -8px;\n  }\n\n  [part='input-field'] {\n    position: relative;\n    top: -0.2px; /* NOTE(platosha): Adjusts for wrong flex baseline in Chrome & Safari */\n    height: 32px;\n    padding-left: 0;\n    padding-right: 0;\n    background-color: transparent;\n    margin: 0;\n  }\n\n  [part='input-field']::before,\n  [part='input-field']::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 1px;\n    transform-origin: 50% 0%;\n    background-color: var(--_material-text-field-input-line-background-color, #000);\n    opacity: var(--_material-text-field-input-line-opacity, 0.42);\n  }\n\n  [part='input-field']::after {\n    background-color: var(--material-primary-color);\n    opacity: 0;\n    height: 2px;\n    bottom: 0;\n    transform: scaleX(0);\n    transition: opacity 0.175s;\n  }\n\n  :host([disabled]) [part='label'],\n  :host([disabled]) [part='input-field'] ::slotted(:is(input, textarea)) {\n    color: var(--material-disabled-text-color);\n    -webkit-text-fill-color: var(--material-disabled-text-color);\n  }\n\n  [part='input-field'] ::slotted(:is(input, textarea)) {\n    outline: none;\n    margin: 0;\n    border: 0;\n    border-radius: 0;\n    padding: 8px 0;\n    width: 100%;\n    height: 100%;\n    font-family: inherit;\n    font-size: 1em;\n    line-height: inherit;\n    color: inherit;\n    background-color: transparent;\n    /* Disable default invalid style in Firefox */\n    box-shadow: none;\n  }\n\n  /* TODO: the text opacity should be 42%, but the disabled style is 38%.\n  Would need to introduce another property for it if we want to be 100% accurate. */\n  ::slotted(:is(input, textarea):placeholder-shown) {\n    color: var(--material-disabled-text-color);\n    transition: opacity 0.175s 0.1s;\n  }\n\n  /* prettier-ignore */\n  :host([has-label]:not([focused]):not([invalid]):not([theme='always-float-label'])) ::slotted(:is(input, textarea):placeholder-shown) {\n    opacity: 0;\n    transition-delay: 0;\n  }\n\n  [part='label'] {\n    width: 133%;\n    transition: transform 0.175s, color 0.175s, width 0.175s;\n    transition-timing-function: ease, ease, step-end;\n  }\n\n  :host(:hover:not([readonly]):not([invalid])) [part='input-field']::before {\n    opacity: var(--_material-text-field-input-line-hover-opacity, 0.87);\n  }\n\n  :host([focused]:not([invalid])) [part='label'] {\n    color: var(--material-primary-text-color);\n  }\n\n  :host([focused]) [part='input-field']::after,\n  :host([invalid]) [part='input-field']::after {\n    opacity: 1;\n    transform: none;\n    transition: transform 0.175s, opacity 0.175s;\n  }\n\n  :host([invalid]) [part='input-field']::after {\n    background-color: var(--material-error-color);\n  }\n\n  :host([input-prevented]) [part='input-field'] {\n    color: var(--material-error-text-color);\n  }\n\n  :host([disabled]) {\n    pointer-events: none;\n  }\n\n  :host([disabled]) [part='input-field'] {\n    color: var(--material-disabled-text-color);\n  }\n\n  :host([disabled]) [part='input-field']::before {\n    background-color: transparent;\n    background-image: linear-gradient(\n      90deg,\n      var(--_material-text-field-input-line-background-color, #000) 0,\n      var(--_material-text-field-input-line-background-color, #000) 2px,\n      transparent 2px\n    );\n    background-size: 4px 1px;\n    background-repeat: repeat-x;\n  }\n\n  /* Only target the visible floating label */\n  :host([has-label]:not([has-value]):not([focused]):not([invalid]):not([theme~='always-float-label'])) [part='label'] {\n    width: 100%;\n    transform: scale(1) translateY(24px);\n    transition-timing-function: ease, ease, step-start;\n    pointer-events: none;\n    left: auto;\n    right: auto;\n    transition-delay: 0.1s;\n  }\n\n  /* Slotted content */\n  [part='input-field'] ::slotted(*:not([part$='-button']):not(input):not(textarea)) {\n    color: var(--material-secondary-text-color);\n  }\n\n  [part='clear-button']::before {\n    content: var(--material-icons-clear);\n  }\n\n  /* RTL specific styles */\n\n  :host([disabled][dir='rtl']) [part='input-field']::before {\n    background-image: linear-gradient(\n      -90deg,\n      var(--_material-text-field-input-line-background-color, #000) 0,\n      var(--_material-text-field-input-line-background-color, #000) 2px,\n      transparent 2px\n    );\n  }\n`;\n\nconst inputFieldShared = [requiredField, fieldButton, helper, inputField];\n\nregisterStyles('', inputFieldShared, {\n  moduleId: 'material-input-field-shared-styles',\n});\n\nexport { inputField, inputFieldShared };\n", "import '@vaadin/vaadin-material-styles/color.js';\nimport '@vaadin/vaadin-material-styles/font-icons.js';\nimport { inputFieldShared } from '@vaadin/vaadin-material-styles/mixins/input-field-shared.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst datePicker = css`\n  :host {\n    display: inline-flex;\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  [part='clear-button']::before {\n    content: var(--material-icons-clear);\n  }\n\n  [part='toggle-button']::before {\n    content: var(--material-icons-calendar);\n  }\n`;\n\nregisterStyles('vaadin-date-picker', [inputFieldShared, datePicker], { moduleId: 'material-date-picker' });\n", "/**\n * @fileoverview\n * @suppress {checkPrototypalTypes}\n * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n * Google as part of the polymer project is also subject to an additional IP\n * rights grant found at http://polymer.github.io/PATENTS.txt\n */\nimport { ElementMixin } from './element-mixin.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { wrap } from '../utils/wrap.js';\n\nconst DISABLED_ATTR = 'disable-upgrade';\n\nexport const findObservedAttributesGetter = (ctor) => {\n  while (ctor) {\n    const desc = Object.getOwnPropertyDescriptor(ctor, 'observedAttributes');\n    if (desc) {\n      return desc.get;\n    }\n    ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n  }\n  return () => [];\n};\n\n/**\n * Element class mixin that allows the element to boot up in a non-enabled\n * state when the `disable-upgrade` attribute is present. This mixin is\n * designed to be used with element classes like PolymerElement that perform\n * initial startup work when they are first connected. When the\n * `disable-upgrade` attribute is removed, if the element is connected, it\n * boots up and \"enables\" as it otherwise would; if it is not connected, the\n * element boots up when it is next connected.\n *\n * Using `disable-upgrade` with PolymerElement prevents any data propagation\n * to the element, any element DOM from stamping, or any work done in\n * connected/disconnctedCallback from occuring, but it does not prevent work\n * done in the element constructor.\n *\n * Note, this mixin must be applied on top of any element class that\n * itself implements a `connectedCallback` so that it can control the work\n * done in `connectedCallback`. For example,\n *\n *     MyClass = DisableUpgradeMixin(class extends BaseClass {...});\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin ElementMixin\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const DisableUpgradeMixin = dedupingMixin((base) => {\n  /**\n   * @constructor\n   * @implements {Polymer_ElementMixin}\n   * @extends {HTMLElement}\n   * @private\n   */\n  const superClass = ElementMixin(base);\n\n  // Work around for closure bug #126934458. Using `super` in a property\n  // getter does not work so instead we search the Base prototype for an\n  // implementation of observedAttributes so that we can override and call\n  // the `super` getter. Note, this is done one time ever because we assume\n  // that `Base` is always comes from `Polymer.LegacyElementMixn`.\n  let observedAttributesGetter = findObservedAttributesGetter(superClass);\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_DisableUpgradeMixin}\n   */\n  class DisableUpgradeClass extends superClass {\n\n    constructor() {\n      super();\n      /** @type {boolean|undefined} */\n      this.__isUpgradeDisabled;\n    }\n\n    static get observedAttributes() {\n      return observedAttributesGetter.call(this).concat(DISABLED_ATTR);\n    }\n\n    // Prevent element from initializing properties when it's upgrade disabled.\n    /** @override */\n    _initializeProperties() {\n      if (this.hasAttribute(DISABLED_ATTR)) {\n        this.__isUpgradeDisabled = true;\n      } else {\n        super._initializeProperties();\n      }\n    }\n\n    // Prevent element from enabling properties when it's upgrade disabled.\n    // Normally overriding connectedCallback would be enough, but dom-* elements\n    /** @override */\n    _enableProperties() {\n      if (!this.__isUpgradeDisabled) {\n        super._enableProperties();\n      }\n    }\n\n    // If the element starts upgrade-disabled and a property is set for\n    // which an accessor exists, the default should not be applied.\n    // This additional check is needed because defaults are applied via\n    // `_initializeProperties` which is called after initial properties\n    // have been set when the element starts upgrade-disabled.\n    /** @override */\n    _canApplyPropertyDefault(property) {\n      return super._canApplyPropertyDefault(property) &&\n        !(this.__isUpgradeDisabled && this._isPropertyPending(property));\n    }\n\n    /**\n     * @override\n     * @param {string} name Attribute name.\n     * @param {?string} old The previous value for the attribute.\n     * @param {?string} value The new value for the attribute.\n     * @param {?string} namespace The XML namespace for the attribute.\n     * @return {void}\n     */\n    attributeChangedCallback(name, old, value, namespace) {\n      if (name == DISABLED_ATTR) {\n        // When disable-upgrade is removed, initialize properties and\n        // provoke connectedCallback if the element is already connected.\n        if (this.__isUpgradeDisabled && value == null) {\n          super._initializeProperties();\n          this.__isUpgradeDisabled = false;\n          if (wrap(this).isConnected) {\n            super.connectedCallback();\n          }\n        }\n      } else {\n        super.attributeChangedCallback(\n            name, old, value, /** @type {null|string} */ (namespace));\n      }\n    }\n\n    // Prevent element from connecting when it's upgrade disabled.\n    // This prevents user code in `attached` from being called.\n    /** @override */\n    connectedCallback() {\n      if (!this.__isUpgradeDisabled) {\n        super.connectedCallback();\n      }\n    }\n\n    // Prevent element from disconnecting when it's upgrade disabled.\n    // This avoids allowing user code `detached` from being called without a\n    // paired call to `attached`.\n    /** @override */\n    disconnectedCallback() {\n      if (!this.__isUpgradeDisabled) {\n        super.disconnectedCallback();\n      }\n    }\n\n  }\n\n  return DisableUpgradeClass;\n});\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Returns an array of ancestor root nodes for the given node.\n *\n * A root node is either a document node or a document fragment node (Shadow Root).\n * The array is collected by a bottom-up DOM traversing that starts with the given node\n * and involves both the light DOM and ancestor shadow DOM trees.\n *\n * @param {Node} node\n * @return {Node[]}\n */\nexport function getAncestorRootNodes(node) {\n  const result = [];\n\n  while (node) {\n    if (node.nodeType === Node.DOCUMENT_NODE) {\n      result.push(node);\n      break;\n    }\n\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      result.push(node);\n      node = node.host;\n      continue;\n    }\n\n    if (node.assignedSlot) {\n      node = node.assignedSlot;\n      continue;\n    }\n\n    node = node.parentNode;\n  }\n\n  return result;\n}\n\n/**\n * @param {string} value\n * @return {Set<string>}\n */\nfunction deserializeAttributeValue(value) {\n  if (!value) {\n    return new Set();\n  }\n\n  return new Set(value.split(' '));\n}\n\n/**\n * @param {Set<string>} values\n * @return {string}\n */\nfunction serializeAttributeValue(values) {\n  return [...values].join(' ');\n}\n\n/**\n * Adds a value to an attribute containing space-delimited values.\n *\n * @param {HTMLElement} element\n * @param {string} attr\n * @param {string} value\n */\nexport function addValueToAttribute(element, attr, value) {\n  const values = deserializeAttributeValue(element.getAttribute(attr));\n  values.add(value);\n  element.setAttribute(attr, serializeAttributeValue(values));\n}\n\n/**\n * Removes a value from an attribute containing space-delimited values.\n * If the value is the last one, the whole attribute is removed.\n *\n * @param {HTMLElement} element\n * @param {string} attr\n * @param {string} value\n */\nexport function removeValueFromAttribute(element, attr, value) {\n  const values = deserializeAttributeValue(element.getAttribute(attr));\n  values.delete(value);\n  if (values.size === 0) {\n    element.removeAttribute(attr);\n    return;\n  }\n  element.setAttribute(attr, serializeAttributeValue(values));\n}\n\n/**\n * Returns true if the given node is an empty text node, false otherwise.\n *\n * @param {Node} node\n * @return {boolean}\n */\nexport function isEmptyTextNode(node) {\n  return node.nodeType === Node.TEXT_NODE && node.textContent.trim() === '';\n}\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { getAncestorRootNodes } from '@vaadin/component-base/src/dom-utils.js';\n\nconst PROP_NAMES_VERTICAL = {\n  start: 'top',\n  end: 'bottom',\n};\n\nconst PROP_NAMES_HORIZONTAL = {\n  start: 'left',\n  end: 'right',\n};\n\nconst targetResizeObserver = new ResizeObserver((entries) => {\n  setTimeout(() => {\n    entries.forEach((entry) => {\n      if (entry.target.__overlay) {\n        entry.target.__overlay._updatePosition();\n      }\n    });\n  });\n});\n\n/**\n * @polymerMixin\n */\nexport const PositionMixin = (superClass) =>\n  class PositionMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * The element next to which this overlay should be aligned.\n         * The position of the overlay relative to the positionTarget can be adjusted\n         * with properties `horizontalAlign`, `verticalAlign`, `noHorizontalOverlap`\n         * and `noVerticalOverlap`.\n         */\n        positionTarget: {\n          type: Object,\n          value: null,\n        },\n\n        /**\n         * When `positionTarget` is set, this property defines whether to align the overlay's\n         * left or right side to the target element by default.\n         * Possible values are `start` and `end`.\n         * RTL is taken into account when interpreting the value.\n         * The overlay is automatically flipped to the opposite side when it doesn't fit into\n         * the default side defined by this property.\n         *\n         * @attr {start|end} horizontal-align\n         */\n        horizontalAlign: {\n          type: String,\n          value: 'start',\n        },\n\n        /**\n         * When `positionTarget` is set, this property defines whether to align the overlay's\n         * top or bottom side to the target element by default.\n         * Possible values are `top` and `bottom`.\n         * The overlay is automatically flipped to the opposite side when it doesn't fit into\n         * the default side defined by this property.\n         *\n         * @attr {top|bottom} vertical-align\n         */\n        verticalAlign: {\n          type: String,\n          value: 'top',\n        },\n\n        /**\n         * When `positionTarget` is set, this property defines whether the overlay should overlap\n         * the target element in the x-axis, or be positioned right next to it.\n         *\n         * @attr {boolean} no-horizontal-overlap\n         */\n        noHorizontalOverlap: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * When `positionTarget` is set, this property defines whether the overlay should overlap\n         * the target element in the y-axis, or be positioned right above/below it.\n         *\n         * @attr {boolean} no-vertical-overlap\n         */\n        noVerticalOverlap: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * If the overlay content has no intrinsic height, this property can be used to set\n         * the minimum vertical space (in pixels) required by the overlay. Setting a value to\n         * the property effectively disables the content measurement in favor of using this\n         * fixed value for determining the open direction.\n         *\n         * @attr {number} required-vertical-space\n         */\n        requiredVerticalSpace: {\n          type: Number,\n          value: 0,\n        },\n      };\n    }\n\n    static get observers() {\n      return [\n        '__positionSettingsChanged(horizontalAlign, verticalAlign, noHorizontalOverlap, noVerticalOverlap, requiredVerticalSpace)',\n        '__overlayOpenedChanged(opened, positionTarget)',\n      ];\n    }\n\n    constructor() {\n      super();\n\n      this.__onScroll = this.__onScroll.bind(this);\n      this._updatePosition = this._updatePosition.bind(this);\n    }\n\n    /** @protected */\n    connectedCallback() {\n      super.connectedCallback();\n\n      if (this.opened) {\n        this.__addUpdatePositionEventListeners();\n      }\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      this.__removeUpdatePositionEventListeners();\n    }\n\n    /** @private */\n    __addUpdatePositionEventListeners() {\n      window.addEventListener('resize', this._updatePosition);\n\n      this.__positionTargetAncestorRootNodes = getAncestorRootNodes(this.positionTarget);\n      this.__positionTargetAncestorRootNodes.forEach((node) => {\n        node.addEventListener('scroll', this.__onScroll, true);\n      });\n    }\n\n    /** @private */\n    __removeUpdatePositionEventListeners() {\n      window.removeEventListener('resize', this._updatePosition);\n\n      if (this.__positionTargetAncestorRootNodes) {\n        this.__positionTargetAncestorRootNodes.forEach((node) => {\n          node.removeEventListener('scroll', this.__onScroll, true);\n        });\n        this.__positionTargetAncestorRootNodes = null;\n      }\n    }\n\n    /** @private */\n    __overlayOpenedChanged(opened, positionTarget) {\n      this.__removeUpdatePositionEventListeners();\n\n      if (positionTarget) {\n        positionTarget.__overlay = null;\n        targetResizeObserver.unobserve(positionTarget);\n\n        if (opened) {\n          this.__addUpdatePositionEventListeners();\n          positionTarget.__overlay = this;\n          targetResizeObserver.observe(positionTarget);\n        }\n      }\n\n      if (opened) {\n        const computedStyle = getComputedStyle(this);\n        if (!this.__margins) {\n          this.__margins = {};\n          ['top', 'bottom', 'left', 'right'].forEach((propName) => {\n            this.__margins[propName] = parseInt(computedStyle[propName], 10);\n          });\n        }\n        this.setAttribute('dir', computedStyle.direction);\n\n        this._updatePosition();\n        // Schedule another position update (to cover virtual keyboard opening for example)\n        requestAnimationFrame(() => this._updatePosition());\n      }\n    }\n\n    get __isRTL() {\n      return this.getAttribute('dir') === 'rtl';\n    }\n\n    __positionSettingsChanged() {\n      this._updatePosition();\n    }\n\n    /** @private */\n    __onScroll(e) {\n      // If the scroll event occurred inside the overlay, ignore it.\n      if (!this.contains(e.target)) {\n        this._updatePosition();\n      }\n    }\n\n    _updatePosition() {\n      if (!this.positionTarget || !this.opened) {\n        return;\n      }\n\n      const targetRect = this.positionTarget.getBoundingClientRect();\n\n      // Detect the desired alignment and update the layout accordingly\n      const shouldAlignStartVertically = this.__shouldAlignStartVertically(targetRect);\n      this.style.justifyContent = shouldAlignStartVertically ? 'flex-start' : 'flex-end';\n\n      const shouldAlignStartHorizontally = this.__shouldAlignStartHorizontally(targetRect, this.__isRTL);\n      const flexStart =\n        (!this.__isRTL && shouldAlignStartHorizontally) || (this.__isRTL && !shouldAlignStartHorizontally);\n      this.style.alignItems = flexStart ? 'flex-start' : 'flex-end';\n\n      // Get the overlay rect after possible overlay alignment changes\n      const overlayRect = this.getBoundingClientRect();\n\n      // Obtain vertical positioning properties\n      const verticalProps = this.__calculatePositionInOneDimension(\n        targetRect,\n        overlayRect,\n        this.noVerticalOverlap,\n        PROP_NAMES_VERTICAL,\n        this,\n        shouldAlignStartVertically,\n      );\n\n      // Obtain horizontal positioning properties\n      const horizontalProps = this.__calculatePositionInOneDimension(\n        targetRect,\n        overlayRect,\n        this.noHorizontalOverlap,\n        PROP_NAMES_HORIZONTAL,\n        this,\n        shouldAlignStartHorizontally,\n      );\n\n      // Apply the positioning properties to the overlay\n      Object.assign(this.style, verticalProps, horizontalProps);\n\n      this.toggleAttribute('bottom-aligned', !shouldAlignStartVertically);\n      this.toggleAttribute('top-aligned', shouldAlignStartVertically);\n\n      this.toggleAttribute('end-aligned', !flexStart);\n      this.toggleAttribute('start-aligned', flexStart);\n    }\n\n    __shouldAlignStartHorizontally(targetRect, rtl) {\n      // Using previous size to fix a case where window resize may cause the overlay to be squeezed\n      // smaller than its current space before the fit-calculations.\n      const contentWidth = Math.max(this.__oldContentWidth || 0, this.$.overlay.offsetWidth);\n      this.__oldContentWidth = this.$.overlay.offsetWidth;\n\n      const viewportWidth = Math.min(window.innerWidth, document.documentElement.clientWidth);\n      const defaultAlignLeft = (!rtl && this.horizontalAlign === 'start') || (rtl && this.horizontalAlign === 'end');\n\n      return this.__shouldAlignStart(\n        targetRect,\n        contentWidth,\n        viewportWidth,\n        this.__margins,\n        defaultAlignLeft,\n        this.noHorizontalOverlap,\n        PROP_NAMES_HORIZONTAL,\n      );\n    }\n\n    __shouldAlignStartVertically(targetRect) {\n      // Using previous size to fix a case where window resize may cause the overlay to be squeezed\n      // smaller than its current space before the fit-calculations.\n      const contentHeight =\n        this.requiredVerticalSpace || Math.max(this.__oldContentHeight || 0, this.$.overlay.offsetHeight);\n      this.__oldContentHeight = this.$.overlay.offsetHeight;\n\n      const viewportHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n      const defaultAlignTop = this.verticalAlign === 'top';\n\n      return this.__shouldAlignStart(\n        targetRect,\n        contentHeight,\n        viewportHeight,\n        this.__margins,\n        defaultAlignTop,\n        this.noVerticalOverlap,\n        PROP_NAMES_VERTICAL,\n      );\n    }\n\n    // eslint-disable-next-line max-params\n    __shouldAlignStart(targetRect, contentSize, viewportSize, margins, defaultAlignStart, noOverlap, propNames) {\n      const spaceForStartAlignment =\n        viewportSize - targetRect[noOverlap ? propNames.end : propNames.start] - margins[propNames.end];\n      const spaceForEndAlignment = targetRect[noOverlap ? propNames.start : propNames.end] - margins[propNames.start];\n\n      const spaceForDefaultAlignment = defaultAlignStart ? spaceForStartAlignment : spaceForEndAlignment;\n      const spaceForOtherAlignment = defaultAlignStart ? spaceForEndAlignment : spaceForStartAlignment;\n\n      const shouldGoToDefaultSide =\n        spaceForDefaultAlignment > spaceForOtherAlignment || spaceForDefaultAlignment > contentSize;\n\n      return defaultAlignStart === shouldGoToDefaultSide;\n    }\n\n    /**\n     * Returns an adjusted value after resizing the browser window,\n     * to avoid wrong calculations when e.g. previously set `bottom`\n     * CSS property value is larger than the updated viewport height.\n     * See https://github.com/vaadin/web-components/issues/4604\n     */\n    __adjustBottomProperty(cssPropNameToSet, propNames, currentValue) {\n      let adjustedProp;\n\n      if (cssPropNameToSet === propNames.end) {\n        // Adjust horizontally\n        if (propNames.end === PROP_NAMES_VERTICAL.end) {\n          const viewportHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n\n          if (currentValue > viewportHeight && this.__oldViewportHeight) {\n            const heightDiff = this.__oldViewportHeight - viewportHeight;\n            adjustedProp = currentValue - heightDiff;\n          }\n\n          this.__oldViewportHeight = viewportHeight;\n        }\n\n        // Adjust vertically\n        if (propNames.end === PROP_NAMES_HORIZONTAL.end) {\n          const viewportWidth = Math.min(window.innerWidth, document.documentElement.clientWidth);\n\n          if (currentValue > viewportWidth && this.__oldViewportWidth) {\n            const widthDiff = this.__oldViewportWidth - viewportWidth;\n            adjustedProp = currentValue - widthDiff;\n          }\n\n          this.__oldViewportWidth = viewportWidth;\n        }\n      }\n\n      return adjustedProp;\n    }\n\n    /**\n     * Returns an object with CSS position properties to set,\n     * e.g. { top: \"100px\" }\n     */\n    // eslint-disable-next-line max-params\n    __calculatePositionInOneDimension(targetRect, overlayRect, noOverlap, propNames, overlay, shouldAlignStart) {\n      const cssPropNameToSet = shouldAlignStart ? propNames.start : propNames.end;\n      const cssPropNameToClear = shouldAlignStart ? propNames.end : propNames.start;\n\n      const currentValue = parseFloat(overlay.style[cssPropNameToSet] || getComputedStyle(overlay)[cssPropNameToSet]);\n      const adjustedValue = this.__adjustBottomProperty(cssPropNameToSet, propNames, currentValue);\n\n      const diff =\n        overlayRect[shouldAlignStart ? propNames.start : propNames.end] -\n        targetRect[noOverlap === shouldAlignStart ? propNames.end : propNames.start];\n\n      const valueToSet = adjustedValue\n        ? `${adjustedValue}px`\n        : `${currentValue + diff * (shouldAlignStart ? -1 : 1)}px`;\n\n      return {\n        [cssPropNameToSet]: valueToSet,\n        [cssPropNameToClear]: '',\n      };\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nexport const datePickerStyles = css`\n  :host([dir='rtl']) [part='input-field'] {\n    direction: ltr;\n  }\n\n  :host([dir='rtl']) [part='input-field'] ::slotted(input)::placeholder {\n    direction: rtl;\n    text-align: left;\n  }\n`;\n\nexport const datePickerOverlayStyles = css`\n  [part='overlay'] {\n    display: flex;\n    flex: auto;\n  }\n\n  [part~='content'] {\n    flex: auto;\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { DisableUpgradeMixin } from '@polymer/polymer/lib/mixins/disable-upgrade-mixin.js';\nimport { Overlay } from '@vaadin/overlay/src/vaadin-overlay.js';\nimport { PositionMixin } from '@vaadin/overlay/src/vaadin-overlay-position-mixin.js';\nimport { registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { datePickerOverlayStyles } from './vaadin-date-picker-styles.js';\n\nregisterStyles('vaadin-date-picker-overlay', datePickerOverlayStyles, {\n  moduleId: 'vaadin-date-picker-overlay-styles',\n});\n\nlet memoizedTemplate;\n\n/**\n * An element used internally by `<vaadin-date-picker>`. Not intended to be used separately.\n *\n * @extends Overlay\n * @private\n */\nclass DatePickerOverlay extends DisableUpgradeMixin(PositionMixin(Overlay)) {\n  static get is() {\n    return 'vaadin-date-picker-overlay';\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      memoizedTemplate = super.template.cloneNode(true);\n      memoizedTemplate.content.querySelector('[part~=\"overlay\"]').removeAttribute('tabindex');\n    }\n\n    return memoizedTemplate;\n  }\n}\n\ncustomElements.define(DatePickerOverlay.is, DatePickerOverlay);\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nimport './mixin.js';\nimport './async.js';\n\n/**\n * @summary Collapse multiple callbacks into one invocation after a timer.\n */\nexport class Debouncer {\n  constructor() {\n    this._asyncModule = null;\n    this._callback = null;\n    this._timer = null;\n  }\n  /**\n   * Sets the scheduler; that is, a module with the Async interface,\n   * a callback and optional arguments to be passed to the run function\n   * from the async module.\n   *\n   * @param {!AsyncInterface} asyncModule Object with Async interface.\n   * @param {function()} callback Callback to run.\n   * @return {void}\n   */\n  setConfig(asyncModule, callback) {\n    this._asyncModule = asyncModule;\n    this._callback = callback;\n    this._timer = this._asyncModule.run(() => {\n      this._timer = null;\n      debouncerQueue.delete(this);\n      this._callback();\n    });\n  }\n  /**\n   * Cancels an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  cancel() {\n    if (this.isActive()) {\n      this._cancelAsync();\n      // Canceling a debouncer removes its spot from the flush queue,\n      // so if a debouncer is manually canceled and re-debounced, it\n      // will reset its flush order (this is a very minor difference from 1.x)\n      // Re-debouncing via the `debounce` API retains the 1.x FIFO flush order\n      debouncerQueue.delete(this);\n    }\n  }\n  /**\n   * Cancels a debouncer's async callback.\n   *\n   * @return {void}\n   */\n  _cancelAsync() {\n    if (this.isActive()) {\n      this._asyncModule.cancel(/** @type {number} */(this._timer));\n      this._timer = null;\n    }\n  }\n  /**\n   * Flushes an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  flush() {\n    if (this.isActive()) {\n      this.cancel();\n      this._callback();\n    }\n  }\n  /**\n   * Returns true if the debouncer is active.\n   *\n   * @return {boolean} True if active.\n   */\n  isActive() {\n    return this._timer != null;\n  }\n  /**\n   * Creates a debouncer if no debouncer is passed as a parameter\n   * or it cancels an active debouncer otherwise. The following\n   * example shows how a debouncer can be called multiple times within a\n   * microtask and \"debounced\" such that the provided callback function is\n   * called once. Add this method to a custom element:\n   *\n   * ```js\n   * import {microTask} from '@polymer/polymer/lib/utils/async.js';\n   * import {Debouncer} from '@polymer/polymer/lib/utils/debounce.js';\n   * // ...\n   *\n   * _debounceWork() {\n   *   this._debounceJob = Debouncer.debounce(this._debounceJob,\n   *       microTask, () => this._doWork());\n   * }\n   * ```\n   *\n   * If the `_debounceWork` method is called multiple times within the same\n   * microtask, the `_doWork` function will be called only once at the next\n   * microtask checkpoint.\n   *\n   * Note: In testing it is often convenient to avoid asynchrony. To accomplish\n   * this with a debouncer, you can use `enqueueDebouncer` and\n   * `flush`. For example, extend the above example by adding\n   * `enqueueDebouncer(this._debounceJob)` at the end of the\n   * `_debounceWork` method. Then in a test, call `flush` to ensure\n   * the debouncer has completed.\n   *\n   * @param {Debouncer?} debouncer Debouncer object.\n   * @param {!AsyncInterface} asyncModule Object with Async interface\n   * @param {function()} callback Callback to run.\n   * @return {!Debouncer} Returns a debouncer object.\n   */\n  static debounce(debouncer, asyncModule, callback) {\n    if (debouncer instanceof Debouncer) {\n      // Cancel the async callback, but leave in debouncerQueue if it was\n      // enqueued, to maintain 1.x flush order\n      debouncer._cancelAsync();\n    } else {\n      debouncer = new Debouncer();\n    }\n    debouncer.setConfig(asyncModule, callback);\n    return debouncer;\n  }\n}\n\nlet debouncerQueue = new Set();\n\n/**\n * Adds a `Debouncer` to a list of globally flushable tasks.\n *\n * @param {!Debouncer} debouncer Debouncer to enqueue\n * @return {void}\n */\nexport const enqueueDebouncer = function(debouncer) {\n  debouncerQueue.add(debouncer);\n};\n\n/**\n * Flushes any enqueued debouncers\n *\n * @return {boolean} Returns whether any debouncers were flushed\n */\nexport const flushDebouncers = function() {\n  const didFlush = Boolean(debouncerQueue.size);\n  // If new debouncers are added while flushing, Set.forEach will ensure\n  // newly added ones are also flushed\n  debouncerQueue.forEach(debouncer => {\n    try {\n      debouncer.flush();\n    } catch(e) {\n      setTimeout(() => {\n        throw e;\n      });\n    }\n  });\n  return didFlush;\n};", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\nimport {enqueueDebouncer, flushDebouncers} from '../utils/debounce.js';\nexport {enqueueDebouncer};\n\n/**\n * Forces several classes of asynchronously queued tasks to flush:\n * - Debouncers added via `enqueueDebouncer`\n * - ShadyDOM distribution\n *\n * @return {void}\n */\nexport const flush = function() {\n  let shadyDOM, debouncers;\n  do {\n    shadyDOM = window.ShadyDOM && ShadyDOM.flush();\n    if (window.ShadyCSS && window.ShadyCSS.ScopingShim) {\n      window.ShadyCSS.ScopingShim.flush();\n    }\n    debouncers = flushDebouncers();\n  } while (shadyDOM || debouncers);\n};\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @fileoverview\n *\n * Module to hide `<dom-bind>`, `<dom-if>`, and `<dom-repeat>` elements\n * optimally in ShadyDOM\n */\n\nimport {legacyOptimizations, useShadow} from './settings.js';\n\nlet elementsHidden = false;\n\n/**\n * @return {boolean} True if elements will be hidden globally\n */\nexport function hideElementsGlobally() {\n  if (legacyOptimizations && !useShadow) {\n    if (!elementsHidden) {\n      elementsHidden = true;\n      const style = document.createElement('style');\n      style.textContent = 'dom-bind,dom-if,dom-repeat{display:none;}';\n      document.head.appendChild(style);\n    }\n    return true;\n  }\n  return false;\n}", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { PolymerElement } from '../../polymer-element.js';\n\nimport { TemplateInstanceBase, templatize, modelForElement } from '../utils/templatize.js'; // eslint-disable-line no-unused-vars\nimport { Debouncer } from '../utils/debounce.js';\nimport { enqueueDebouncer, flush } from '../utils/flush.js';\nimport { OptionalMutableData } from '../mixins/mutable-data.js';\nimport { matches, translate } from '../utils/path.js';\nimport { timeOut, microTask } from '../utils/async.js';\nimport { wrap } from '../utils/wrap.js';\nimport { hideElementsGlobally } from '../utils/hide-template-controls.js';\nimport { suppressTemplateNotifications } from '../utils/settings.js';\n\n/**\n * @constructor\n * @implements {Polymer_OptionalMutableData}\n * @extends {PolymerElement}\n * @private\n */\nconst domRepeatBase = OptionalMutableData(PolymerElement);\n\n/**\n * The `<dom-repeat>` element will automatically stamp and binds one instance\n * of template content to each object in a user-provided array.\n * `dom-repeat` accepts an `items` property, and one instance of the template\n * is stamped for each item into the DOM at the location of the `dom-repeat`\n * element.  The `item` property will be set on each instance's binding\n * scope, thus templates should bind to sub-properties of `item`.\n *\n * Example:\n *\n * ```html\n * <dom-module id=\"employee-list\">\n *\n *   <template>\n *\n *     <div> Employee list: </div>\n *     <dom-repeat items=\"{{employees}}\">\n *       <template>\n *         <div>First name: <span>{{item.first}}</span></div>\n *         <div>Last name: <span>{{item.last}}</span></div>\n *       </template>\n *     </dom-repeat>\n *\n *   </template>\n *\n * </dom-module>\n * ```\n *\n * With the following custom element definition:\n *\n * ```js\n * class EmployeeList extends PolymerElement {\n *   static get is() { return 'employee-list'; }\n *   static get properties() {\n *     return {\n *       employees: {\n *         value() {\n *           return [\n *             {first: 'Bob', last: 'Smith'},\n *             {first: 'Sally', last: 'Johnson'},\n *             ...\n *           ];\n *         }\n *       }\n *     };\n *   }\n * }\n * ```\n *\n * Notifications for changes to items sub-properties will be forwarded to template\n * instances, which will update via the normal structured data notification system.\n *\n * Mutations to the `items` array itself should be made using the Array\n * mutation API's on the PropertyEffects mixin (`push`, `pop`, `splice`,\n * `shift`, `unshift`), and template instances will be kept in sync with the\n * data in the array.\n *\n * Events caught by event handlers within the `dom-repeat` template will be\n * decorated with a `model` property, which represents the binding scope for\n * each template instance.  The model should be used to manipulate data on the\n * instance, for example `event.model.set('item.checked', true);`.\n *\n * Alternatively, the model for a template instance for an element stamped by\n * a `dom-repeat` can be obtained using the `modelForElement` API on the\n * `dom-repeat` that stamped it, for example\n * `this.$.domRepeat.modelForElement(event.target).set('item.checked', true);`.\n * This may be useful for manipulating instance data of event targets obtained\n * by event handlers on parents of the `dom-repeat` (event delegation).\n *\n * A view-specific filter/sort may be applied to each `dom-repeat` by supplying a\n * `filter` and/or `sort` property.  This may be a string that names a function on\n * the host, or a function may be assigned to the property directly.  The functions\n * should implemented following the standard `Array` filter/sort API.\n *\n * In order to re-run the filter or sort functions based on changes to sub-fields\n * of `items`, the `observe` property may be set as a space-separated list of\n * `item` sub-fields that should cause a re-filter/sort when modified.  If\n * the filter or sort function depends on properties not contained in `items`,\n * the user should observe changes to those properties and call `render` to update\n * the view based on the dependency change.\n *\n * For example, for an `dom-repeat` with a filter of the following:\n *\n * ```js\n * isEngineer(item) {\n *   return item.type == 'engineer' || item.manager.type == 'engineer';\n * }\n * ```\n *\n * Then the `observe` property should be configured as follows:\n *\n * ```html\n * <dom-repeat items=\"{{employees}}\" filter=\"isEngineer\" observe=\"type manager.type\">\n * ```\n *\n * @customElement\n * @polymer\n * @extends {domRepeatBase}\n * @appliesMixin OptionalMutableData\n * @summary Custom element for stamping instance of a template bound to\n *   items in an array.\n */\nexport class DomRepeat extends domRepeatBase {\n\n  // Not needed to find template; can be removed once the analyzer\n  // can find the tag name from customElements.define call\n  static get is() { return 'dom-repeat'; }\n\n  static get template() { return null; }\n\n  static get properties() {\n\n    /**\n     * Fired whenever DOM is added or removed by this template (by\n     * default, rendering occurs lazily).  To force immediate rendering, call\n     * `render`.\n     *\n     * @event dom-change\n     */\n    return {\n\n      /**\n       * An array containing items determining how many instances of the template\n       * to stamp and that that each template instance should bind to.\n       */\n      items: {\n        type: Array\n      },\n\n      /**\n       * The name of the variable to add to the binding scope for the array\n       * element associated with a given template instance.\n       */\n      as: {\n        type: String,\n        value: 'item'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the sorted and filtered list of rendered items.\n       * Note, for the index in the `this.items` array, use the value of the\n       * `itemsIndexAs` property.\n       */\n      indexAs: {\n        type: String,\n        value: 'index'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the `this.items` array. Note, for the index of\n       * this instance in the sorted and filtered list of rendered items,\n       * use the value of the `indexAs` property.\n       */\n      itemsIndexAs: {\n        type: String,\n        value: 'itemsIndex'\n      },\n\n      /**\n       * A function that should determine the sort order of the items.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.sort`.\n       * Using a sort function has no effect on the underlying `items` array.\n       */\n      sort: {\n        type: Function,\n        observer: '__sortChanged'\n      },\n\n      /**\n       * A function that can be used to filter items out of the view.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.filter`.\n       * Using a filter function has no effect on the underlying `items` array.\n       */\n      filter: {\n        type: Function,\n        observer: '__filterChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `observe` property\n       * should be set to a space-separated list of the names of item\n       * sub-fields that should trigger a re-sort or re-filter when changed.\n       * These should generally be fields of `item` that the sort or filter\n       * function depends on.\n       */\n      observe: {\n        type: String,\n        observer: '__observeChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `delay` property\n       * determines a debounce time in ms after a change to observed item\n       * properties that must pass before the filter or sort is re-run.\n       * This is useful in rate-limiting shuffling of the view when\n       * item changes may be frequent.\n       */\n      delay: Number,\n\n      /**\n       * Count of currently rendered items after `filter` (if any) has been applied.\n       * If \"chunking mode\" is enabled, `renderedItemCount` is updated each time a\n       * set of template instances is rendered.\n       *\n       */\n      renderedItemCount: {\n        type: Number,\n        notify: !suppressTemplateNotifications,\n        readOnly: true\n      },\n\n      /**\n       * When greater than zero, defines an initial count of template instances\n       * to render after setting the `items` array, before the next paint, and\n       * puts the `dom-repeat` into \"chunking mode\".  The remaining items (and\n       * any future items as a result of pushing onto the array) will be created\n       * and rendered incrementally at each animation frame thereof until all\n       * instances have been rendered.\n       */\n      initialCount: {\n        type: Number\n      },\n\n      /**\n       * When `initialCount` is used, this property defines a frame rate (in\n       * fps) to target by throttling the number of instances rendered each\n       * frame to not exceed the budget for the target frame rate.  The\n       * framerate is effectively the number of `requestAnimationFrame`s that\n       * it tries to allow to actually fire in a given second. It does this\n       * by measuring the time between `rAF`s and continuously adjusting the\n       * number of items created each `rAF` to maintain the target framerate.\n       * Setting this to a higher number allows lower latency and higher\n       * throughput for event handlers and other tasks, but results in a\n       * longer time for the remaining items to complete rendering.\n       */\n      targetFramerate: {\n        type: Number,\n        value: 20\n      },\n\n      _targetFrameTime: {\n        type: Number,\n        computed: '__computeFrameTime(targetFramerate)'\n      },\n\n      /**\n       * When the global `suppressTemplateNotifications` setting is used, setting\n       * `notifyDomChange: true` will enable firing `dom-change` events on this\n       * element.\n       */\n      notifyDomChange: {\n        type: Boolean\n      },\n\n      /**\n       * When chunking is enabled via `initialCount` and the `items` array is\n       * set to a new array, this flag controls whether the previously rendered\n       * instances are reused or not.\n       *\n       * When `true`, any previously rendered template instances are updated in\n       * place to their new item values synchronously in one shot, and then any\n       * further items (if any) are chunked out.  When `false`, the list is\n       * returned back to its `initialCount` (any instances over the initial\n       * count are discarded) and the remainder of the list is chunked back in.\n       * Set this to `true` to avoid re-creating the list and losing scroll\n       * position, although note that when changing the list to completely\n       * different data the render thread will be blocked until all existing\n       * instances are updated to their new data.\n       */\n      reuseChunkedInstances: {\n        type: Boolean\n      }\n\n    };\n\n  }\n\n  static get observers() {\n    return [ '__itemsChanged(items.*)' ];\n  }\n\n  constructor() {\n    super();\n    this.__instances = [];\n    this.__renderDebouncer = null;\n    this.__itemsIdxToInstIdx = {};\n    this.__chunkCount = null;\n    this.__renderStartTime = null;\n    this.__itemsArrayChanged = false;\n    this.__shouldMeasureChunk = false;\n    this.__shouldContinueChunking = false;\n    this.__chunkingId = 0;\n    this.__sortFn = null;\n    this.__filterFn = null;\n    this.__observePaths = null;\n    /** @type {?function(new:TemplateInstanceBase, Object=)} */\n    this.__ctor = null;\n    this.__isDetached = true;\n    this.template = null;\n    /** @type {TemplateInfo} */\n    this._templateInfo;\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__isDetached = true;\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__detachInstance(i);\n    }\n    // Stop chunking if one was in progress\n    if (this.__chunkingId) {\n      cancelAnimationFrame(this.__chunkingId);\n    }\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    if (!hideElementsGlobally()) {\n      this.style.display = 'none';\n    }\n    // only perform attachment if the element was previously detached.\n    if (this.__isDetached) {\n      this.__isDetached = false;\n      let wrappedParent = wrap(wrap(this).parentNode);\n      for (let i=0; i<this.__instances.length; i++) {\n        this.__attachInstance(i, wrappedParent);\n      }\n      // Restart chunking if one was in progress when disconnected\n      if (this.__chunkingId) {\n        this.__render();\n      }\n    }\n  }\n\n  __ensureTemplatized() {\n    // Templatizing (generating the instance constructor) needs to wait\n    // until ready, since won't have its template content handed back to\n    // it until then\n    if (!this.__ctor) {\n      // When `removeNestedTemplates` is true, the \"template\" is the element\n      // itself, which has been given a `_templateInfo` property\n      const thisAsTemplate = /** @type {!HTMLTemplateElement} */ (\n          /** @type {!HTMLElement} */ (this));\n      let template = this.template = thisAsTemplate._templateInfo ?\n          thisAsTemplate :\n          /** @type {!HTMLTemplateElement} */ (this.querySelector('template'));\n      if (!template) {\n        // Wait until childList changes and template should be there by then\n        let observer = new MutationObserver(() => {\n          if (this.querySelector('template')) {\n            observer.disconnect();\n            this.__render();\n          } else {\n            throw new Error('dom-repeat requires a <template> child');\n          }\n        });\n        observer.observe(this, {childList: true});\n        return false;\n      }\n      // Template instance props that should be excluded from forwarding\n      let instanceProps = {};\n      instanceProps[this.as] = true;\n      instanceProps[this.indexAs] = true;\n      instanceProps[this.itemsIndexAs] = true;\n      this.__ctor = templatize(template, this, {\n        mutableData: this.mutableData,\n        parentModel: true,\n        instanceProps: instanceProps,\n        /**\n         * @this {DomRepeat}\n         * @param {string} prop Property to set\n         * @param {*} value Value to set property to\n         */\n        forwardHostProp: function(prop, value) {\n          let i$ = this.__instances;\n          for (let i=0, inst; (i<i$.length) && (inst=i$[i]); i++) {\n            inst.forwardHostProp(prop, value);\n          }\n        },\n        /**\n         * @this {DomRepeat}\n         * @param {Object} inst Instance to notify\n         * @param {string} prop Property to notify\n         * @param {*} value Value to notify\n         */\n        notifyInstanceProp: function(inst, prop, value) {\n          if (matches(this.as, prop)) {\n            let idx = inst[this.itemsIndexAs];\n            if (prop == this.as) {\n              this.items[idx] = value;\n            }\n            let path = translate(this.as, `${JSCompiler_renameProperty('items', this)}.${idx}`, prop);\n            this.notifyPath(path, value);\n          }\n        }\n      });\n    }\n    return true;\n  }\n\n  __getMethodHost() {\n    // Technically this should be the owner of the outermost template.\n    // In shadow dom, this is always getRootNode().host, but we can\n    // approximate this via cooperation with our dataHost always setting\n    // `_methodHost` as long as there were bindings (or id's) on this\n    // instance causing it to get a dataHost.\n    return this.__dataHost._methodHost || this.__dataHost;\n  }\n\n  __functionFromPropertyValue(functionOrMethodName) {\n    if (typeof functionOrMethodName === 'string') {\n      let methodName = functionOrMethodName;\n      let obj = this.__getMethodHost();\n      return function() { return obj[methodName].apply(obj, arguments); };\n    }\n\n    return functionOrMethodName;\n  }\n\n  __sortChanged(sort) {\n    this.__sortFn = this.__functionFromPropertyValue(sort);\n    if (this.items) { this.__debounceRender(this.__render); }\n  }\n\n  __filterChanged(filter) {\n    this.__filterFn = this.__functionFromPropertyValue(filter);\n    if (this.items) { this.__debounceRender(this.__render); }\n  }\n\n  __computeFrameTime(rate) {\n    return Math.ceil(1000/rate);\n  }\n\n  __observeChanged() {\n    this.__observePaths = this.observe &&\n      this.observe.replace('.*', '.').split(' ');\n  }\n\n  __handleObservedPaths(path) {\n    // Handle cases where path changes should cause a re-sort/filter\n    if (this.__sortFn || this.__filterFn) {\n      if (!path) {\n        // Always re-render if the item itself changed\n        this.__debounceRender(this.__render, this.delay);\n      } else if (this.__observePaths) {\n        // Otherwise, re-render if the path changed matches an observed path\n        let paths = this.__observePaths;\n        for (let i=0; i<paths.length; i++) {\n          if (path.indexOf(paths[i]) === 0) {\n            this.__debounceRender(this.__render, this.delay);\n          }\n        }\n      }\n    }\n  }\n\n  __itemsChanged(change) {\n    if (this.items && !Array.isArray(this.items)) {\n      console.warn('dom-repeat expected array for `items`, found', this.items);\n    }\n    // If path was to an item (e.g. 'items.3' or 'items.3.foo'), forward the\n    // path to that instance synchronously (returns false for non-item paths)\n    if (!this.__handleItemPath(change.path, change.value)) {\n      // Otherwise, the array was reset ('items') or spliced ('items.splices'),\n      // so queue a render.  Restart chunking when the items changed (for\n      // backward compatibility), unless `reuseChunkedInstances` option is set\n      if (change.path === 'items') {\n        this.__itemsArrayChanged = true;\n      }\n      this.__debounceRender(this.__render);\n    }\n  }\n\n  /**\n   * @param {function(this:DomRepeat)} fn Function to debounce.\n   * @param {number=} delay Delay in ms to debounce by.\n   */\n  __debounceRender(fn, delay = 0) {\n    this.__renderDebouncer = Debouncer.debounce(\n          this.__renderDebouncer\n        , delay > 0 ? timeOut.after(delay) : microTask\n        , fn.bind(this));\n    enqueueDebouncer(this.__renderDebouncer);\n  }\n\n  /**\n   * Forces the element to render its content. Normally rendering is\n   * asynchronous to a provoking change. This is done for efficiency so\n   * that multiple changes trigger only a single render. The render method\n   * should be called if, for example, template rendering is required to\n   * validate application state.\n   * @return {void}\n   */\n  render() {\n    // Queue this repeater, then flush all in order\n    this.__debounceRender(this.__render);\n    flush();\n  }\n\n  __render() {\n    if (!this.__ensureTemplatized()) {\n      // No template found yet\n      return;\n    }\n    let items = this.items || [];\n    // Sort and filter the items into a mapping array from instance->item\n    const isntIdxToItemsIdx = this.__sortAndFilterItems(items);\n    // If we're chunking, increase the limit if there are new instances to\n    // create and schedule the next chunk\n    const limit = this.__calculateLimit(isntIdxToItemsIdx.length);\n    // Create, update, and/or remove instances\n    this.__updateInstances(items, limit, isntIdxToItemsIdx);\n    // If we're chunking, schedule a rAF task to measure/continue chunking.     \n    // Do this before any notifying events (renderedItemCount & dom-change)\n    // since those could modify items and enqueue a new full render which will\n    // pre-empt this measurement.\n    if (this.initialCount &&\n       (this.__shouldMeasureChunk || this.__shouldContinueChunking)) {\n      cancelAnimationFrame(this.__chunkingId);\n      this.__chunkingId = requestAnimationFrame(() => {\n        this.__chunkingId = null;\n        this.__continueChunking();\n      });\n    }\n    // Set rendered item count\n    this._setRenderedItemCount(this.__instances.length);\n    // Notify users\n    if (!suppressTemplateNotifications || this.notifyDomChange) {\n      this.dispatchEvent(new CustomEvent('dom-change', {\n        bubbles: true,\n        composed: true\n      }));\n    }\n  }\n\n  __sortAndFilterItems(items) {\n    // Generate array maping the instance index to the items array index\n    let isntIdxToItemsIdx = new Array(items.length);\n    for (let i=0; i<items.length; i++) {\n      isntIdxToItemsIdx[i] = i;\n    }\n    // Apply user filter\n    if (this.__filterFn) {\n      isntIdxToItemsIdx = isntIdxToItemsIdx.filter((i, idx, array) =>\n        this.__filterFn(items[i], idx, array));\n    }\n    // Apply user sort\n    if (this.__sortFn) {\n      isntIdxToItemsIdx.sort((a, b) => this.__sortFn(items[a], items[b]));\n    }\n    return isntIdxToItemsIdx;\n  }\n\n  __calculateLimit(filteredItemCount) {\n    let limit = filteredItemCount;\n    const currentCount = this.__instances.length;\n    // When chunking, we increase the limit from the currently rendered count\n    // by the chunk count that is re-calculated after each rAF (with special\n    // cases for resetting the limit to initialCount after changing items)\n    if (this.initialCount) {\n      let newCount;\n      if (!this.__chunkCount ||\n        (this.__itemsArrayChanged && !this.reuseChunkedInstances)) {\n        // Limit next render to the initial count\n        limit = Math.min(filteredItemCount, this.initialCount);\n        // Subtract off any existing instances to determine the number of\n        // instances that will be created\n        newCount = Math.max(limit - currentCount, 0);\n        // Initialize the chunk size with how many items we're creating\n        this.__chunkCount = newCount || 1;\n      } else {\n        // The number of new instances that will be created is based on the\n        // existing instances, the new list size, and the chunk size\n        newCount = Math.min(\n          Math.max(filteredItemCount - currentCount, 0), \n          this.__chunkCount);\n        // Update the limit based on how many new items we're making, limited\n        // buy the total size of the list\n        limit = Math.min(currentCount + newCount, filteredItemCount);\n      }\n      // Record some state about chunking for use in `__continueChunking`\n      this.__shouldMeasureChunk = newCount === this.__chunkCount;\n      this.__shouldContinueChunking = limit < filteredItemCount;\n      this.__renderStartTime = performance.now();\n    }\n    this.__itemsArrayChanged = false;\n    return limit;\n  }\n\n  __continueChunking() {\n    // Simple auto chunkSize throttling algorithm based on feedback loop:\n    // measure actual time between frames and scale chunk count by ratio of\n    // target/actual frame time.  Only modify chunk size if our measurement\n    // reflects the cost of a creating a full chunk's worth of instances; this\n    // avoids scaling up the chunk size if we e.g. quickly re-rendered instances\n    // in place\n    if (this.__shouldMeasureChunk) {\n      const renderTime = performance.now() - this.__renderStartTime;\n      const ratio = this._targetFrameTime / renderTime;\n      this.__chunkCount = Math.round(this.__chunkCount * ratio) || 1;\n    }\n    // Enqueue a new render if we haven't reached the full size of the list\n    if (this.__shouldContinueChunking) {\n      this.__debounceRender(this.__render);\n    }\n  }\n  \n  __updateInstances(items, limit, isntIdxToItemsIdx) {\n    // items->inst map kept for item path forwarding\n    const itemsIdxToInstIdx = this.__itemsIdxToInstIdx = {};\n    let instIdx;\n    // Generate instances and assign items\n    for (instIdx=0; instIdx<limit; instIdx++) {\n      let inst = this.__instances[instIdx];\n      let itemIdx = isntIdxToItemsIdx[instIdx];\n      let item = items[itemIdx];\n      itemsIdxToInstIdx[itemIdx] = instIdx;\n      if (inst) {\n        inst._setPendingProperty(this.as, item);\n        inst._setPendingProperty(this.indexAs, instIdx);\n        inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n        inst._flushProperties();\n      } else {\n        this.__insertInstance(item, instIdx, itemIdx);\n      }\n    }\n    // Remove any extra instances from previous state\n    for (let i=this.__instances.length-1; i>=instIdx; i--) {\n      this.__detachAndRemoveInstance(i);\n    }\n  }\n\n  __detachInstance(idx) {\n    let inst = this.__instances[idx];\n    const wrappedRoot = wrap(inst.root);\n    for (let i=0; i<inst.children.length; i++) {\n      let el = inst.children[i];\n      wrappedRoot.appendChild(el);\n    }\n    return inst;\n  }\n\n  __attachInstance(idx, parent) {\n    let inst = this.__instances[idx];\n    // Note, this is pre-wrapped as an optimization\n    parent.insertBefore(inst.root, this);\n  }\n\n  __detachAndRemoveInstance(idx) {\n    this.__detachInstance(idx);\n    this.__instances.splice(idx, 1);\n  }\n\n  __stampInstance(item, instIdx, itemIdx) {\n    let model = {};\n    model[this.as] = item;\n    model[this.indexAs] = instIdx;\n    model[this.itemsIndexAs] = itemIdx;\n    return new this.__ctor(model);\n  }\n\n  __insertInstance(item, instIdx, itemIdx) {\n    const inst = this.__stampInstance(item, instIdx, itemIdx);\n    let beforeRow = this.__instances[instIdx + 1];\n    let beforeNode = beforeRow ? beforeRow.children[0] : this;\n    wrap(wrap(this).parentNode).insertBefore(inst.root, beforeNode);\n    this.__instances[instIdx] = inst;\n    return inst;\n  }\n\n  // Implements extension point from Templatize mixin\n  /**\n   * Shows or hides the template instance top level child elements. For\n   * text nodes, `textContent` is removed while \"hidden\" and replaced when\n   * \"shown.\"\n   * @param {boolean} hidden Set to true to hide the children;\n   * set to false to show them.\n   * @return {void}\n   * @protected\n   */\n  _showHideChildren(hidden) {\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__instances[i]._showHideChildren(hidden);\n    }\n  }\n\n  // Called as a side effect of a host items.<key>.<path> path change,\n  // responsible for notifying item.<path> changes to inst for key\n  __handleItemPath(path, value) {\n    let itemsPath = path.slice(6); // 'items.'.length == 6\n    let dot = itemsPath.indexOf('.');\n    let itemsIdx = dot < 0 ? itemsPath : itemsPath.substring(0, dot);\n    // If path was index into array...\n    if (itemsIdx == parseInt(itemsIdx, 10)) {\n      let itemSubPath = dot < 0 ? '' : itemsPath.substring(dot+1);\n      // If the path is observed, it will trigger a full refresh\n      this.__handleObservedPaths(itemSubPath);\n      // Note, even if a rull refresh is triggered, always do the path\n      // notification because unless mutableData is used for dom-repeat\n      // and all elements in the instance subtree, a full refresh may\n      // not trigger the proper update.\n      let instIdx = this.__itemsIdxToInstIdx[itemsIdx];\n      let inst = this.__instances[instIdx];\n      if (inst) {\n        let itemPath = this.as + (itemSubPath ? '.' + itemSubPath : '');\n        // This is effectively `notifyPath`, but avoids some of the overhead\n        // of the public API\n        inst._setPendingPropertyOrPath(itemPath, value, false, true);\n        inst._flushProperties();\n      }\n      return true;\n    }\n  }\n\n  /**\n   * Returns the item associated with a given element stamped by\n   * this `dom-repeat`.\n   *\n   * Note, to modify sub-properties of the item,\n   * `modelForElement(el).set('item.<sub-prop>', value)`\n   * should be used.\n   *\n   * @param {!HTMLElement} el Element for which to return the item.\n   * @return {*} Item associated with the element.\n   */\n  itemForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.as];\n  }\n\n  /**\n   * Returns the inst index for a given element stamped by this `dom-repeat`.\n   * If `sort` is provided, the index will reflect the sorted order (rather\n   * than the original array order).\n   *\n   * @param {!HTMLElement} el Element for which to return the index.\n   * @return {?number} Row index associated with the element (note this may\n   *   not correspond to the array index if a user `sort` is applied).\n   */\n  indexForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.indexAs];\n  }\n\n  /**\n   * Returns the template \"model\" associated with a given element, which\n   * serves as the binding scope for the template instance the element is\n   * contained in. A template model\n   * should be used to manipulate data associated with this template instance.\n   *\n   * Example:\n   *\n   *   let model = modelForElement(el);\n   *   if (model.index < 10) {\n   *     model.set('item.checked', true);\n   *   }\n   *\n   * @param {!HTMLElement} el Element for which to return a template model.\n   * @return {TemplateInstanceBase} Model representing the binding scope for\n   *   the element.\n   */\n  modelForElement(el) {\n    return modelForElement(this.template, el);\n  }\n\n}\n\ncustomElements.define(DomRepeat.is, DomRepeat);\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Get ISO 8601 week number for the given date.\n *\n * @param {!Date} Date object\n * @return {number} Week number\n */\nexport function getISOWeekNumber(date) {\n  // Ported from Vaadin Framework method com.vaadin.client.DateTimeService.getISOWeekNumber(date)\n  let dayOfWeek = date.getDay(); // 0 == sunday\n\n  // ISO 8601 use weeks that start on monday so we use\n  // mon=1,tue=2,...sun=7;\n  if (dayOfWeek === 0) {\n    dayOfWeek = 7;\n  }\n  // Find nearest thursday (defines the week in ISO 8601). The week number\n  // for the nearest thursday is the same as for the target date.\n  const nearestThursdayDiff = 4 - dayOfWeek; // 4 is thursday\n  const nearestThursday = new Date(date.getTime() + nearestThursdayDiff * 24 * 3600 * 1000);\n\n  const firstOfJanuary = new Date(0, 0);\n  firstOfJanuary.setFullYear(nearestThursday.getFullYear());\n\n  const timeDiff = nearestThursday.getTime() - firstOfJanuary.getTime();\n\n  // Rounding the result, as the division doesn't result in an integer\n  // when the given date is inside daylight saving time period.\n  const daysSinceFirstOfJanuary = Math.round(timeDiff / (24 * 3600 * 1000));\n\n  return Math.floor(daysSinceFirstOfJanuary / 7 + 1);\n}\n\n/**\n * Check if two dates are equal.\n *\n * @param {Date} date1\n * @param {Date} date2\n * @return {boolean} True if the given date objects refer to the same date\n */\nexport function dateEquals(date1, date2) {\n  return (\n    date1 instanceof Date &&\n    date2 instanceof Date &&\n    date1.getFullYear() === date2.getFullYear() &&\n    date1.getMonth() === date2.getMonth() &&\n    date1.getDate() === date2.getDate()\n  );\n}\n\n/**\n * Check if the given date is in the range of allowed dates.\n *\n * @param {!Date} date The date to check\n * @param {Date} min Range start\n * @param {Date} max Range end\n * @return {boolean} True if the date is in the range\n */\nexport function dateAllowed(date, min, max) {\n  return (!min || date >= min) && (!max || date <= max);\n}\n\n/**\n * Get closest date from array of dates.\n *\n * @param {!Date} date The date to compare dates with\n * @param {!Array<!Date>} dates Array of date objects\n * @return {!Date} Closest date\n */\nexport function getClosestDate(date, dates) {\n  return dates\n    .filter((date) => date !== undefined)\n    .reduce((closestDate, candidate) => {\n      if (!candidate) {\n        return closestDate;\n      }\n\n      if (!closestDate) {\n        return candidate;\n      }\n\n      const candidateDiff = Math.abs(date.getTime() - candidate.getTime());\n      const closestDateDiff = Math.abs(closestDate.getTime() - date.getTime());\n      return candidateDiff < closestDateDiff ? candidate : closestDate;\n    });\n}\n\n/**\n * Extracts the basic component parts of a date (day, month and year)\n * to the expected format.\n * @param {!Date} date\n * @return {{day: number, month: number, year: number}}\n */\nexport function extractDateParts(date) {\n  return {\n    day: date.getDate(),\n    month: date.getMonth(),\n    year: date.getFullYear(),\n  };\n}\n\n/**\n * Calculate the year of the date based on the provided reference date.\n * Gets a two-digit year and returns a full year.\n * @param {!Date} referenceDate The date to act as basis in the calculation\n * @param {!number} year Should be in the range of [0, 99]\n * @param {number} month\n * @param {number} day\n * @return {!number} Adjusted year value\n */\nexport function getAdjustedYear(referenceDate, year, month = 0, day = 1) {\n  if (year > 99) {\n    throw new Error('The provided year cannot have more than 2 digits.');\n  }\n  if (year < 0) {\n    throw new Error('The provided year cannot be negative.');\n  }\n  // Year values up to 2 digits are parsed based on the reference date.\n  let adjustedYear = year + Math.floor(referenceDate.getFullYear() / 100) * 100;\n  if (referenceDate < new Date(adjustedYear - 50, month, day)) {\n    adjustedYear -= 100;\n  } else if (referenceDate > new Date(adjustedYear + 50, month, day)) {\n    adjustedYear += 100;\n  }\n  return adjustedYear;\n}\n\n/**\n * Parse date string of one of the following date formats:\n * - ISO 8601 `\"YYYY-MM-DD\"`\n * - 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`\n * @param {!string} str Date string to parse\n * @return {Date} Parsed date\n */\nexport function parseDate(str) {\n  // Parsing with RegExp to ensure correct format\n  const parts = /^([-+]\\d{1}|\\d{2,4}|[-+]\\d{6})-(\\d{1,2})-(\\d{1,2})$/.exec(str);\n  if (!parts) {\n    return undefined;\n  }\n\n  const date = new Date(0, 0); // Wrong date (1900-01-01), but with midnight in local time\n  date.setFullYear(parseInt(parts[1], 10));\n  date.setMonth(parseInt(parts[2], 10) - 1);\n  date.setDate(parseInt(parts[3], 10));\n  return date;\n}\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@polymer/polymer/lib/elements/dom-repeat.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { FocusMixin } from '@vaadin/component-base/src/focus-mixin.js';\nimport { addListener } from '@vaadin/component-base/src/gestures.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { dateAllowed, dateEquals, getISOWeekNumber } from './vaadin-date-picker-helper.js';\n\n/**\n * @extends HTMLElement\n * @private\n */\nclass MonthCalendar extends FocusMixin(ThemableMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        #monthGrid {\n          width: 100%;\n          border-collapse: collapse;\n        }\n\n        #days-container tr,\n        #weekdays-container tr {\n          display: flex;\n        }\n\n        [part='date'] {\n          outline: none;\n        }\n\n        [part='week-number'][hidden],\n        [part='weekday'][hidden] {\n          display: none;\n        }\n\n        [part='weekday'],\n        [part='date'] {\n          width: calc(100% / 7);\n          padding: 0;\n          font-weight: normal;\n        }\n\n        [part='weekday']:empty,\n        [part='week-number'] {\n          width: 12.5%;\n          flex-shrink: 0;\n          padding: 0;\n        }\n\n        :host([week-numbers]) [part='weekday']:not(:empty),\n        :host([week-numbers]) [part='date'] {\n          width: 12.5%;\n        }\n      </style>\n\n      <div part=\"month-header\" id=\"month-header\" aria-hidden=\"true\">[[_getTitle(month, i18n.monthNames)]]</div>\n      <table\n        id=\"monthGrid\"\n        role=\"grid\"\n        aria-labelledby=\"month-header\"\n        on-touchend=\"_preventDefault\"\n        on-touchstart=\"_onMonthGridTouchStart\"\n      >\n        <thead id=\"weekdays-container\">\n          <tr role=\"row\" part=\"weekdays\">\n            <th\n              part=\"weekday\"\n              aria-hidden=\"true\"\n              hidden$=\"[[!_showWeekSeparator(showWeekNumbers, i18n.firstDayOfWeek)]]\"\n            ></th>\n            <template\n              is=\"dom-repeat\"\n              items=\"[[_getWeekDayNames(i18n.weekdays, i18n.weekdaysShort, showWeekNumbers, i18n.firstDayOfWeek)]]\"\n            >\n              <th role=\"columnheader\" part=\"weekday\" scope=\"col\" abbr$=\"[[item.weekDay]]\" aria-hidden=\"true\">\n                [[item.weekDayShort]]\n              </th>\n            </template>\n          </tr>\n        </thead>\n        <tbody id=\"days-container\">\n          <template is=\"dom-repeat\" items=\"[[_weeks]]\" as=\"week\">\n            <tr role=\"row\">\n              <td\n                part=\"week-number\"\n                aria-hidden=\"true\"\n                hidden$=\"[[!_showWeekSeparator(showWeekNumbers, i18n.firstDayOfWeek)]]\"\n              >\n                [[__getWeekNumber(week)]]\n              </td>\n              <template is=\"dom-repeat\" items=\"[[week]]\">\n                <td\n                  role=\"gridcell\"\n                  part=\"date\"\n                  date=\"[[item]]\"\n                  today$=\"[[_isToday(item)]]\"\n                  focused$=\"[[__isDayFocused(item, focusedDate)]]\"\n                  tabindex$=\"[[__getDayTabindex(item, focusedDate)]]\"\n                  selected$=\"[[__isDaySelected(item, selectedDate)]]\"\n                  disabled$=\"[[__isDayDisabled(item, minDate, maxDate)]]\"\n                  aria-selected$=\"[[__getDayAriaSelected(item, selectedDate)]]\"\n                  aria-disabled$=\"[[__getDayAriaDisabled(item, minDate, maxDate)]]\"\n                  aria-label$=\"[[__getDayAriaLabel(item)]]\"\n                  >[[_getDate(item)]]</td\n                >\n              </template>\n            </tr>\n          </template>\n        </tbody>\n      </table>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-month-calendar';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * A `Date` object defining the month to be displayed. Only year and\n       * month properties are actually used.\n       */\n      month: {\n        type: Date,\n        value: new Date(),\n      },\n\n      /**\n       * A `Date` object for the currently selected date.\n       */\n      selectedDate: {\n        type: Date,\n        notify: true,\n      },\n\n      /**\n       * A `Date` object for the currently focused date.\n       */\n      focusedDate: Date,\n\n      showWeekNumbers: {\n        type: Boolean,\n        value: false,\n      },\n\n      i18n: {\n        type: Object,\n      },\n\n      /**\n       * Flag stating whether taps on the component should be ignored.\n       */\n      ignoreTaps: Boolean,\n\n      _notTapping: Boolean,\n\n      /**\n       * The earliest date that can be selected. All earlier dates will be disabled.\n       */\n      minDate: {\n        type: Date,\n        value: null,\n      },\n\n      /**\n       * The latest date that can be selected. All later dates will be disabled.\n       */\n      maxDate: {\n        type: Date,\n        value: null,\n      },\n\n      _days: {\n        type: Array,\n        computed: '_getDays(month, i18n.firstDayOfWeek, minDate, maxDate)',\n      },\n\n      _weeks: {\n        type: Array,\n        computed: '_getWeeks(_days)',\n      },\n\n      disabled: {\n        type: Boolean,\n        reflectToAttribute: true,\n        computed: '_isDisabled(month, minDate, maxDate)',\n      },\n    };\n  }\n\n  static get observers() {\n    return [\n      '_showWeekNumbersChanged(showWeekNumbers, i18n.firstDayOfWeek)',\n      '__focusedDateChanged(focusedDate, _days)',\n    ];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    addListener(this.$.monthGrid, 'tap', this._handleTap.bind(this));\n  }\n\n  get focusableDateElement() {\n    return [...this.shadowRoot.querySelectorAll('[part=date]')].find((datePart) => {\n      return dateEquals(datePart.date, this.focusedDate);\n    });\n  }\n\n  /* Returns true if all the dates in the month are out of the allowed range */\n  _isDisabled(month, minDate, maxDate) {\n    // First day of the month\n    const firstDate = new Date(0, 0);\n    firstDate.setFullYear(month.getFullYear());\n    firstDate.setMonth(month.getMonth());\n    firstDate.setDate(1);\n\n    // Last day of the month\n    const lastDate = new Date(0, 0);\n    lastDate.setFullYear(month.getFullYear());\n    lastDate.setMonth(month.getMonth() + 1);\n    lastDate.setDate(0);\n\n    if (\n      minDate &&\n      maxDate &&\n      minDate.getMonth() === maxDate.getMonth() &&\n      minDate.getMonth() === month.getMonth() &&\n      maxDate.getDate() - minDate.getDate() >= 0\n    ) {\n      return false;\n    }\n\n    return !dateAllowed(firstDate, minDate, maxDate) && !dateAllowed(lastDate, minDate, maxDate);\n  }\n\n  _getTitle(month, monthNames) {\n    if (month === undefined || monthNames === undefined) {\n      return;\n    }\n    return this.i18n.formatTitle(monthNames[month.getMonth()], month.getFullYear());\n  }\n\n  _onMonthGridTouchStart() {\n    this._notTapping = false;\n    setTimeout(() => {\n      this._notTapping = true;\n    }, 300);\n  }\n\n  _dateAdd(date, delta) {\n    date.setDate(date.getDate() + delta);\n  }\n\n  _applyFirstDayOfWeek(weekDayNames, firstDayOfWeek) {\n    if (weekDayNames === undefined || firstDayOfWeek === undefined) {\n      return;\n    }\n\n    return weekDayNames.slice(firstDayOfWeek).concat(weekDayNames.slice(0, firstDayOfWeek));\n  }\n\n  _getWeekDayNames(weekDayNames, weekDayNamesShort, showWeekNumbers, firstDayOfWeek) {\n    if (\n      weekDayNames === undefined ||\n      weekDayNamesShort === undefined ||\n      showWeekNumbers === undefined ||\n      firstDayOfWeek === undefined\n    ) {\n      return;\n    }\n    weekDayNames = this._applyFirstDayOfWeek(weekDayNames, firstDayOfWeek);\n    weekDayNamesShort = this._applyFirstDayOfWeek(weekDayNamesShort, firstDayOfWeek);\n    weekDayNames = weekDayNames.map((day, index) => {\n      return {\n        weekDay: day,\n        weekDayShort: weekDayNamesShort[index],\n      };\n    });\n\n    return weekDayNames;\n  }\n\n  __focusedDateChanged(focusedDate, days) {\n    if (days.some((date) => dateEquals(date, focusedDate))) {\n      this.removeAttribute('aria-hidden');\n    } else {\n      this.setAttribute('aria-hidden', 'true');\n    }\n  }\n\n  _getDate(date) {\n    return date ? date.getDate() : '';\n  }\n\n  _showWeekNumbersChanged(showWeekNumbers, firstDayOfWeek) {\n    if (showWeekNumbers && firstDayOfWeek === 1) {\n      this.setAttribute('week-numbers', '');\n    } else {\n      this.removeAttribute('week-numbers');\n    }\n  }\n\n  _showWeekSeparator(showWeekNumbers, firstDayOfWeek) {\n    // Currently only supported for locales that start the week on Monday.\n    return showWeekNumbers && firstDayOfWeek === 1;\n  }\n\n  _isToday(date) {\n    return dateEquals(new Date(), date);\n  }\n\n  _getDays(month, firstDayOfWeek) {\n    if (month === undefined || firstDayOfWeek === undefined) {\n      return;\n    }\n    // First day of the month (at midnight).\n    const date = new Date(0, 0);\n    date.setFullYear(month.getFullYear());\n    date.setMonth(month.getMonth());\n    date.setDate(1);\n\n    // Rewind to first day of the week.\n    while (date.getDay() !== firstDayOfWeek) {\n      this._dateAdd(date, -1);\n    }\n\n    const days = [];\n    const startMonth = date.getMonth();\n    const targetMonth = month.getMonth();\n    while (date.getMonth() === targetMonth || date.getMonth() === startMonth) {\n      days.push(date.getMonth() === targetMonth ? new Date(date.getTime()) : null);\n\n      // Advance to next day.\n      this._dateAdd(date, 1);\n    }\n    return days;\n  }\n\n  _getWeeks(days) {\n    return days.reduce((acc, day, i) => {\n      if (i % 7 === 0) {\n        acc.push([]);\n      }\n      acc[acc.length - 1].push(day);\n      return acc;\n    }, []);\n  }\n\n  _handleTap(e) {\n    if (!this.ignoreTaps && !this._notTapping && e.target.date && !e.target.hasAttribute('disabled')) {\n      this.selectedDate = e.target.date;\n      this.dispatchEvent(\n        new CustomEvent('date-tap', { detail: { date: e.target.date }, bubbles: true, composed: true }),\n      );\n    }\n  }\n\n  _preventDefault(e) {\n    e.preventDefault();\n  }\n\n  __getWeekNumber(days) {\n    const date = days.reduce((acc, d) => {\n      return !acc && d ? d : acc;\n    });\n\n    return getISOWeekNumber(date);\n  }\n\n  __isDayFocused(date, focusedDate) {\n    return dateEquals(date, focusedDate);\n  }\n\n  __isDaySelected(date, selectedDate) {\n    return dateEquals(date, selectedDate);\n  }\n\n  __getDayAriaSelected(date, selectedDate) {\n    if (this.__isDaySelected(date, selectedDate)) {\n      return 'true';\n    }\n  }\n\n  __isDayDisabled(date, minDate, maxDate) {\n    return !dateAllowed(date, minDate, maxDate);\n  }\n\n  __getDayAriaDisabled(date, min, max) {\n    if (date === undefined || min === undefined || max === undefined) {\n      return;\n    }\n\n    if (this.__isDayDisabled(date, min, max)) {\n      return 'true';\n    }\n  }\n\n  __getDayAriaLabel(date) {\n    if (!date) {\n      return '';\n    }\n\n    let ariaLabel = `${this._getDate(date)} ${this.i18n.monthNames[date.getMonth()]} ${date.getFullYear()}, ${\n      this.i18n.weekdays[date.getDay()]\n    }`;\n\n    if (this._isToday(date)) {\n      ariaLabel += `, ${this.i18n.today}`;\n    }\n\n    return ariaLabel;\n  }\n\n  __getDayTabindex(date, focusedDate) {\n    if (this.__isDayFocused(date, focusedDate)) {\n      return '0';\n    }\n\n    return '-1';\n  }\n}\n\ncustomElements.define(MonthCalendar.is, MonthCalendar);\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { isFirefox } from '@vaadin/component-base/src/browser-utils.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\n\n/**\n * @extends HTMLElement\n * @private\n */\nclass InfiniteScroller extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          overflow: hidden;\n          height: 500px;\n        }\n\n        #scroller {\n          position: relative;\n          height: 100%;\n          overflow: auto;\n          outline: none;\n          margin-right: -40px;\n          -webkit-overflow-scrolling: touch;\n          overflow-x: hidden;\n        }\n\n        #scroller.notouchscroll {\n          -webkit-overflow-scrolling: auto;\n        }\n\n        #scroller::-webkit-scrollbar {\n          display: none;\n        }\n\n        .buffer {\n          position: absolute;\n          width: var(--vaadin-infinite-scroller-buffer-width, 100%);\n          box-sizing: border-box;\n          padding-right: 40px;\n          top: var(--vaadin-infinite-scroller-buffer-offset, 0);\n          animation: fadein 0.2s;\n        }\n\n        @keyframes fadein {\n          from {\n            opacity: 0;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n      </style>\n\n      <div id=\"scroller\" on-scroll=\"_scroll\">\n        <div class=\"buffer\"></div>\n        <div class=\"buffer\"></div>\n        <div id=\"fullHeight\"></div>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-infinite-scroller';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Count of individual items in each buffer.\n       * The scroller has 2 buffers altogether so bufferSize of 20\n       * will result in 40 buffered DOM items in total.\n       * Changing after initialization not supported.\n       */\n      bufferSize: {\n        type: Number,\n        value: 20,\n      },\n\n      /**\n       * The amount of initial scroll top. Needed in order for the\n       * user to be able to scroll backwards.\n       * @private\n       */\n      _initialScroll: {\n        value: 500000,\n      },\n\n      /**\n       * The index/position mapped at _initialScroll point.\n       * @private\n       */\n      _initialIndex: {\n        value: 0,\n      },\n\n      /** @private */\n      _buffers: Array,\n\n      /** @private */\n      _preventScrollEvent: Boolean,\n\n      /** @private */\n      _mayHaveMomentum: Boolean,\n\n      /** @private */\n      _initialized: Boolean,\n\n      active: {\n        type: Boolean,\n        observer: '_activated',\n      },\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._buffers = [...this.shadowRoot.querySelectorAll('.buffer')];\n\n    this.$.fullHeight.style.height = `${this._initialScroll * 2}px`;\n\n    const tpl = this.querySelector('template');\n    this._TemplateClass = templatize(tpl, this, {\n      forwardHostProp(prop, value) {\n        if (prop !== 'index') {\n          this._buffers.forEach((buffer) => {\n            [...buffer.children].forEach((slot) => {\n              slot._itemWrapper.instance[prop] = value;\n            });\n          });\n        }\n      },\n    });\n\n    // Firefox interprets elements with overflow:auto as focusable\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1069739\n    if (isFirefox) {\n      this.$.scroller.tabIndex = -1;\n    }\n  }\n\n  /**\n   * Force the scroller to update clones after a reset, without\n   * waiting for the debouncer to resolve.\n   */\n  forceUpdate() {\n    if (this._debouncerUpdateClones) {\n      this._buffers[0].updated = this._buffers[1].updated = false;\n      this._updateClones();\n      this._debouncerUpdateClones.cancel();\n    }\n  }\n\n  /** @private */\n  _activated(active) {\n    if (active && !this._initialized) {\n      this._createPool();\n      this._initialized = true;\n    }\n  }\n\n  /** @private */\n  _finishInit() {\n    if (!this._initDone) {\n      // Once the first set of items start fading in, stamp the rest\n      this._buffers.forEach((buffer) => {\n        [...buffer.children].forEach((slot) => {\n          this._ensureStampedInstance(slot._itemWrapper);\n        });\n      });\n\n      if (!this._buffers[0].translateY) {\n        this._reset();\n      }\n\n      this._initDone = true;\n    }\n  }\n\n  /** @private */\n  _translateBuffer(up) {\n    const index = up ? 1 : 0;\n    this._buffers[index].translateY = this._buffers[index ? 0 : 1].translateY + this._bufferHeight * (index ? -1 : 1);\n    this._buffers[index].style.transform = `translate3d(0, ${this._buffers[index].translateY}px, 0)`;\n    this._buffers[index].updated = false;\n    this._buffers.reverse();\n  }\n\n  /** @private */\n  _scroll() {\n    if (this._scrollDisabled) {\n      return;\n    }\n\n    const scrollTop = this.$.scroller.scrollTop;\n    if (scrollTop < this._bufferHeight || scrollTop > this._initialScroll * 2 - this._bufferHeight) {\n      // Scrolled near the end/beginning of the scrollable area -> reset.\n      this._initialIndex = ~~this.position;\n      this._reset();\n    }\n\n    // Check if we scrolled enough to translate the buffer positions.\n    const offset = this.itemHeight + this.bufferOffset;\n    const upperThresholdReached = scrollTop > this._buffers[1].translateY + offset;\n    const lowerThresholdReached = scrollTop < this._buffers[0].translateY + offset;\n\n    if (upperThresholdReached || lowerThresholdReached) {\n      this._translateBuffer(lowerThresholdReached);\n      this._updateClones();\n    }\n\n    if (!this._preventScrollEvent) {\n      this.dispatchEvent(new CustomEvent('custom-scroll', { bubbles: false, composed: true }));\n      this._mayHaveMomentum = true;\n    }\n    this._preventScrollEvent = false;\n\n    this._debouncerScrollFinish = Debouncer.debounce(this._debouncerScrollFinish, timeOut.after(200), () => {\n      const scrollerRect = this.$.scroller.getBoundingClientRect();\n      if (!this._isVisible(this._buffers[0], scrollerRect) && !this._isVisible(this._buffers[1], scrollerRect)) {\n        this.position = this.position; // eslint-disable-line no-self-assign\n      }\n    });\n  }\n\n  /**\n   * @return {number}\n   */\n  get bufferOffset() {\n    return this._buffers[0].offsetTop;\n  }\n\n  /**\n   * @return {number}\n   */\n  get position() {\n    return (this.$.scroller.scrollTop - this._buffers[0].translateY) / this.itemHeight + this._firstIndex;\n  }\n\n  /**\n   * Current scroller position as index. Can be a fractional number.\n   *\n   * @type {number}\n   */\n  set position(index) {\n    this._preventScrollEvent = true;\n    if (index > this._firstIndex && index < this._firstIndex + this.bufferSize * 2) {\n      this.$.scroller.scrollTop = this.itemHeight * (index - this._firstIndex) + this._buffers[0].translateY;\n    } else {\n      this._initialIndex = ~~index;\n      this._reset();\n      this._scrollDisabled = true;\n      this.$.scroller.scrollTop += (index % 1) * this.itemHeight;\n      this._scrollDisabled = false;\n    }\n\n    if (this._mayHaveMomentum) {\n      // Stop the possible iOS Safari momentum with -webkit-overflow-scrolling: auto;\n      this.$.scroller.classList.add('notouchscroll');\n      this._mayHaveMomentum = false;\n\n      setTimeout(() => {\n        // Restore -webkit-overflow-scrolling: touch; after a small delay.\n        this.$.scroller.classList.remove('notouchscroll');\n      }, 10);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  get itemHeight() {\n    if (!this._itemHeightVal) {\n      const itemHeight = getComputedStyle(this).getPropertyValue('--vaadin-infinite-scroller-item-height');\n      // Use background-position temp inline style for unit conversion\n      const tmpStyleProp = 'background-position';\n      this.$.fullHeight.style.setProperty(tmpStyleProp, itemHeight);\n      const itemHeightPx = getComputedStyle(this.$.fullHeight).getPropertyValue(tmpStyleProp);\n      this.$.fullHeight.style.removeProperty(tmpStyleProp);\n      this._itemHeightVal = parseFloat(itemHeightPx);\n    }\n\n    return this._itemHeightVal;\n  }\n\n  /** @private */\n  get _bufferHeight() {\n    return this.itemHeight * this.bufferSize;\n  }\n\n  /** @private */\n  _reset() {\n    this._scrollDisabled = true;\n    this.$.scroller.scrollTop = this._initialScroll;\n    this._buffers[0].translateY = this._initialScroll - this._bufferHeight;\n    this._buffers[1].translateY = this._initialScroll;\n    this._buffers.forEach((buffer) => {\n      buffer.style.transform = `translate3d(0, ${buffer.translateY}px, 0)`;\n    });\n    this._buffers[0].updated = this._buffers[1].updated = false;\n    this._updateClones(true);\n\n    this._debouncerUpdateClones = Debouncer.debounce(this._debouncerUpdateClones, timeOut.after(200), () => {\n      this._buffers[0].updated = this._buffers[1].updated = false;\n      this._updateClones();\n    });\n\n    this._scrollDisabled = false;\n  }\n\n  /** @private */\n  _createPool() {\n    const container = this.getBoundingClientRect();\n    this._buffers.forEach((buffer) => {\n      for (let i = 0; i < this.bufferSize; i++) {\n        const itemWrapper = document.createElement('div');\n        itemWrapper.style.height = `${this.itemHeight}px`;\n        itemWrapper.instance = {};\n\n        const contentId = (InfiniteScroller._contentIndex = InfiniteScroller._contentIndex + 1 || 0);\n        const slotName = `vaadin-infinite-scroller-item-content-${contentId}`;\n\n        const slot = document.createElement('slot');\n        slot.setAttribute('name', slotName);\n        slot._itemWrapper = itemWrapper;\n        buffer.appendChild(slot);\n\n        itemWrapper.setAttribute('slot', slotName);\n        this.appendChild(itemWrapper);\n\n        setTimeout(() => {\n          // Only stamp the visible instances first\n          if (this._isVisible(itemWrapper, container)) {\n            this._ensureStampedInstance(itemWrapper);\n          }\n        }, 1); // Wait for first reset\n      }\n    });\n\n    setTimeout(() => {\n      afterNextRender(this, this._finishInit.bind(this));\n    }, 1);\n  }\n\n  /** @private */\n  _ensureStampedInstance(itemWrapper) {\n    if (itemWrapper.firstElementChild) {\n      return;\n    }\n\n    const tmpInstance = itemWrapper.instance;\n\n    itemWrapper.instance = new this._TemplateClass({});\n    itemWrapper.appendChild(itemWrapper.instance.root);\n\n    Object.keys(tmpInstance).forEach((prop) => {\n      itemWrapper.instance.set(prop, tmpInstance[prop]);\n    });\n  }\n\n  /** @private */\n  _updateClones(viewPortOnly) {\n    this._firstIndex = ~~((this._buffers[0].translateY - this._initialScroll) / this.itemHeight) + this._initialIndex;\n\n    const scrollerRect = viewPortOnly ? this.$.scroller.getBoundingClientRect() : undefined;\n    this._buffers.forEach((buffer, bufferIndex) => {\n      if (!buffer.updated) {\n        const firstIndex = this._firstIndex + this.bufferSize * bufferIndex;\n\n        [...buffer.children].forEach((slot, index) => {\n          const itemWrapper = slot._itemWrapper;\n          if (!viewPortOnly || this._isVisible(itemWrapper, scrollerRect)) {\n            itemWrapper.instance.index = firstIndex + index;\n          }\n        });\n        buffer.updated = true;\n      }\n    });\n  }\n\n  /** @private */\n  _isVisible(element, container) {\n    const rect = element.getBoundingClientRect();\n    return rect.bottom > container.top && rect.top < container.bottom;\n  }\n}\n\ncustomElements.define(InfiniteScroller.is, InfiniteScroller);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A controller for listening on media query changes.\n */\nexport class MediaQueryController {\n  constructor(query, callback) {\n    /**\n     * The CSS media query to evaluate.\n     *\n     * @type {string}\n     * @protected\n     */\n    this.query = query;\n\n    /**\n     * Function to call when media query changes.\n     *\n     * @type {Function}\n     * @protected\n     */\n    this.callback = callback;\n\n    this._boundQueryHandler = this._queryHandler.bind(this);\n  }\n\n  hostConnected() {\n    this._removeListener();\n\n    this._mediaQuery = window.matchMedia(this.query);\n\n    this._addListener();\n\n    this._queryHandler(this._mediaQuery);\n  }\n\n  hostDisconnected() {\n    this._removeListener();\n  }\n\n  /** @private */\n  _addListener() {\n    if (this._mediaQuery) {\n      this._mediaQuery.addListener(this._boundQueryHandler);\n    }\n  }\n\n  /** @private */\n  _removeListener() {\n    if (this._mediaQuery) {\n      this._mediaQuery.removeListener(this._boundQueryHandler);\n    }\n\n    this._mediaQuery = null;\n  }\n\n  /** @private */\n  _queryHandler(mediaQuery) {\n    if (typeof this.callback === 'function') {\n      this.callback(mediaQuery.matches);\n    }\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/button/src/vaadin-button.js';\nimport './vaadin-month-calendar.js';\nimport './vaadin-infinite-scroller.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { addListener, setTouchAction } from '@vaadin/component-base/src/gestures.js';\nimport { MediaQueryController } from '@vaadin/component-base/src/media-query-controller.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { dateEquals, extractDateParts, getClosestDate } from './vaadin-date-picker-helper.js';\n\n/**\n * @extends HTMLElement\n * @private\n */\nclass DatePickerOverlayContent extends ControllerMixin(ThemableMixin(DirMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          flex-direction: column;\n          height: 100%;\n          width: 100%;\n          outline: none;\n        }\n\n        [part='overlay-header'] {\n          display: flex;\n          flex-shrink: 0;\n          flex-wrap: nowrap;\n          align-items: center;\n        }\n\n        :host(:not([fullscreen])) [part='overlay-header'] {\n          display: none;\n        }\n\n        [part='label'] {\n          flex-grow: 1;\n        }\n\n        [hidden] {\n          display: none !important;\n        }\n\n        [part='years-toggle-button'] {\n          display: flex;\n        }\n\n        #scrollers {\n          display: flex;\n          height: 100%;\n          width: 100%;\n          position: relative;\n          overflow: hidden;\n        }\n\n        [part='months'],\n        [part='years'] {\n          height: 100%;\n        }\n\n        [part='months'] {\n          --vaadin-infinite-scroller-item-height: 270px;\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n        }\n\n        #scrollers[desktop] [part='months'] {\n          right: 50px;\n          transform: none !important;\n        }\n\n        [part='years'] {\n          --vaadin-infinite-scroller-item-height: 80px;\n          width: 50px;\n          position: absolute;\n          right: 0;\n          transform: translateX(100%);\n          -webkit-tap-highlight-color: transparent;\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          user-select: none;\n          /* Center the year scroller position. */\n          --vaadin-infinite-scroller-buffer-offset: 50%;\n        }\n\n        #scrollers[desktop] [part='years'] {\n          position: absolute;\n          transform: none !important;\n        }\n\n        [part='years']::before {\n          content: '';\n          display: block;\n          background: transparent;\n          width: 0;\n          height: 0;\n          position: absolute;\n          left: 0;\n          top: 50%;\n          transform: translateY(-50%);\n          border-width: 6px;\n          border-style: solid;\n          border-color: transparent;\n          border-left-color: #000;\n        }\n\n        :host(.animate) [part='months'],\n        :host(.animate) [part='years'] {\n          transition: all 200ms;\n        }\n\n        [part='toolbar'] {\n          display: flex;\n          justify-content: space-between;\n          z-index: 2;\n          flex-shrink: 0;\n        }\n      </style>\n\n      <div part=\"overlay-header\" on-touchend=\"_preventDefault\" desktop$=\"[[_desktopMode]]\" aria-hidden=\"true\">\n        <div part=\"label\">[[_formatDisplayed(selectedDate, i18n.formatDate, label)]]</div>\n        <div part=\"clear-button\" hidden$=\"[[!selectedDate]]\"></div>\n        <div part=\"toggle-button\"></div>\n\n        <div part=\"years-toggle-button\" hidden$=\"[[_desktopMode]]\" aria-hidden=\"true\">\n          [[_yearAfterXMonths(_visibleMonthIndex)]]\n        </div>\n      </div>\n\n      <div id=\"scrollers\" desktop$=\"[[_desktopMode]]\">\n        <vaadin-infinite-scroller\n          id=\"monthScroller\"\n          on-custom-scroll=\"_onMonthScroll\"\n          on-touchstart=\"_onMonthScrollTouchStart\"\n          buffer-size=\"3\"\n          active=\"[[initialPosition]]\"\n          part=\"months\"\n        >\n          <template>\n            <vaadin-month-calendar\n              i18n=\"[[i18n]]\"\n              month=\"[[_dateAfterXMonths(index)]]\"\n              selected-date=\"{{selectedDate}}\"\n              focused-date=\"[[focusedDate]]\"\n              ignore-taps=\"[[_ignoreTaps]]\"\n              show-week-numbers=\"[[showWeekNumbers]]\"\n              min-date=\"[[minDate]]\"\n              max-date=\"[[maxDate]]\"\n              part=\"month\"\n              theme$=\"[[_theme]]\"\n              on-keydown=\"__onMonthCalendarKeyDown\"\n            >\n            </vaadin-month-calendar>\n          </template>\n        </vaadin-infinite-scroller>\n        <vaadin-infinite-scroller\n          id=\"yearScroller\"\n          on-custom-scroll=\"_onYearScroll\"\n          on-touchstart=\"_onYearScrollTouchStart\"\n          buffer-size=\"12\"\n          active=\"[[initialPosition]]\"\n          part=\"years\"\n          aria-hidden=\"true\"\n        >\n          <template>\n            <div\n              part=\"year-number\"\n              current$=\"[[_isCurrentYear(index)]]\"\n              selected$=\"[[_isSelectedYear(index, selectedDate)]]\"\n            >\n              [[_yearAfterXYears(index)]]\n            </div>\n            <div part=\"year-separator\" aria-hidden=\"true\"></div>\n          </template>\n        </vaadin-infinite-scroller>\n      </div>\n\n      <div on-touchend=\"_preventDefault\" role=\"toolbar\" part=\"toolbar\">\n        <vaadin-button\n          id=\"todayButton\"\n          part=\"today-button\"\n          theme=\"tertiary\"\n          disabled=\"[[!_isTodayAllowed(minDate, maxDate)]]\"\n          on-keydown=\"__onTodayButtonKeyDown\"\n        >\n          [[i18n.today]]\n        </vaadin-button>\n        <vaadin-button id=\"cancelButton\" part=\"cancel-button\" theme=\"tertiary\" on-keydown=\"__onCancelButtonKeyDown\">\n          [[i18n.cancel]]\n        </vaadin-button>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-date-picker-overlay-content';\n  }\n\n  static get properties() {\n    return {\n      scrollDuration: {\n        type: Number,\n        value: 300,\n      },\n\n      /**\n       * The value for this element.\n       */\n      selectedDate: {\n        type: Date,\n        value: null,\n      },\n\n      /**\n       * Date value which is focused using keyboard.\n       */\n      focusedDate: {\n        type: Date,\n        notify: true,\n        observer: '_focusedDateChanged',\n      },\n\n      _focusedMonthDate: Number,\n\n      /**\n       * Date which should be visible when there is no value selected.\n       */\n      initialPosition: {\n        type: Date,\n        observer: '_initialPositionChanged',\n      },\n\n      _originDate: {\n        value: new Date(),\n      },\n\n      _visibleMonthIndex: Number,\n\n      _desktopMode: Boolean,\n\n      _desktopMediaQuery: {\n        type: String,\n        value: '(min-width: 375px)',\n      },\n\n      _translateX: {\n        observer: '_translateXChanged',\n      },\n\n      _yearScrollerWidth: {\n        value: 50,\n      },\n\n      i18n: {\n        type: Object,\n      },\n\n      showWeekNumbers: {\n        type: Boolean,\n      },\n\n      _ignoreTaps: Boolean,\n\n      _notTapping: Boolean,\n\n      /**\n       * The earliest date that can be selected. All earlier dates will be disabled.\n       */\n      minDate: Date,\n\n      /**\n       * The latest date that can be selected. All later dates will be disabled.\n       */\n      maxDate: Date,\n\n      /**\n       * Input label\n       */\n      label: String,\n    };\n  }\n\n  get __isRTL() {\n    return this.getAttribute('dir') === 'rtl';\n  }\n\n  /**\n   * Whether to scroll to a sub-month position when scrolling to a date.\n   * This is active if the month scroller is not large enough to fit a\n   * full month. In that case we want to scroll to a position between\n   * two months in order to have the focused date in the visible area.\n   * @returns {boolean} whether to use sub-month scrolling\n   * @private\n   */\n  get __useSubMonthScrolling() {\n    return this.$.monthScroller.clientHeight < this.$.monthScroller.itemHeight + this.$.monthScroller.bufferOffset;\n  }\n\n  get calendars() {\n    return [...this.shadowRoot.querySelectorAll('vaadin-month-calendar')];\n  }\n\n  get focusableDateElement() {\n    return this.calendars.map((calendar) => calendar.focusableDateElement).find(Boolean);\n  }\n\n  ready() {\n    super.ready();\n\n    this.setAttribute('role', 'dialog');\n\n    addListener(this.$.scrollers, 'track', this._track.bind(this));\n    addListener(this.shadowRoot.querySelector('[part=\"clear-button\"]'), 'tap', this._clear.bind(this));\n    addListener(this.shadowRoot.querySelector('[part=\"today-button\"]'), 'tap', this._onTodayTap.bind(this));\n    addListener(this.shadowRoot.querySelector('[part=\"cancel-button\"]'), 'tap', this._cancel.bind(this));\n    addListener(this.shadowRoot.querySelector('[part=\"toggle-button\"]'), 'tap', this._cancel.bind(this));\n    addListener(this.shadowRoot.querySelector('[part=\"years\"]'), 'tap', this._onYearTap.bind(this));\n    addListener(\n      this.shadowRoot.querySelector('[part=\"years-toggle-button\"]'),\n      'tap',\n      this._toggleYearScroller.bind(this),\n    );\n\n    this.addController(\n      new MediaQueryController(this._desktopMediaQuery, (matches) => {\n        this._desktopMode = matches;\n      }),\n    );\n  }\n\n  /**\n   * Fired when the scroller reaches the target scrolling position.\n   * @event scroll-animation-finished\n   * @param {Number} detail.position new position\n   * @param {Number} detail.oldPosition old position\n   */\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._closeYearScroller();\n    this._toggleAnimateClass(true);\n    setTouchAction(this.$.scrollers, 'pan-y');\n  }\n\n  /**\n   * Focuses the cancel button\n   */\n  focusCancel() {\n    this.$.cancelButton.focus();\n  }\n\n  /**\n   * Scrolls the list to the given Date.\n   */\n  scrollToDate(date, animate) {\n    const offset = this.__useSubMonthScrolling ? this._calculateWeekScrollOffset(date) : 0;\n    this._scrollToPosition(this._differenceInMonths(date, this._originDate) + offset, animate);\n    this.$.monthScroller.forceUpdate();\n  }\n\n  /**\n   * Select a date and fire event indicating user interaction.\n   * @protected\n   */\n  _selectDate(dateToSelect) {\n    this.selectedDate = dateToSelect;\n    this.dispatchEvent(\n      new CustomEvent('date-selected', { detail: { date: dateToSelect }, bubbles: true, composed: true }),\n    );\n  }\n\n  _focusedDateChanged(focusedDate) {\n    this.revealDate(focusedDate);\n  }\n\n  _isCurrentYear(yearsFromNow) {\n    return yearsFromNow === 0;\n  }\n\n  _isSelectedYear(yearsFromNow, selectedDate) {\n    if (selectedDate) {\n      return selectedDate.getFullYear() === this._originDate.getFullYear() + yearsFromNow;\n    }\n  }\n\n  /**\n   * Scrolls the month and year scrollers enough to reveal the given date.\n   */\n  revealDate(date, animate = true) {\n    if (!date) {\n      return;\n    }\n    const diff = this._differenceInMonths(date, this._originDate);\n    // If scroll area does not fit the full month, then always scroll with an offset to\n    // approximately display the week of the date\n    if (this.__useSubMonthScrolling) {\n      const offset = this._calculateWeekScrollOffset(date);\n      this._scrollToPosition(diff + offset, animate);\n      return;\n    }\n\n    // Otherwise determine if we need to scroll to make the month of the date visible\n    const scrolledAboveViewport = this.$.monthScroller.position > diff;\n\n    const visibleArea = Math.max(\n      this.$.monthScroller.itemHeight,\n      this.$.monthScroller.clientHeight - this.$.monthScroller.bufferOffset * 2,\n    );\n    const visibleItems = visibleArea / this.$.monthScroller.itemHeight;\n    const scrolledBelowViewport = this.$.monthScroller.position + visibleItems - 1 < diff;\n\n    if (scrolledAboveViewport) {\n      this._scrollToPosition(diff, animate);\n    } else if (scrolledBelowViewport) {\n      this._scrollToPosition(diff - visibleItems + 1, animate);\n    }\n  }\n\n  /**\n   * Calculates an offset to be added to the month scroll position\n   * when using sub-month scrolling, in order ensure that the week\n   * that the date is in is visible even for small scroll areas.\n   * As the month scroller uses a month as minimal scroll unit\n   * (a value of `1` equals one month), we can not exactly identify\n   * the position of a specific week. This is a best effort\n   * implementation based on manual testing.\n   * @param date the date for which to calculate the offset\n   * @returns {number} the offset\n   * @private\n   */\n  _calculateWeekScrollOffset(date) {\n    // Get first day of month\n    const temp = new Date(0, 0);\n    temp.setFullYear(date.getFullYear());\n    temp.setMonth(date.getMonth());\n    temp.setDate(1);\n    // Determine week (=row index) of date within the month\n    let week = 0;\n    while (temp.getDate() < date.getDate()) {\n      temp.setDate(temp.getDate() + 1);\n      if (temp.getDay() === this.i18n.firstDayOfWeek) {\n        week += 1;\n      }\n    }\n    // Calculate magic number that approximately keeps the week visible\n    return week / 6;\n  }\n\n  _initialPositionChanged(initialPosition) {\n    this.scrollToDate(initialPosition);\n  }\n\n  _repositionYearScroller() {\n    this._visibleMonthIndex = Math.floor(this.$.monthScroller.position);\n    this.$.yearScroller.position = (this.$.monthScroller.position + this._originDate.getMonth()) / 12;\n  }\n\n  _repositionMonthScroller() {\n    this.$.monthScroller.position = this.$.yearScroller.position * 12 - this._originDate.getMonth();\n    this._visibleMonthIndex = Math.floor(this.$.monthScroller.position);\n  }\n\n  _onMonthScroll() {\n    this._repositionYearScroller();\n    this._doIgnoreTaps();\n  }\n\n  _onYearScroll() {\n    this._repositionMonthScroller();\n    this._doIgnoreTaps();\n  }\n\n  _onYearScrollTouchStart() {\n    this._notTapping = false;\n    setTimeout(() => {\n      this._notTapping = true;\n    }, 300);\n\n    this._repositionMonthScroller();\n  }\n\n  _onMonthScrollTouchStart() {\n    this._repositionYearScroller();\n  }\n\n  _doIgnoreTaps() {\n    this._ignoreTaps = true;\n    this._debouncer = Debouncer.debounce(this._debouncer, timeOut.after(300), () => {\n      this._ignoreTaps = false;\n    });\n  }\n\n  _formatDisplayed(date, formatDate, label) {\n    if (date) {\n      return formatDate(extractDateParts(date));\n    }\n    return label;\n  }\n\n  _onTodayTap() {\n    const today = new Date();\n\n    if (Math.abs(this.$.monthScroller.position - this._differenceInMonths(today, this._originDate)) < 0.001) {\n      // Select today only if the month scroller is positioned approximately\n      // at the beginning of the current month\n      this._selectDate(today);\n      this._close();\n    } else {\n      this._scrollToCurrentMonth();\n    }\n  }\n\n  _scrollToCurrentMonth() {\n    if (this.focusedDate) {\n      this.focusedDate = new Date();\n    }\n\n    this.scrollToDate(new Date(), true);\n  }\n\n  _onYearTap(e) {\n    if (!this._ignoreTaps && !this._notTapping) {\n      const scrollDelta =\n        e.detail.y - (this.$.yearScroller.getBoundingClientRect().top + this.$.yearScroller.clientHeight / 2);\n      const yearDelta = scrollDelta / this.$.yearScroller.itemHeight;\n      this._scrollToPosition(this.$.monthScroller.position + yearDelta * 12, true);\n    }\n  }\n\n  _scrollToPosition(targetPosition, animate) {\n    if (this._targetPosition !== undefined) {\n      this._targetPosition = targetPosition;\n      return;\n    }\n\n    if (!animate) {\n      this.$.monthScroller.position = targetPosition;\n      this._targetPosition = undefined;\n      this._repositionYearScroller();\n      this.__tryFocusDate();\n      return;\n    }\n\n    this._targetPosition = targetPosition;\n\n    let revealResolve;\n    this._revealPromise = new Promise((resolve) => {\n      revealResolve = resolve;\n    });\n\n    // http://gizma.com/easing/\n    const easingFunction = (t, b, c, d) => {\n      t /= d / 2;\n      if (t < 1) {\n        return (c / 2) * t * t + b;\n      }\n      t -= 1;\n      return (-c / 2) * (t * (t - 2) - 1) + b;\n    };\n\n    let start = 0;\n    const initialPosition = this.$.monthScroller.position;\n\n    const smoothScroll = (timestamp) => {\n      start = start || timestamp;\n      const currentTime = timestamp - start;\n\n      if (currentTime < this.scrollDuration) {\n        const currentPos = easingFunction(\n          currentTime,\n          initialPosition,\n          this._targetPosition - initialPosition,\n          this.scrollDuration,\n        );\n        this.$.monthScroller.position = currentPos;\n        window.requestAnimationFrame(smoothScroll);\n      } else {\n        this.dispatchEvent(\n          new CustomEvent('scroll-animation-finished', {\n            bubbles: true,\n            composed: true,\n            detail: {\n              position: this._targetPosition,\n              oldPosition: initialPosition,\n            },\n          }),\n        );\n\n        this.$.monthScroller.position = this._targetPosition;\n        this._targetPosition = undefined;\n\n        revealResolve();\n        this._revealPromise = undefined;\n      }\n\n      setTimeout(this._repositionYearScroller.bind(this), 1);\n    };\n\n    // Start the animation.\n    window.requestAnimationFrame(smoothScroll);\n  }\n\n  _limit(value, range) {\n    return Math.min(range.max, Math.max(range.min, value));\n  }\n\n  _handleTrack(e) {\n    // Check if horizontal movement threshold (dx) not exceeded or\n    // scrolling fast vertically (ddy).\n    if (Math.abs(e.detail.dx) < 10 || Math.abs(e.detail.ddy) > 10) {\n      return;\n    }\n\n    // If we're flinging quickly -> start animating already.\n    if (Math.abs(e.detail.ddx) > this._yearScrollerWidth / 3) {\n      this._toggleAnimateClass(true);\n    }\n\n    const newTranslateX = this._translateX + e.detail.ddx;\n    this._translateX = this._limit(newTranslateX, {\n      min: 0,\n      max: this._yearScrollerWidth,\n    });\n  }\n\n  _track(e) {\n    if (this._desktopMode) {\n      // No need to track for swipe gestures on desktop.\n      return;\n    }\n\n    switch (e.detail.state) {\n      case 'start':\n        this._toggleAnimateClass(false);\n        break;\n      case 'track':\n        this._handleTrack(e);\n        break;\n      case 'end':\n        this._toggleAnimateClass(true);\n        if (this._translateX >= this._yearScrollerWidth / 2) {\n          this._closeYearScroller();\n        } else {\n          this._openYearScroller();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  _toggleAnimateClass(enable) {\n    if (enable) {\n      this.classList.add('animate');\n    } else {\n      this.classList.remove('animate');\n    }\n  }\n\n  _toggleYearScroller() {\n    if (this._isYearScrollerVisible()) {\n      this._closeYearScroller();\n    } else {\n      this._openYearScroller();\n    }\n  }\n\n  _openYearScroller() {\n    this._translateX = 0;\n    this.setAttribute('years-visible', '');\n  }\n\n  _closeYearScroller() {\n    this.removeAttribute('years-visible');\n    this._translateX = this._yearScrollerWidth;\n  }\n\n  _isYearScrollerVisible() {\n    return this._translateX < this._yearScrollerWidth / 2;\n  }\n\n  _translateXChanged(x) {\n    if (!this._desktopMode) {\n      this.$.monthScroller.style.transform = `translateX(${x - this._yearScrollerWidth}px)`;\n      this.$.yearScroller.style.transform = `translateX(${x}px)`;\n    }\n  }\n\n  _yearAfterXYears(index) {\n    const result = new Date(this._originDate);\n    result.setFullYear(parseInt(index) + this._originDate.getFullYear());\n    return result.getFullYear();\n  }\n\n  _yearAfterXMonths(months) {\n    return this._dateAfterXMonths(months).getFullYear();\n  }\n\n  _dateAfterXMonths(months) {\n    const result = new Date(this._originDate);\n    result.setDate(1);\n    result.setMonth(parseInt(months) + this._originDate.getMonth());\n    return result;\n  }\n\n  _differenceInMonths(date1, date2) {\n    const months = (date1.getFullYear() - date2.getFullYear()) * 12;\n    return months - date2.getMonth() + date1.getMonth();\n  }\n\n  _clear() {\n    this._selectDate('');\n  }\n\n  _close() {\n    this.dispatchEvent(new CustomEvent('close', { bubbles: true, composed: true }));\n  }\n\n  _cancel() {\n    this.focusedDate = this.selectedDate;\n    this._close();\n  }\n\n  _preventDefault(e) {\n    e.preventDefault();\n  }\n\n  __toggleDate(date) {\n    if (dateEquals(date, this.selectedDate)) {\n      this._clear();\n      this.focusedDate = date;\n    } else {\n      this._selectDate(date);\n    }\n  }\n\n  __onMonthCalendarKeyDown(event) {\n    let handled = false;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        this._moveFocusByDays(7);\n        handled = true;\n        break;\n      case 'ArrowUp':\n        this._moveFocusByDays(-7);\n        handled = true;\n        break;\n      case 'ArrowRight':\n        this._moveFocusByDays(this.__isRTL ? -1 : 1);\n        handled = true;\n        break;\n      case 'ArrowLeft':\n        this._moveFocusByDays(this.__isRTL ? 1 : -1);\n        handled = true;\n        break;\n      case 'Enter':\n        this._selectDate(this.focusedDate);\n        this._close();\n        handled = true;\n        break;\n      case ' ':\n        this.__toggleDate(this.focusedDate);\n        handled = true;\n        break;\n      case 'Home':\n        this._moveFocusInsideMonth(this.focusedDate, 'minDate');\n        handled = true;\n        break;\n      case 'End':\n        this._moveFocusInsideMonth(this.focusedDate, 'maxDate');\n        handled = true;\n        break;\n      case 'PageDown':\n        this._moveFocusByMonths(event.shiftKey ? 12 : 1);\n        handled = true;\n        break;\n      case 'PageUp':\n        this._moveFocusByMonths(event.shiftKey ? -12 : -1);\n        handled = true;\n        break;\n      case 'Tab':\n        this._onTabKeyDown(event, 'calendar');\n        break;\n      default:\n        break;\n    }\n\n    if (handled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  _onTabKeyDown(event, section) {\n    // Stop propagation to avoid focus-trap\n    // listener when used in a modal dialog.\n    event.stopPropagation();\n\n    switch (section) {\n      case 'calendar':\n        if (event.shiftKey) {\n          event.preventDefault();\n\n          if (this.hasAttribute('fullscreen')) {\n            // Trap focus in the overlay\n            this.$.cancelButton.focus();\n          } else {\n            this.__focusInput();\n          }\n        }\n        break;\n      case 'today':\n        if (event.shiftKey) {\n          event.preventDefault();\n          this.focusDateElement();\n        }\n        break;\n      case 'cancel':\n        if (!event.shiftKey) {\n          event.preventDefault();\n\n          if (this.hasAttribute('fullscreen')) {\n            // Trap focus in the overlay\n            this.focusDateElement();\n          } else {\n            this.__focusInput();\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  __onTodayButtonKeyDown(event) {\n    if (event.key === 'Tab') {\n      this._onTabKeyDown(event, 'today');\n    }\n  }\n\n  __onCancelButtonKeyDown(event) {\n    if (event.key === 'Tab') {\n      this._onTabKeyDown(event, 'cancel');\n    }\n  }\n\n  __focusInput() {\n    this.dispatchEvent(new CustomEvent('focus-input', { bubbles: true, composed: true }));\n  }\n\n  __tryFocusDate() {\n    const dateToFocus = this.__pendingDateFocus;\n    if (dateToFocus) {\n      // Check the date element with tabindex=\"0\"\n      const dateElement = this.focusableDateElement;\n\n      if (dateElement && dateEquals(dateElement.date, this.__pendingDateFocus)) {\n        delete this.__pendingDateFocus;\n        dateElement.focus();\n      }\n    }\n  }\n\n  async focusDate(date, keepMonth) {\n    const dateToFocus = date || this.selectedDate || this.initialPosition || new Date();\n    this.focusedDate = dateToFocus;\n    if (!keepMonth) {\n      this._focusedMonthDate = dateToFocus.getDate();\n    }\n    await this.focusDateElement(false);\n  }\n\n  async focusDateElement(reveal = true) {\n    this.__pendingDateFocus = this.focusedDate;\n\n    // Wait for `vaadin-month-calendar` elements to be rendered\n    if (!this.calendars.length) {\n      await new Promise((resolve) => {\n        setTimeout(resolve);\n      });\n    }\n\n    // Reveal focused date unless it has been just set,\n    // which triggers `revealDate()` in the observer.\n    if (reveal) {\n      this.revealDate(this.focusedDate);\n    }\n\n    if (this._revealPromise) {\n      // Wait for focused date to be scrolled into view.\n      await this._revealPromise;\n    }\n\n    this.__tryFocusDate();\n  }\n\n  _focusClosestDate(focus) {\n    this.focusDate(getClosestDate(focus, [this.minDate, this.maxDate]));\n  }\n\n  _moveFocusByDays(days) {\n    const focus = this.focusedDate;\n    const dateToFocus = new Date(0, 0);\n    dateToFocus.setFullYear(focus.getFullYear());\n    dateToFocus.setMonth(focus.getMonth());\n    dateToFocus.setDate(focus.getDate() + days);\n\n    if (this._dateAllowed(dateToFocus, this.minDate, this.maxDate)) {\n      this.focusDate(dateToFocus);\n    } else if (this._dateAllowed(focus, this.minDate, this.maxDate)) {\n      // Move to min or max date\n      if (days > 0) {\n        // Down or right\n        this.focusDate(this.maxDate);\n      } else {\n        // Up or left\n        this.focusDate(this.minDate);\n      }\n    } else {\n      // Move to closest allowed date\n      this._focusClosestDate(focus);\n    }\n  }\n\n  _moveFocusByMonths(months) {\n    const focus = this.focusedDate;\n    const dateToFocus = new Date(0, 0);\n    dateToFocus.setFullYear(focus.getFullYear());\n    dateToFocus.setMonth(focus.getMonth() + months);\n\n    const targetMonth = dateToFocus.getMonth();\n\n    dateToFocus.setDate(this._focusedMonthDate || (this._focusedMonthDate = focus.getDate()));\n    if (dateToFocus.getMonth() !== targetMonth) {\n      dateToFocus.setDate(0);\n    }\n\n    if (this._dateAllowed(dateToFocus, this.minDate, this.maxDate)) {\n      this.focusDate(dateToFocus, true);\n    } else if (this._dateAllowed(focus, this.minDate, this.maxDate)) {\n      // Move to min or max date\n      if (months > 0) {\n        // Pagedown\n        this.focusDate(this.maxDate);\n      } else {\n        // Pageup\n        this.focusDate(this.minDate);\n      }\n    } else {\n      // Move to closest allowed date\n      this._focusClosestDate(focus);\n    }\n  }\n\n  _moveFocusInsideMonth(focusedDate, property) {\n    const dateToFocus = new Date(0, 0);\n    dateToFocus.setFullYear(focusedDate.getFullYear());\n\n    if (property === 'minDate') {\n      dateToFocus.setMonth(focusedDate.getMonth());\n      dateToFocus.setDate(1);\n    } else {\n      dateToFocus.setMonth(focusedDate.getMonth() + 1);\n      dateToFocus.setDate(0);\n    }\n\n    if (this._dateAllowed(dateToFocus, this.minDate, this.maxDate)) {\n      this.focusDate(dateToFocus);\n    } else if (this._dateAllowed(focusedDate, this.minDate, this.maxDate)) {\n      // Move to minDate or maxDate\n      this.focusDate(this[property]);\n    } else {\n      // Move to closest allowed date\n      this._focusClosestDate(focusedDate);\n    }\n  }\n\n  _dateAllowed(date, min, max) {\n    return (!min || date >= min) && (!max || date <= max);\n  }\n\n  _isTodayAllowed(min, max) {\n    const today = new Date();\n    const todayMidnight = new Date(0, 0);\n    todayMidnight.setFullYear(today.getFullYear());\n    todayMidnight.setMonth(today.getMonth());\n    todayMidnight.setDate(today.getDate());\n    return this._dateAllowed(todayMidnight, min, max);\n  }\n}\n\ncustomElements.define(DatePickerOverlayContent.is, DatePickerOverlayContent);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { FocusMixin } from '@vaadin/component-base/src/focus-mixin.js';\nimport { TabindexMixin } from '@vaadin/component-base/src/tabindex-mixin.js';\n\n/**\n * A mixin to forward focus to an element in the light DOM.\n *\n * @polymerMixin\n * @mixes FocusMixin\n * @mixes TabindexMixin\n */\nexport const DelegateFocusMixin = dedupingMixin(\n  (superclass) =>\n    class DelegateFocusMixinClass extends FocusMixin(TabindexMixin(superclass)) {\n      static get properties() {\n        return {\n          /**\n           * Specify that this control should have input focus when the page loads.\n           */\n          autofocus: {\n            type: Boolean,\n          },\n\n          /**\n           * A reference to the focusable element controlled by the mixin.\n           * It can be an input, textarea, button or any element with tabindex > -1.\n           *\n           * Any component implementing this mixin is expected to provide it\n           * by using `this._setFocusElement(input)` Polymer API.\n           *\n           * Toggling `tabindex` attribute on the host element propagates its value to `focusElement`.\n           *\n           * @protected\n           * @type {!HTMLElement}\n           */\n          focusElement: {\n            type: Object,\n            readOnly: true,\n            observer: '_focusElementChanged',\n          },\n\n          /**\n           * Override the property from `TabIndexMixin`\n           * to ensure the `tabindex` attribute of the focus element\n           * will be restored to `0` after re-enabling the element.\n           *\n           * @protected\n           * @override\n           */\n          _lastTabIndex: {\n            value: 0,\n          },\n        };\n      }\n\n      constructor() {\n        super();\n\n        this._boundOnBlur = this._onBlur.bind(this);\n        this._boundOnFocus = this._onFocus.bind(this);\n      }\n\n      /** @protected */\n      ready() {\n        super.ready();\n\n        if (this.autofocus && !this.disabled) {\n          requestAnimationFrame(() => {\n            this.focus();\n            this.setAttribute('focus-ring', '');\n          });\n        }\n      }\n\n      /**\n       * @protected\n       * @override\n       */\n      focus() {\n        if (!this.focusElement || this.disabled) {\n          return;\n        }\n\n        this.focusElement.focus();\n        this._setFocused(true);\n      }\n\n      /**\n       * @protected\n       * @override\n       */\n      blur() {\n        if (!this.focusElement) {\n          return;\n        }\n        this.focusElement.blur();\n        this._setFocused(false);\n      }\n\n      /**\n       * @protected\n       * @override\n       */\n      click() {\n        if (this.focusElement && !this.disabled) {\n          this.focusElement.click();\n        }\n      }\n\n      /** @protected */\n      _focusElementChanged(element, oldElement) {\n        if (element) {\n          element.disabled = this.disabled;\n          this._addFocusListeners(element);\n          this.__forwardTabIndex(this.tabindex);\n        } else if (oldElement) {\n          this._removeFocusListeners(oldElement);\n        }\n      }\n\n      /**\n       * @param {HTMLElement} element\n       * @protected\n       */\n      _addFocusListeners(element) {\n        element.addEventListener('blur', this._boundOnBlur);\n        element.addEventListener('focus', this._boundOnFocus);\n      }\n\n      /**\n       * @param {HTMLElement} element\n       * @protected\n       */\n      _removeFocusListeners(element) {\n        element.removeEventListener('blur', this._boundOnBlur);\n        element.removeEventListener('focus', this._boundOnFocus);\n      }\n\n      /**\n       * Focus event does not bubble, so we dispatch it manually\n       * on the host element to support adding focus listeners\n       * when the focusable element is placed in light DOM.\n       * @param {FocusEvent} event\n       * @protected\n       */\n      _onFocus(event) {\n        event.stopPropagation();\n        this.dispatchEvent(new Event('focus'));\n      }\n\n      /**\n       * Blur event does not bubble, so we dispatch it manually\n       * on the host element to support adding blur listeners\n       * when the focusable element is placed in light DOM.\n       * @param {FocusEvent} event\n       * @protected\n       */\n      _onBlur(event) {\n        event.stopPropagation();\n        this.dispatchEvent(new Event('blur'));\n      }\n\n      /**\n       * @param {Event} event\n       * @return {boolean}\n       * @protected\n       * @override\n       */\n      _shouldSetFocus(event) {\n        return event.target === this.focusElement;\n      }\n\n      /**\n       * @param {boolean} disabled\n       * @param {boolean} oldDisabled\n       * @protected\n       * @override\n       */\n      _disabledChanged(disabled, oldDisabled) {\n        super._disabledChanged(disabled, oldDisabled);\n\n        if (this.focusElement) {\n          this.focusElement.disabled = disabled;\n        }\n\n        if (disabled) {\n          this.blur();\n        }\n      }\n\n      /**\n       * Override an observer from `TabindexMixin`.\n       * Do not call super to remove tabindex attribute\n       * from the host after it has been forwarded.\n       * @param {string} tabindex\n       * @protected\n       * @override\n       */\n      _tabindexChanged(tabindex) {\n        this.__forwardTabIndex(tabindex);\n      }\n\n      /** @private */\n      __forwardTabIndex(tabindex) {\n        if (tabindex !== undefined && this.focusElement) {\n          this.focusElement.tabIndex = tabindex;\n\n          // Preserve tabindex=\"-1\" on the host element\n          if (tabindex !== -1) {\n            this.tabindex = undefined;\n          }\n        }\n\n        if (this.disabled && tabindex) {\n          // If tabindex attribute was changed while component was disabled\n          if (tabindex !== -1) {\n            this._lastTabIndex = tabindex;\n          }\n          this.tabindex = undefined;\n        }\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\n\n/**\n * A controller that manages the error message node content.\n */\nexport class ErrorController extends SlotController {\n  constructor(host) {\n    super(\n      host,\n      'error-message',\n      () => document.createElement('div'),\n      (_host, node) => {\n        this.__updateErrorId(node);\n\n        this.__updateHasError();\n      },\n      true,\n    );\n  }\n\n  /**\n   * ID attribute value set on the error message element.\n   *\n   * @return {string}\n   */\n  get errorId() {\n    return this.node && this.node.id;\n  }\n\n  /**\n   * Set the error message element text content.\n   *\n   * @param {string} errorMessage\n   */\n  setErrorMessage(errorMessage) {\n    this.errorMessage = errorMessage;\n\n    this.__updateHasError();\n  }\n\n  /**\n   * Set invalid state for detecting whether to show error message.\n   *\n   * @param {boolean} invalid\n   */\n  setInvalid(invalid) {\n    this.invalid = invalid;\n\n    this.__updateHasError();\n  }\n\n  /**\n   * Override to initialize the newly added custom error message.\n   *\n   * @param {Node} errorNode\n   * @protected\n   * @override\n   */\n  initCustomNode(errorNode) {\n    this.__updateErrorId(errorNode);\n\n    // Save the custom error message content on the host.\n    if (errorNode.textContent && !this.errorMessage) {\n      this.errorMessage = errorNode.textContent.trim();\n    }\n\n    this.__updateHasError();\n  }\n\n  /**\n   * Override to cleanup error message node when it's removed.\n   *\n   * @param {Node} node\n   * @protected\n   * @override\n   */\n  teardownNode(node) {\n    let errorNode = this.getSlotChild();\n\n    // If custom error was removed, restore the default one.\n    if (!errorNode && node !== this.defaultNode) {\n      errorNode = this.attachDefaultNode();\n\n      // Run initializer to update default error message ID.\n      this.initNode(errorNode);\n    }\n\n    this.__updateHasError();\n  }\n\n  /**\n   * @param {string} error\n   * @private\n   */\n  __isNotEmpty(error) {\n    return Boolean(error && error.trim() !== '');\n  }\n\n  /** @private */\n  __updateHasError() {\n    const errorNode = this.node;\n    const hasError = Boolean(this.invalid && this.__isNotEmpty(this.errorMessage));\n\n    // Update both default and custom error message node.\n    if (errorNode) {\n      errorNode.textContent = hasError ? this.errorMessage : '';\n      errorNode.hidden = !hasError;\n\n      // Role alert will make the error message announce immediately\n      // as the field becomes invalid\n      if (hasError) {\n        errorNode.setAttribute('role', 'alert');\n      } else {\n        errorNode.removeAttribute('role');\n      }\n    }\n\n    this.host.toggleAttribute('has-error-message', hasError);\n  }\n\n  /**\n   * @param {HTMLElement} errorNode\n   * @private\n   */\n  __updateErrorId(errorNode) {\n    if (!errorNode.id) {\n      errorNode.id = this.defaultId;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { addValueToAttribute, removeValueFromAttribute } from '@vaadin/component-base/src/dom-utils.js';\n\n/**\n * A controller for managing ARIA attributes for a field element:\n * either the component itself or slotted `<input>` element.\n */\nexport class FieldAriaController {\n  constructor(host) {\n    this.host = host;\n    this.__required = false;\n  }\n\n  /**\n   * Sets a target element to which ARIA attributes are added.\n   *\n   * @param {HTMLElement} target\n   */\n  setTarget(target) {\n    this.__target = target;\n    this.__setAriaRequiredAttribute(this.__required);\n    this.__setLabelIdToAriaAttribute(this.__labelId);\n    this.__setErrorIdToAriaAttribute(this.__errorId);\n    this.__setHelperIdToAriaAttribute(this.__helperId);\n  }\n\n  /**\n   * Toggles the `aria-required` attribute on the target element\n   * if the target is the host component (e.g. a field group).\n   * Otherwise, it does nothing.\n   *\n   * @param {boolean} required\n   */\n  setRequired(required) {\n    this.__setAriaRequiredAttribute(required);\n    this.__required = required;\n  }\n\n  /**\n   * Links the target element with a slotted label element\n   * via the target's attribute `aria-labelledby`.\n   *\n   * To unlink the previous slotted label element, pass `null` as `labelId`.\n   *\n   * @param {string | null} labelId\n   */\n  setLabelId(labelId) {\n    this.__setLabelIdToAriaAttribute(labelId, this.__labelId);\n    this.__labelId = labelId;\n  }\n\n  /**\n   * Links the target element with a slotted error element via the target's attribute:\n   * - `aria-labelledby` if the target is the host component (e.g a field group).\n   * - `aria-describedby` otherwise.\n   *\n   * To unlink the previous slotted error element, pass `null` as `errorId`.\n   *\n   * @param {string | null} errorId\n   */\n  setErrorId(errorId) {\n    this.__setErrorIdToAriaAttribute(errorId, this.__errorId);\n    this.__errorId = errorId;\n  }\n\n  /**\n   * Links the target element with a slotted helper element via the target's attribute:\n   * - `aria-labelledby` if the target is the host component (e.g a field group).\n   * - `aria-describedby` otherwise.\n   *\n   * To unlink the previous slotted helper element, pass `null` as `helperId`.\n   *\n   * @param {string | null} helperId\n   */\n  setHelperId(helperId) {\n    this.__setHelperIdToAriaAttribute(helperId, this.__helperId);\n    this.__helperId = helperId;\n  }\n\n  /**\n   * `true` if the target element is the host component itself, `false` otherwise.\n   *\n   * @return {boolean}\n   * @private\n   */\n  get __isGroupField() {\n    return this.__target === this.host;\n  }\n\n  /**\n   * @param {string | null | undefined} labelId\n   * @param {string | null | undefined} oldLabelId\n   * @private\n   */\n  __setLabelIdToAriaAttribute(labelId, oldLabelId) {\n    this.__setAriaAttributeId('aria-labelledby', labelId, oldLabelId);\n  }\n\n  /**\n   * @param {string | null | undefined} errorId\n   * @param {string | null | undefined} oldErrorId\n   * @private\n   */\n  __setErrorIdToAriaAttribute(errorId, oldErrorId) {\n    // For groups, add all IDs to aria-labelledby rather than aria-describedby -\n    // that should guarantee that it's announced when the group is entered.\n    if (this.__isGroupField) {\n      this.__setAriaAttributeId('aria-labelledby', errorId, oldErrorId);\n    } else {\n      this.__setAriaAttributeId('aria-describedby', errorId, oldErrorId);\n    }\n  }\n\n  /**\n   * @param {string | null | undefined} helperId\n   * @param {string | null | undefined} oldHelperId\n   * @private\n   */\n  __setHelperIdToAriaAttribute(helperId, oldHelperId) {\n    // For groups, add all IDs to aria-labelledby rather than aria-describedby -\n    // that should guarantee that it's announced when the group is entered.\n    if (this.__isGroupField) {\n      this.__setAriaAttributeId('aria-labelledby', helperId, oldHelperId);\n    } else {\n      this.__setAriaAttributeId('aria-describedby', helperId, oldHelperId);\n    }\n  }\n\n  /**\n   * @param {boolean} required\n   * @private\n   */\n  __setAriaRequiredAttribute(required) {\n    if (!this.__target) {\n      return;\n    }\n\n    if (['input', 'textarea'].includes(this.__target.localName)) {\n      // Native <input> or <textarea>, required is enough\n      return;\n    }\n\n    if (required) {\n      this.__target.setAttribute('aria-required', 'true');\n    } else {\n      this.__target.removeAttribute('aria-required');\n    }\n  }\n\n  /**\n   * @param {string | null | undefined} newId\n   * @param {string | null | undefined} oldId\n   * @private\n   */\n  __setAriaAttributeId(attr, newId, oldId) {\n    if (!this.__target) {\n      return;\n    }\n\n    if (oldId) {\n      removeValueFromAttribute(this.__target, attr, oldId);\n    }\n\n    if (newId) {\n      addValueToAttribute(this.__target, attr, newId);\n    }\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\n\n/**\n * A controller that manages the helper node content.\n */\nexport class HelperController extends SlotController {\n  constructor(host) {\n    // Do not provide slot factory, as only create helper lazily.\n    super(host, 'helper', null, null, true);\n  }\n\n  get helperId() {\n    return this.node && this.node.id;\n  }\n\n  /**\n   * Override to initialize the newly added custom helper.\n   *\n   * @param {Node} helperNode\n   * @protected\n   * @override\n   */\n  initCustomNode(helperNode) {\n    this.__updateHelperId(helperNode);\n\n    this.__observeHelper(helperNode);\n\n    const hasHelper = this.__hasHelper(helperNode);\n    this.__toggleHasHelper(hasHelper);\n  }\n\n  /**\n   * Override to cleanup helper node when it's removed.\n   *\n   * @param {Node} _node\n   * @protected\n   * @override\n   */\n  teardownNode(_node) {\n    // The observer does not exist when the default helper is removed.\n    if (this.__helperIdObserver) {\n      this.__helperIdObserver.disconnect();\n    }\n\n    const helperNode = this.getSlotChild();\n\n    // Custom node is added to helper slot\n    if (helperNode && helperNode !== this.defaultNode) {\n      const hasHelper = this.__hasHelper(helperNode);\n      this.__toggleHasHelper(hasHelper);\n    } else {\n      // Restore default helper if needed\n      this.__applyDefaultHelper(this.helperText, helperNode);\n    }\n  }\n\n  /**\n   * Set helper text based on corresponding host property.\n   * @param {string} helperText\n   */\n  setHelperText(helperText) {\n    this.helperText = helperText;\n\n    const helperNode = this.getSlotChild();\n    if (!helperNode || helperNode === this.defaultNode) {\n      this.__applyDefaultHelper(helperText, helperNode);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} helperNode\n   * @return {boolean}\n   * @private\n   */\n  __hasHelper(helperNode) {\n    if (!helperNode) {\n      return false;\n    }\n\n    return (\n      helperNode.children.length > 0 ||\n      (helperNode.nodeType === Node.ELEMENT_NODE && customElements.get(helperNode.localName)) ||\n      this.__isNotEmpty(helperNode.textContent)\n    );\n  }\n\n  /**\n   * @param {string} helperText\n   * @private\n   */\n  __isNotEmpty(helperText) {\n    return helperText && helperText.trim() !== '';\n  }\n\n  /**\n   * @param {string} helperText\n   * @param {Node} helperNode\n   * @private\n   */\n  __applyDefaultHelper(helperText, helperNode) {\n    const hasHelperText = this.__isNotEmpty(helperText);\n\n    if (hasHelperText && !helperNode) {\n      // Set slot factory lazily to only create helper node when needed.\n      this.slotFactory = () => document.createElement('div');\n\n      helperNode = this.attachDefaultNode();\n\n      this.__updateHelperId(helperNode);\n      this.__observeHelper(helperNode);\n    }\n\n    if (helperNode) {\n      helperNode.textContent = helperText;\n    }\n\n    this.__toggleHasHelper(hasHelperText);\n  }\n\n  /**\n   * @param {HTMLElement} helperNode\n   * @private\n   */\n  __observeHelper(helperNode) {\n    this.__helperObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        const target = mutation.target;\n\n        // Ensure the mutation target is the currently connected helper\n        // to ignore async mutations dispatched for removed element.\n        const isHelperMutation = target === this.node;\n\n        if (mutation.type === 'attributes') {\n          // We use attributeFilter to only observe ID mutation,\n          // no need to check for attribute name separately.\n          if (isHelperMutation && target.id !== this.defaultId) {\n            this.__updateHelperId(target);\n          }\n        } else if (isHelperMutation || target.parentElement === this.node) {\n          // Update has-helper when textContent changes\n          const hasHelper = this.__hasHelper(this.node);\n          this.__toggleHasHelper(hasHelper);\n        }\n      });\n    });\n\n    // Observe changes to helper ID attribute, text content and children.\n    this.__helperObserver.observe(helperNode, {\n      attributes: true,\n      attributeFilter: ['id'],\n      childList: true,\n      subtree: true,\n      characterData: true,\n    });\n  }\n\n  /**\n   * @param {boolean} hasHelper\n   * @private\n   */\n  __toggleHasHelper(hasHelper) {\n    this.host.toggleAttribute('has-helper', hasHelper);\n\n    // Make it possible for other mixins to observe change\n    this.dispatchEvent(\n      new CustomEvent('helper-changed', {\n        detail: {\n          hasHelper,\n          node: this.node,\n        },\n      }),\n    );\n  }\n\n  /**\n   * @param {HTMLElement} helperNode\n   * @private\n   */\n  __updateHelperId(helperNode) {\n    if (!helperNode.id) {\n      helperNode.id = this.defaultId;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\n\n/**\n * A controller to manage the label element.\n */\nexport class LabelController extends SlotController {\n  constructor(host) {\n    super(\n      host,\n      'label',\n      () => document.createElement('label'),\n      (_host, node) => {\n        // Set ID attribute or use the existing one.\n        this.__updateLabelId(node);\n\n        // Set text content for the default label.\n        this.__updateDefaultLabel(this.label);\n\n        this.__observeLabel(node);\n      },\n      true,\n    );\n  }\n\n  /**\n   * @return {string}\n   */\n  get labelId() {\n    return this.node.id;\n  }\n\n  /**\n   * Override to initialize the newly added custom label.\n   *\n   * @param {Node} labelNode\n   * @protected\n   * @override\n   */\n  initCustomNode(labelNode) {\n    this.__updateLabelId(labelNode);\n\n    const hasLabel = this.__hasLabel(labelNode);\n    this.__toggleHasLabel(hasLabel);\n  }\n\n  /**\n   * Override to cleanup label node when it's removed.\n   *\n   * @param {Node} node\n   * @protected\n   * @override\n   */\n  teardownNode(node) {\n    if (this.__labelObserver) {\n      this.__labelObserver.disconnect();\n    }\n\n    let labelNode = this.getSlotChild();\n\n    // If custom label was removed, restore the default one.\n    if (!labelNode && node !== this.defaultNode) {\n      labelNode = this.attachDefaultNode();\n\n      // Run initializer to update default label and ID.\n      this.initNode(labelNode);\n    }\n\n    const hasLabel = this.__hasLabel(labelNode);\n    this.__toggleHasLabel(hasLabel);\n  }\n\n  /**\n   * Set label based on corresponding host property.\n   *\n   * @param {string} label\n   */\n  setLabel(label) {\n    this.label = label;\n\n    this.__updateDefaultLabel(label);\n  }\n\n  /**\n   * @param {HTMLElement} labelNode\n   * @return {boolean}\n   * @private\n   */\n  __hasLabel(labelNode) {\n    if (!labelNode) {\n      return false;\n    }\n\n    return labelNode.children.length > 0 || this.__isNotEmpty(labelNode.textContent);\n  }\n\n  /**\n   * @param {string} label\n   * @private\n   */\n  __isNotEmpty(label) {\n    return Boolean(label && label.trim() !== '');\n  }\n\n  /**\n   * @param {HTMLElement} labelNode\n   * @private\n   */\n  __observeLabel(labelNode) {\n    this.__labelObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        const target = mutation.target;\n\n        // Ensure the mutation target is the currently connected label\n        // to ignore async mutations dispatched for removed element.\n        const isLabelMutation = target === this.node;\n\n        if (mutation.type === 'attributes') {\n          // We use attributeFilter to only observe ID mutation,\n          // no need to check for attribute name separately.\n          if (isLabelMutation && target.id !== this.defaultId) {\n            this.__updateLabelId(target);\n          }\n        } else if (isLabelMutation || target.parentElement === this.node) {\n          // Update has-label when textContent changes\n          const hasLabel = this.__hasLabel(this.node);\n          this.__toggleHasLabel(hasLabel);\n        }\n      });\n    });\n\n    // Observe changes to label ID attribute, text content and children.\n    this.__labelObserver.observe(labelNode, {\n      attributes: true,\n      attributeFilter: ['id'],\n      childList: true,\n      subtree: true,\n      characterData: true,\n    });\n  }\n\n  /**\n   * @param {boolean} hasLabel\n   * @private\n   */\n  __toggleHasLabel(hasLabel) {\n    this.host.toggleAttribute('has-label', hasLabel);\n\n    // Make it possible for other mixins to observe change\n    this.dispatchEvent(\n      new CustomEvent('label-changed', {\n        detail: {\n          hasLabel,\n          node: this.node,\n        },\n      }),\n    );\n  }\n\n  /**\n   * @param {string} label\n   * @private\n   */\n  __updateDefaultLabel(label) {\n    if (this.defaultNode) {\n      this.defaultNode.textContent = label;\n\n      // Update has-label if default label is used\n      if (this.defaultNode === this.node) {\n        const hasLabel = this.__isNotEmpty(label);\n        this.__toggleHasLabel(hasLabel);\n      }\n    }\n  }\n\n  /**\n   * @param {HTMLElement} labelNode\n   * @private\n   */\n  __updateLabelId(labelNode) {\n    if (!labelNode.id) {\n      labelNode.id = this.defaultId;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { LabelController } from './label-controller.js';\n\n/**\n * A mixin to provide label via corresponding property or named slot.\n *\n * @polymerMixin\n * @mixes ControllerMixin\n */\nexport const LabelMixin = dedupingMixin(\n  (superclass) =>\n    class LabelMixinClass extends ControllerMixin(superclass) {\n      static get properties() {\n        return {\n          /**\n           * The label text for the input node.\n           * When no light dom defined via [slot=label], this value will be used.\n           */\n          label: {\n            type: String,\n            observer: '_labelChanged',\n          },\n        };\n      }\n\n      /** @protected */\n      get _labelId() {\n        return this._labelController.labelId;\n      }\n\n      /** @protected */\n      get _labelNode() {\n        return this._labelController.node;\n      }\n\n      constructor() {\n        super();\n\n        this._labelController = new LabelController(this);\n      }\n\n      /** @protected */\n      ready() {\n        super.ready();\n\n        this.addController(this._labelController);\n      }\n\n      /** @protected */\n      _labelChanged(label) {\n        this._labelController.setLabel(label);\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to provide required state and validation logic.\n *\n * @polymerMixin\n */\nexport const ValidateMixin = dedupingMixin(\n  (superclass) =>\n    class ValidateMixinClass extends superclass {\n      static get properties() {\n        return {\n          /**\n           * Set to true when the field is invalid.\n           */\n          invalid: {\n            type: Boolean,\n            reflectToAttribute: true,\n            notify: true,\n            value: false,\n          },\n\n          /**\n           * Specifies that the user must fill in a value.\n           */\n          required: {\n            type: Boolean,\n            reflectToAttribute: true,\n          },\n        };\n      }\n\n      /**\n       * Validates the field and sets the `invalid` property based on the result.\n       *\n       * The method fires a `validated` event with the result of the validation.\n       *\n       * @return {boolean} True if the value is valid.\n       */\n      validate() {\n        const isValid = this.checkValidity();\n        this._setInvalid(!isValid);\n        this.dispatchEvent(new CustomEvent('validated', { detail: { valid: isValid } }));\n        return isValid;\n      }\n\n      /**\n       * Returns true if the field value satisfies all constraints (if any).\n       *\n       * @return {boolean}\n       */\n      checkValidity() {\n        return !this.required || !!this.value;\n      }\n\n      /**\n       * @param {boolean} invalid\n       * @protected\n       */\n      _setInvalid(invalid) {\n        if (this._shouldSetInvalid(invalid)) {\n          this.invalid = invalid;\n        }\n      }\n\n      /**\n       * Override this method to define whether the given `invalid` state should be set.\n       *\n       * @param {boolean} _invalid\n       * @return {boolean}\n       * @protected\n       */\n      _shouldSetInvalid(_invalid) {\n        return true;\n      }\n\n      /**\n       * Fired whenever the field is validated.\n       *\n       * @event validated\n       * @param {Object} detail\n       * @param {boolean} detail.valid the result of the validation.\n       */\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { ErrorController } from './error-controller.js';\nimport { FieldAriaController } from './field-aria-controller.js';\nimport { HelperController } from './helper-controller.js';\nimport { LabelMixin } from './label-mixin.js';\nimport { ValidateMixin } from './validate-mixin.js';\n\n/**\n * A mixin to provide common field logic: label, error message and helper text.\n *\n * @polymerMixin\n * @mixes ControllerMixin\n * @mixes LabelMixin\n * @mixes ValidateMixin\n */\nexport const FieldMixin = (superclass) =>\n  class FieldMixinClass extends ValidateMixin(LabelMixin(ControllerMixin(superclass))) {\n    static get properties() {\n      return {\n        /**\n         * A target element to which ARIA attributes are set.\n         * @protected\n         */\n        ariaTarget: {\n          type: Object,\n          observer: '_ariaTargetChanged',\n        },\n\n        /**\n         * Error to show when the field is invalid.\n         *\n         * @attr {string} error-message\n         */\n        errorMessage: {\n          type: String,\n          observer: '_errorMessageChanged',\n        },\n\n        /**\n         * String used for the helper text.\n         * @attr {string} helper-text\n         */\n        helperText: {\n          type: String,\n          observer: '_helperTextChanged',\n        },\n      };\n    }\n\n    static get observers() {\n      return ['_invalidChanged(invalid)', '_requiredChanged(required)'];\n    }\n\n    /** @protected */\n    get _errorId() {\n      return this._errorController.errorId;\n    }\n\n    /**\n     * @protected\n     * @return {HTMLElement}\n     */\n    get _errorNode() {\n      return this._errorController.node;\n    }\n\n    /** @protected */\n    get _helperId() {\n      return this._helperController.helperId;\n    }\n\n    /**\n     * @protected\n     * @return {HTMLElement}\n     */\n    get _helperNode() {\n      return this._helperController.node;\n    }\n\n    constructor() {\n      super();\n\n      this._fieldAriaController = new FieldAriaController(this);\n      this._helperController = new HelperController(this);\n      this._errorController = new ErrorController(this);\n\n      this._labelController.addEventListener('label-changed', (event) => {\n        const { hasLabel, node } = event.detail;\n        this.__labelChanged(hasLabel, node);\n      });\n\n      this._helperController.addEventListener('helper-changed', (event) => {\n        const { hasHelper, node } = event.detail;\n        this.__helperChanged(hasHelper, node);\n      });\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addController(this._fieldAriaController);\n      this.addController(this._helperController);\n      this.addController(this._errorController);\n    }\n\n    /** @private */\n    __helperChanged(hasHelper, helperNode) {\n      if (hasHelper) {\n        this._fieldAriaController.setHelperId(helperNode.id);\n      } else {\n        this._fieldAriaController.setHelperId(null);\n      }\n    }\n\n    /** @private */\n    __labelChanged(hasLabel, labelNode) {\n      // Label ID should be only added when the label content is present.\n      // Otherwise, it may conflict with an `aria-label` attribute possibly added by the user.\n      if (hasLabel) {\n        this._fieldAriaController.setLabelId(labelNode.id);\n      } else {\n        this._fieldAriaController.setLabelId(null);\n      }\n    }\n\n    /**\n     * @param {string | null | undefined} errorMessage\n     * @protected\n     */\n    _errorMessageChanged(errorMessage) {\n      this._errorController.setErrorMessage(errorMessage);\n    }\n\n    /**\n     * @param {string} helperText\n     * @protected\n     */\n    _helperTextChanged(helperText) {\n      this._helperController.setHelperText(helperText);\n    }\n\n    /**\n     * @param {HTMLElement | null | undefined} target\n     * @protected\n     */\n    _ariaTargetChanged(target) {\n      if (target) {\n        this._fieldAriaController.setTarget(target);\n      }\n    }\n\n    /**\n     * @param {boolean} required\n     * @protected\n     */\n    _requiredChanged(required) {\n      this._fieldAriaController.setRequired(required);\n    }\n\n    /**\n     * @param {boolean} invalid\n     * @protected\n     */\n    _invalidChanged(invalid) {\n      this._errorController.setInvalid(invalid);\n\n      // This timeout is needed to prevent NVDA from announcing the error message twice:\n      // 1. Once adding the `[role=alert]` attribute when updating `has-error-message` (OK).\n      // 2. Once linking the error ID with the ARIA target here (unwanted).\n      // Related issue: https://github.com/vaadin/web-components/issues/3061.\n      setTimeout(() => {\n        // Error message ID needs to be dynamically added / removed based on the validity\n        // Otherwise assistive technologies would announce the error, even if we hide it.\n        if (invalid) {\n          this._fieldAriaController.setErrorId(this._errorController.errorId);\n        } else {\n          this._fieldAriaController.setErrorId(null);\n        }\n      });\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to delegate properties and attributes to a target element.\n *\n * @polymerMixin\n */\nexport const DelegateStateMixin = dedupingMixin(\n  (superclass) =>\n    class DelegateStateMixinClass extends superclass {\n      static get properties() {\n        return {\n          /**\n           * A target element to which attributes and properties are delegated.\n           * @protected\n           */\n          stateTarget: {\n            type: Object,\n            observer: '_stateTargetChanged',\n          },\n        };\n      }\n\n      /**\n       * An array of the host attributes to delegate to the target element.\n       */\n      static get delegateAttrs() {\n        return [];\n      }\n\n      /**\n       * An array of the host properties to delegate to the target element.\n       */\n      static get delegateProps() {\n        return [];\n      }\n\n      /** @protected */\n      ready() {\n        super.ready();\n\n        this._createDelegateAttrsObserver();\n        this._createDelegatePropsObserver();\n      }\n\n      /** @protected */\n      _stateTargetChanged(target) {\n        if (target) {\n          this._ensureAttrsDelegated();\n          this._ensurePropsDelegated();\n        }\n      }\n\n      /** @protected */\n      _createDelegateAttrsObserver() {\n        this._createMethodObserver(`_delegateAttrsChanged(${this.constructor.delegateAttrs.join(', ')})`);\n      }\n\n      /** @protected */\n      _createDelegatePropsObserver() {\n        this._createMethodObserver(`_delegatePropsChanged(${this.constructor.delegateProps.join(', ')})`);\n      }\n\n      /** @protected */\n      _ensureAttrsDelegated() {\n        this.constructor.delegateAttrs.forEach((name) => {\n          this._delegateAttribute(name, this[name]);\n        });\n      }\n\n      /** @protected */\n      _ensurePropsDelegated() {\n        this.constructor.delegateProps.forEach((name) => {\n          this._delegateProperty(name, this[name]);\n        });\n      }\n\n      /** @protected */\n      _delegateAttrsChanged(...values) {\n        this.constructor.delegateAttrs.forEach((name, index) => {\n          this._delegateAttribute(name, values[index]);\n        });\n      }\n\n      /** @protected */\n      _delegatePropsChanged(...values) {\n        this.constructor.delegateProps.forEach((name, index) => {\n          this._delegateProperty(name, values[index]);\n        });\n      }\n\n      /** @protected */\n      _delegateAttribute(name, value) {\n        if (!this.stateTarget) {\n          return;\n        }\n\n        if (name === 'invalid') {\n          this._delegateAttribute('aria-invalid', value ? 'true' : false);\n        }\n\n        if (typeof value === 'boolean') {\n          this.stateTarget.toggleAttribute(name, value);\n        } else if (value) {\n          this.stateTarget.setAttribute(name, value);\n        } else {\n          this.stateTarget.removeAttribute(name);\n        }\n      }\n\n      /** @protected */\n      _delegateProperty(name, value) {\n        if (!this.stateTarget) {\n          return;\n        }\n\n        this.stateTarget[name] = value;\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to store the reference to an input element\n * and add input and change event listeners to it.\n *\n * @polymerMixin\n */\nexport const InputMixin = dedupingMixin(\n  (superclass) =>\n    class InputMixinClass extends superclass {\n      static get properties() {\n        return {\n          /**\n           * A reference to the input element controlled by the mixin.\n           * Any component implementing this mixin is expected to provide it\n           * by using `this._setInputElement(input)` Polymer API.\n           *\n           * A typical case is using `InputController` that does this automatically.\n           * However, the input element does not have to always be native <input>:\n           * as an example, <vaadin-combo-box-light> accepts other components.\n           *\n           * @protected\n           * @type {!HTMLElement}\n           */\n          inputElement: {\n            type: Object,\n            readOnly: true,\n            observer: '_inputElementChanged',\n          },\n\n          /**\n           * String used to define input type.\n           * @protected\n           */\n          type: {\n            type: String,\n            readOnly: true,\n          },\n\n          /**\n           * The value of the field.\n           */\n          value: {\n            type: String,\n            value: '',\n            observer: '_valueChanged',\n            notify: true,\n          },\n\n          /**\n           * When true, the input element has a non-empty value entered by the user.\n           * @protected\n           */\n          _hasInputValue: {\n            type: Boolean,\n            value: false,\n            observer: '_hasInputValueChanged',\n          },\n        };\n      }\n\n      constructor() {\n        super();\n\n        this._boundOnInput = this.__onInput.bind(this);\n        this._boundOnChange = this._onChange.bind(this);\n      }\n\n      /**\n       * Clear the value of the field.\n       */\n      clear() {\n        this.value = '';\n      }\n\n      /**\n       * Add event listeners to the input element instance.\n       * Override this method to add custom listeners.\n       * @param {!HTMLElement} input\n       * @protected\n       */\n      _addInputListeners(input) {\n        input.addEventListener('input', this._boundOnInput);\n        input.addEventListener('change', this._boundOnChange);\n      }\n\n      /**\n       * Remove event listeners from the input element instance.\n       * @param {!HTMLElement} input\n       * @protected\n       */\n      _removeInputListeners(input) {\n        input.removeEventListener('input', this._boundOnInput);\n        input.removeEventListener('change', this._boundOnChange);\n      }\n\n      /**\n       * A method to forward the value property set on the field\n       * programmatically back to the input element value.\n       * Override this method to perform additional checks,\n       * for example to skip this in certain conditions.\n       * @param {string} value\n       * @protected\n       */\n      _forwardInputValue(value) {\n        // Value might be set before an input element is initialized.\n        // This case should be handled separately by a component that\n        // implements this mixin, for example in `connectedCallback`.\n        if (!this.inputElement) {\n          return;\n        }\n\n        if (value != null) {\n          this.inputElement.value = value;\n        } else {\n          this.inputElement.value = '';\n        }\n      }\n\n      /**\n       * @param {HTMLElement | undefined} input\n       * @param {HTMLElement | undefined} oldInput\n       * @protected\n       */\n      _inputElementChanged(input, oldInput) {\n        if (input) {\n          this._addInputListeners(input);\n        } else if (oldInput) {\n          this._removeInputListeners(oldInput);\n        }\n      }\n\n      /**\n       * Observer to notify about the change of private property.\n       *\n       * @private\n       */\n      _hasInputValueChanged(hasValue, oldHasValue) {\n        if (hasValue || oldHasValue) {\n          this.dispatchEvent(new CustomEvent('has-input-value-changed'));\n        }\n      }\n\n      /**\n       * An input event listener used to update `_hasInputValue` property.\n       * Do not override this method.\n       *\n       * @param {Event} event\n       * @private\n       */\n      __onInput(event) {\n        this._setHasInputValue(event);\n        this._onInput(event);\n      }\n\n      /**\n       * An input event listener used to update the field value.\n       *\n       * @param {Event} event\n       * @protected\n       */\n      _onInput(event) {\n        // In the case a custom web component is passed as `inputElement`,\n        // the actual native input element, on which the event occurred,\n        // can be inside shadow trees.\n        const target = event.composedPath()[0];\n        // Ignore fake input events e.g. used by clear button.\n        this.__userInput = event.isTrusted;\n        this.value = target.value;\n        this.__userInput = false;\n      }\n\n      /**\n       * A change event listener.\n       * Override this method with an actual implementation.\n       * @param {Event} _event\n       * @protected\n       */\n      _onChange(_event) {}\n\n      /**\n       * Toggle the has-value attribute based on the value property.\n       *\n       * @param {boolean} hasValue\n       * @protected\n       */\n      _toggleHasValue(hasValue) {\n        this.toggleAttribute('has-value', hasValue);\n      }\n\n      /**\n       * Observer called when a value property changes.\n       * @param {string | undefined} newVal\n       * @param {string | undefined} oldVal\n       * @protected\n       */\n      _valueChanged(newVal, oldVal) {\n        this._toggleHasValue(this._hasValue);\n\n        // Setting initial value to empty string, do nothing.\n        if (newVal === '' && oldVal === undefined) {\n          return;\n        }\n\n        // Value is set by the user, no need to sync it back to input.\n        if (this.__userInput) {\n          return;\n        }\n\n        // Setting a value programmatically, sync it to input element.\n        this._forwardInputValue(newVal);\n      }\n\n      /**\n       * Indicates whether the value is different from the default one.\n       * Override if the `value` property has a type other than `string`.\n       *\n       * @protected\n       */\n      get _hasValue() {\n        return this.value != null && this.value !== '';\n      }\n\n      /**\n       * Sets the `_hasInputValue` property based on the `input` event.\n       *\n       * @param {InputEvent} event\n       * @protected\n       */\n      _setHasInputValue(event) {\n        // In the case a custom web component is passed as `inputElement`,\n        // the actual native input element, on which the event occurred,\n        // can be inside shadow trees.\n        const target = event.composedPath()[0];\n        this._hasInputValue = target.value.length > 0;\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { DelegateStateMixin } from './delegate-state-mixin.js';\nimport { InputMixin } from './input-mixin.js';\nimport { ValidateMixin } from './validate-mixin.js';\n\n/**\n * A mixin to combine multiple input validation constraints.\n *\n * @polymerMixin\n * @mixes DelegateStateMixin\n * @mixes InputMixin\n * @mixes ValidateMixin\n */\nexport const InputConstraintsMixin = dedupingMixin(\n  (superclass) =>\n    class InputConstraintsMixinClass extends DelegateStateMixin(ValidateMixin(InputMixin(superclass))) {\n      /**\n       * An array of attributes which participate in the input validation.\n       * Changing these attributes will cause the input to re-validate.\n       *\n       * IMPORTANT: The attributes should be properly delegated to the input element\n       * from the host using `delegateAttrs` getter (see `DelegateStateMixin`).\n       * The `required` attribute is already delegated.\n       */\n      static get constraints() {\n        return ['required'];\n      }\n\n      static get delegateAttrs() {\n        return [...super.delegateAttrs, 'required'];\n      }\n\n      /** @protected */\n      ready() {\n        super.ready();\n\n        this._createConstraintsObserver();\n      }\n\n      /**\n       * Returns true if the current input value satisfies all constraints (if any).\n       * @return {boolean}\n       */\n      checkValidity() {\n        if (this.inputElement && this._hasValidConstraints(this.constructor.constraints.map((c) => this[c]))) {\n          return this.inputElement.checkValidity();\n        }\n        return !this.invalid;\n      }\n\n      /**\n       * Returns true if some of the provided set of constraints are valid.\n       * @param {Array} constraints\n       * @return {boolean}\n       * @protected\n       */\n      _hasValidConstraints(constraints) {\n        return constraints.some((c) => this.__isValidConstraint(c));\n      }\n\n      /**\n       * Override this method to customize setting up constraints observer.\n       * @protected\n       */\n      _createConstraintsObserver() {\n        // This complex observer needs to be added dynamically instead of using `static get observers()`\n        // to make it possible to tweak this behavior in classes that apply this mixin.\n        this._createMethodObserver(`_constraintsChanged(stateTarget, ${this.constructor.constraints.join(', ')})`);\n      }\n\n      /**\n       * Override this method to implement custom validation constraints.\n       * @param {HTMLElement | undefined} stateTarget\n       * @param {unknown[]} constraints\n       * @protected\n       */\n      _constraintsChanged(stateTarget, ...constraints) {\n        // The input element's validity cannot be determined until\n        // all the necessary constraint attributes aren't set on it.\n        if (!stateTarget) {\n          return;\n        }\n\n        const hasConstraints = this._hasValidConstraints(constraints);\n        const isLastConstraintRemoved = this.__previousHasConstraints && !hasConstraints;\n\n        if ((this._hasValue || this.invalid) && hasConstraints) {\n          this.validate();\n        } else if (isLastConstraintRemoved) {\n          this._setInvalid(false);\n        }\n\n        this.__previousHasConstraints = hasConstraints;\n      }\n\n      /**\n       * Override an event listener inherited from `InputMixin`\n       * to capture native `change` event and make sure that\n       * a new one is dispatched after validation runs.\n       * @param {Event} event\n       * @protected\n       * @override\n       */\n      _onChange(event) {\n        event.stopPropagation();\n\n        this.validate();\n\n        this.dispatchEvent(\n          new CustomEvent('change', {\n            detail: {\n              sourceEvent: event,\n            },\n            bubbles: event.bubbles,\n            cancelable: event.cancelable,\n          }),\n        );\n      }\n\n      /** @private */\n      __isValidConstraint(constraint) {\n        // 0 is valid for `minlength` and `maxlength`\n        return Boolean(constraint) || constraint === 0;\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\nconst stylesMap = new WeakMap();\n\n/**\n * Get all the styles inserted into root.\n * @param {DocumentOrShadowRoot} root\n * @return {Set<string>}\n */\nfunction getRootStyles(root) {\n  if (!stylesMap.has(root)) {\n    stylesMap.set(root, new Set());\n  }\n\n  return stylesMap.get(root);\n}\n\n/**\n * Insert styles into the root.\n * @param {string} styles\n * @param {DocumentOrShadowRoot} root\n */\nfunction insertStyles(styles, root) {\n  const style = document.createElement('style');\n  style.textContent = styles;\n\n  if (root === document) {\n    document.head.appendChild(style);\n  } else {\n    root.insertBefore(style, root.firstChild);\n  }\n}\n\n/**\n * Mixin to insert styles into the outer scope to handle slotted components.\n * This is useful e.g. to hide native `<input type=\"number\">` controls.\n *\n * @polymerMixin\n */\nexport const SlotStylesMixin = dedupingMixin(\n  (superclass) =>\n    class SlotStylesMixinClass extends superclass {\n      /**\n       * List of styles to insert into root.\n       * @protected\n       */\n      get slotStyles() {\n        return {};\n      }\n\n      /** @protected */\n      connectedCallback() {\n        super.connectedCallback();\n\n        this.__applySlotStyles();\n      }\n\n      /** @private */\n      __applySlotStyles() {\n        const root = this.getRootNode();\n        const rootStyles = getRootStyles(root);\n\n        this.slotStyles.forEach((styles) => {\n          if (!rootStyles.has(styles)) {\n            insertStyles(styles, root);\n            rootStyles.add(styles);\n          }\n        });\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { KeyboardMixin } from '@vaadin/component-base/src/keyboard-mixin.js';\nimport { DelegateFocusMixin } from './delegate-focus-mixin.js';\nimport { FieldMixin } from './field-mixin.js';\nimport { InputConstraintsMixin } from './input-constraints-mixin.js';\nimport { SlotStylesMixin } from './slot-styles-mixin.js';\n\n/**\n * A mixin to provide shared logic for the editable form input controls.\n *\n * @polymerMixin\n * @mixes DelegateFocusMixin\n * @mixes FieldMixin\n * @mixes InputConstraintsMixin\n * @mixes KeyboardMixin\n * @mixes SlotStylesMixin\n */\nexport const InputControlMixin = (superclass) =>\n  class InputControlMixinClass extends SlotStylesMixin(\n    DelegateFocusMixin(InputConstraintsMixin(FieldMixin(KeyboardMixin(superclass)))),\n  ) {\n    static get properties() {\n      return {\n        /**\n         * A pattern matched against individual characters the user inputs.\n         *\n         * When set, the field will prevent:\n         * - `keydown` events if the entered key doesn't match `/^allowedCharPattern$/`\n         * - `paste` events if the pasted text doesn't match `/^allowedCharPattern*$/`\n         * - `drop` events if the dropped text doesn't match `/^allowedCharPattern*$/`\n         *\n         * For example, to allow entering only numbers and minus signs, use:\n         * `allowedCharPattern = \"[\\\\d-]\"`\n         * @attr {string} allowed-char-pattern\n         */\n        allowedCharPattern: {\n          type: String,\n          observer: '_allowedCharPatternChanged',\n        },\n\n        /**\n         * If true, the input text gets fully selected when the field is focused using click or touch / tap.\n         */\n        autoselect: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * Set to true to display the clear icon which clears the input.\n         * @attr {boolean} clear-button-visible\n         */\n        clearButtonVisible: {\n          type: Boolean,\n          reflectToAttribute: true,\n          value: false,\n        },\n\n        /**\n         * The name of this field.\n         */\n        name: {\n          type: String,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * A hint to the user of what can be entered in the field.\n         */\n        placeholder: {\n          type: String,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * When present, it specifies that the field is read-only.\n         */\n        readonly: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * The text usually displayed in a tooltip popup when the mouse is over the field.\n         */\n        title: {\n          type: String,\n          reflectToAttribute: true,\n        },\n      };\n    }\n\n    static get delegateAttrs() {\n      return [...super.delegateAttrs, 'name', 'type', 'placeholder', 'readonly', 'invalid', 'title'];\n    }\n\n    constructor() {\n      super();\n\n      this._boundOnPaste = this._onPaste.bind(this);\n      this._boundOnDrop = this._onDrop.bind(this);\n      this._boundOnBeforeInput = this._onBeforeInput.bind(this);\n    }\n\n    /**\n     * Any element extending this mixin is required to implement this getter.\n     * It returns the reference to the clear button element.\n     * @protected\n     * @return {Element | null | undefined}\n     */\n    get clearElement() {\n      console.warn(`Please implement the 'clearElement' property in <${this.localName}>`);\n      return null;\n    }\n\n    /** @protected */\n    get slotStyles() {\n      // Needed for Safari, where ::slotted(...)::placeholder does not work\n      return [\n        `\n          :is(input[slot='input'], textarea[slot='textarea'])::placeholder {\n            font: inherit;\n            color: inherit;\n          }\n        `,\n      ];\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      if (this.clearElement) {\n        this.clearElement.addEventListener('click', (e) => this._onClearButtonClick(e));\n      }\n    }\n\n    /**\n     * @param {Event} event\n     * @protected\n     */\n    _onClearButtonClick(event) {\n      event.preventDefault();\n      this.inputElement.focus();\n      this.__clear();\n    }\n\n    /**\n     * Override an event listener from `DelegateFocusMixin`.\n     * @param {FocusEvent} event\n     * @protected\n     * @override\n     */\n    _onFocus(event) {\n      super._onFocus(event);\n\n      if (this.autoselect && this.inputElement) {\n        this.inputElement.select();\n      }\n    }\n\n    /**\n     * Override an event listener inherited from `KeydownMixin` to clear on Esc.\n     * Components that extend this mixin can prevent this behavior by overriding\n     * this method without calling `super._onEscape` to provide custom logic.\n     * @param {KeyboardEvent} event\n     * @protected\n     * @override\n     */\n    _onEscape(event) {\n      super._onEscape(event);\n\n      if (this.clearButtonVisible && !!this.value) {\n        event.stopPropagation();\n        this.__clear();\n      }\n    }\n\n    /**\n     * Override an event listener inherited from `InputMixin`\n     * to capture native `change` event and make sure that\n     * a new one is dispatched after validation runs.\n     * @param {Event} event\n     * @protected\n     * @override\n     */\n    _onChange(event) {\n      event.stopPropagation();\n\n      this.validate();\n\n      this.dispatchEvent(\n        new CustomEvent('change', {\n          detail: {\n            sourceEvent: event,\n          },\n          bubbles: event.bubbles,\n          cancelable: event.cancelable,\n        }),\n      );\n    }\n\n    /** @private */\n    __clear() {\n      this.clear();\n      this.inputElement.dispatchEvent(new Event('input', { bubbles: true, composed: true }));\n      this.inputElement.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n\n    /**\n     * Override a method from `InputMixin`.\n     * @param {!HTMLElement} input\n     * @protected\n     * @override\n     */\n    _addInputListeners(input) {\n      super._addInputListeners(input);\n\n      input.addEventListener('paste', this._boundOnPaste);\n      input.addEventListener('drop', this._boundOnDrop);\n      input.addEventListener('beforeinput', this._boundOnBeforeInput);\n    }\n\n    /**\n     * Override a method from `InputMixin`.\n     * @param {!HTMLElement} input\n     * @protected\n     * @override\n     */\n    _removeInputListeners(input) {\n      super._removeInputListeners(input);\n\n      input.removeEventListener('paste', this._boundOnPaste);\n      input.removeEventListener('drop', this._boundOnDrop);\n      input.removeEventListener('beforeinput', this._boundOnBeforeInput);\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     * @param {!KeyboardEvent} event\n     * @protected\n     * @override\n     */\n    _onKeyDown(event) {\n      super._onKeyDown(event);\n\n      if (this.allowedCharPattern && !this.__shouldAcceptKey(event)) {\n        event.preventDefault();\n        this._markInputPrevented();\n      }\n    }\n\n    /** @protected */\n    _markInputPrevented() {\n      // Add input-prevented attribute for 200ms\n      this.setAttribute('input-prevented', '');\n      this._preventInputDebouncer = Debouncer.debounce(this._preventInputDebouncer, timeOut.after(200), () => {\n        this.removeAttribute('input-prevented');\n      });\n    }\n\n    /** @private */\n    __shouldAcceptKey(event) {\n      return (\n        event.metaKey ||\n        event.ctrlKey ||\n        !event.key || // Allow typing anything if event.key is not supported\n        event.key.length !== 1 || // Allow \"Backspace\", \"ArrowLeft\" etc.\n        this.__allowedCharRegExp.test(event.key)\n      );\n    }\n\n    /** @private */\n    _onPaste(e) {\n      if (this.allowedCharPattern) {\n        const pastedText = e.clipboardData.getData('text');\n        if (!this.__allowedTextRegExp.test(pastedText)) {\n          e.preventDefault();\n          this._markInputPrevented();\n        }\n      }\n    }\n\n    /** @private */\n    _onDrop(e) {\n      if (this.allowedCharPattern) {\n        const draggedText = e.dataTransfer.getData('text');\n        if (!this.__allowedTextRegExp.test(draggedText)) {\n          e.preventDefault();\n          this._markInputPrevented();\n        }\n      }\n    }\n\n    /** @private */\n    _onBeforeInput(e) {\n      // The `beforeinput` event covers all the cases for `allowedCharPattern`: keyboard, pasting and dropping,\n      // but it is still experimental technology so we can't rely on it. It's used here just as an additional check,\n      // because it seems to be the only way to detect and prevent specific keys on mobile devices.\n      // See https://github.com/vaadin/vaadin-text-field/issues/429\n      if (this.allowedCharPattern && e.data && !this.__allowedTextRegExp.test(e.data)) {\n        e.preventDefault();\n        this._markInputPrevented();\n      }\n    }\n\n    /** @private */\n    _allowedCharPatternChanged(charPattern) {\n      if (charPattern) {\n        try {\n          this.__allowedCharRegExp = new RegExp(`^${charPattern}$`);\n          this.__allowedTextRegExp = new RegExp(`^${charPattern}*$`);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    /**\n     * Fired when the user commits a value change.\n     *\n     * @event change\n     */\n\n    /**\n     * Fired when the value is changed by the user: on every typing keystroke,\n     * and the value is cleared using the clear button.\n     *\n     * @event input\n     */\n  };\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\n\n/**\n * A controller to create and initialize slotted `<input>` element.\n */\nexport class InputController extends SlotController {\n  constructor(host, callback) {\n    super(\n      host,\n      'input',\n      () => document.createElement('input'),\n      (host, node) => {\n        if (host.value) {\n          node.setAttribute('value', host.value);\n        }\n        if (host.type) {\n          node.setAttribute('type', host.type);\n        }\n\n        // Ensure every instance has unique ID\n        node.id = this.defaultId;\n\n        if (typeof callback === 'function') {\n          callback(node);\n        }\n      },\n      true,\n    );\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A controller for linking a `<label>` element with an `<input>` element.\n */\nexport class LabelledInputController {\n  constructor(input, labelController) {\n    this.input = input;\n    this.__preventDuplicateLabelClick = this.__preventDuplicateLabelClick.bind(this);\n\n    labelController.addEventListener('label-changed', (event) => {\n      this.__initLabel(event.detail.node);\n    });\n\n    // Initialize the default label element\n    this.__initLabel(labelController.node);\n  }\n\n  /**\n   * @param {HTMLElement} label\n   * @private\n   */\n  __initLabel(label) {\n    if (label) {\n      label.addEventListener('click', this.__preventDuplicateLabelClick);\n\n      if (this.input) {\n        label.setAttribute('for', this.input.id);\n      }\n    }\n  }\n\n  /**\n   * The native platform fires an event for both the click on the label, and also\n   * the subsequent click on the native input element caused by label click.\n   * This results in two click events arriving at the host, but we only want one.\n   * This method prevents the duplicate click and ensures the correct isTrusted event\n   * with the correct event.target arrives at the host.\n   * @private\n   */\n  __preventDuplicateLabelClick() {\n    const inputClickHandler = (e) => {\n      e.stopImmediatePropagation();\n      this.input.removeEventListener('click', inputClickHandler);\n    };\n    this.input.addEventListener('click', inputClickHandler);\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd..\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const clearButton = css`\n  [part='clear-button'] {\n    display: none;\n    cursor: default;\n  }\n\n  [part='clear-button']::before {\n    content: '✕';\n  }\n\n  :host([clear-button-visible][has-value]:not([disabled]):not([readonly])) [part='clear-button'] {\n    display: block;\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd..\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const fieldShared = css`\n  :host {\n    display: inline-flex;\n    outline: none;\n  }\n\n  :host::before {\n    content: '\\\\2003';\n    width: 0;\n    display: inline-block;\n    /* Size and position this element on the same vertical position as the input-field element\n          to make vertical align for the host element work as expected */\n  }\n\n  :host([hidden]) {\n    display: none !important;\n  }\n\n  :host(:not([has-label])) [part='label'] {\n    display: none;\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd..\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const inputFieldContainer = css`\n  [class$='container'] {\n    display: flex;\n    flex-direction: column;\n    min-width: 100%;\n    max-width: 100%;\n    width: var(--vaadin-field-default-width, 12em);\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd..\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { clearButton } from './clear-button-styles.js';\nimport { fieldShared } from './field-shared-styles.js';\nimport { inputFieldContainer } from './input-field-container-styles.js';\n\nexport const inputFieldShared = [fieldShared, inputFieldContainer, clearButton];\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A controller which prevents the virtual keyboard from showing up on mobile devices\n * when the field's overlay is closed.\n */\nexport class VirtualKeyboardController {\n  /**\n   * @param {{ inputElement?: HTMLElement; opened: boolean } & HTMLElement} host\n   */\n  constructor(host) {\n    this.host = host;\n\n    host.addEventListener('opened-changed', () => {\n      if (!host.opened) {\n        // Prevent opening the virtual keyboard when the input gets re-focused on dropdown close\n        this.__setVirtualKeyboardEnabled(false);\n      }\n    });\n\n    // Re-enable virtual keyboard on blur, so it gets opened when the field is focused again\n    host.addEventListener('blur', () => this.__setVirtualKeyboardEnabled(true));\n\n    // Re-enable the virtual keyboard whenever the field is touched\n    host.addEventListener('touchstart', () => this.__setVirtualKeyboardEnabled(true));\n  }\n\n  /** @private */\n  __setVirtualKeyboardEnabled(value) {\n    if (this.host.inputElement) {\n      this.host.inputElement.inputMode = value ? '' : 'none';\n    }\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { isIOS } from '@vaadin/component-base/src/browser-utils.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { KeyboardMixin } from '@vaadin/component-base/src/keyboard-mixin.js';\nimport { MediaQueryController } from '@vaadin/component-base/src/media-query-controller.js';\nimport { DelegateFocusMixin } from '@vaadin/field-base/src/delegate-focus-mixin.js';\nimport { InputConstraintsMixin } from '@vaadin/field-base/src/input-constraints-mixin.js';\nimport { VirtualKeyboardController } from '@vaadin/field-base/src/virtual-keyboard-controller.js';\nimport {\n  dateAllowed,\n  dateEquals,\n  extractDateParts,\n  getAdjustedYear,\n  getClosestDate,\n  parseDate,\n} from './vaadin-date-picker-helper.js';\n\n/**\n * @polymerMixin\n * @param {function(new:HTMLElement)} subclass\n */\nexport const DatePickerMixin = (subclass) =>\n  class VaadinDatePickerMixin extends ControllerMixin(\n    DelegateFocusMixin(InputConstraintsMixin(KeyboardMixin(subclass))),\n  ) {\n    static get properties() {\n      return {\n        /**\n         * The current selected date.\n         * @type {Date | undefined}\n         * @protected\n         */\n        _selectedDate: {\n          type: Date,\n        },\n\n        /**\n         * @type {Date | undefined}\n         * @protected\n         */\n        _focusedDate: Date,\n\n        /**\n         * Selected date.\n         *\n         * Supported date formats:\n         * - ISO 8601 `\"YYYY-MM-DD\"` (default)\n         * - 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`\n         *\n         * @type {string}\n         */\n        value: {\n          type: String,\n          notify: true,\n          value: '',\n        },\n\n        /**\n         * Date which should be visible when there is no value selected.\n         *\n         * The same date formats as for the `value` property are supported.\n         * @attr {string} initial-position\n         */\n        initialPosition: String,\n\n        /**\n         * Set true to open the date selector overlay.\n         */\n        opened: {\n          type: Boolean,\n          reflectToAttribute: true,\n          notify: true,\n          observer: '_openedChanged',\n        },\n\n        /**\n         * Set true to prevent the overlay from opening automatically.\n         * @attr {boolean} auto-open-disabled\n         */\n        autoOpenDisabled: Boolean,\n\n        /**\n         * Set true to display ISO-8601 week numbers in the calendar. Notice that\n         * displaying week numbers is only supported when `i18n.firstDayOfWeek`\n         * is 1 (Monday).\n         * @attr {boolean} show-week-numbers\n         */\n        showWeekNumbers: {\n          type: Boolean,\n        },\n\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _fullscreen: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * @type {string}\n         * @protected\n         */\n        _fullscreenMediaQuery: {\n          value: '(max-width: 420px), (max-height: 420px)',\n        },\n\n        /**\n         * The object used to localize this component.\n         * To change the default localization, replace the entire\n         * `i18n` object with a custom one.\n         *\n         * To update individual properties, extend the existing i18n object like so:\n         * ```\n         * datePicker.i18n = { ...datePicker.i18n, {\n         *   formatDate: date => { ... },\n         *   parseDate: value => { ... },\n         * }};\n         * ```\n         *\n         * The object has the following JSON structure and default values:\n         *\n         * ```\n         * {\n         *   // An array with the full names of months starting\n         *   // with January.\n         *   monthNames: [\n         *     'January', 'February', 'March', 'April', 'May',\n         *     'June', 'July', 'August', 'September',\n         *     'October', 'November', 'December'\n         *   ],\n         *\n         *   // An array of weekday names starting with Sunday. Used\n         *   // in screen reader announcements.\n         *   weekdays: [\n         *     'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n         *     'Thursday', 'Friday', 'Saturday'\n         *   ],\n         *\n         *   // An array of short weekday names starting with Sunday.\n         *   // Displayed in the calendar.\n         *   weekdaysShort: [\n         *     'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\n         *   ],\n         *\n         *   // An integer indicating the first day of the week\n         *   // (0 = Sunday, 1 = Monday, etc.).\n         *   firstDayOfWeek: 0,\n         *\n         *   // Used in screen reader announcements along with week\n         *   // numbers, if they are displayed.\n         *   week: 'Week',\n         *\n         *   // Translation of the Calendar icon button title.\n         *   calendar: 'Calendar',\n         *\n         *   // Translation of the Today shortcut button text.\n         *   today: 'Today',\n         *\n         *   // Translation of the Cancel button text.\n         *   cancel: 'Cancel',\n         *\n         *   // Used for adjusting the year value when parsing dates with short years.\n         *   // The year values between 0 and 99 are evaluated and adjusted.\n         *   // Example: for a referenceDate of 1970-10-30;\n         *   //   dateToBeParsed: 40-10-30, result: 1940-10-30\n         *   //   dateToBeParsed: 80-10-30, result: 1980-10-30\n         *   //   dateToBeParsed: 10-10-30, result: 2010-10-30\n         *   // Supported date format: ISO 8601 `\"YYYY-MM-DD\"` (default)\n         *   // The default value is the current date.\n         *   referenceDate: '',\n         *\n         *   // A function to format given `Object` as\n         *   // date string. Object is in the format `{ day: ..., month: ..., year: ... }`\n         *   // Note: The argument month is 0-based. This means that January = 0 and December = 11.\n         *   formatDate: d => {\n         *     // returns a string representation of the given\n         *     // object in 'MM/DD/YYYY' -format\n         *   },\n         *\n         *   // A function to parse the given text to an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n         *   // Must properly parse (at least) text formatted by `formatDate`.\n         *   // Setting the property to null will disable keyboard input feature.\n         *   // Note: The argument month is 0-based. This means that January = 0 and December = 11.\n         *   parseDate: text => {\n         *     // Parses a string in 'MM/DD/YY', 'MM/DD' or 'DD' -format to\n         *     // an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n         *   }\n         *\n         *   // A function to format given `monthName` and\n         *   // `fullYear` integer as calendar title string.\n         *   formatTitle: (monthName, fullYear) => {\n         *     return monthName + ' ' + fullYear;\n         *   }\n         * }\n         * ```\n         *\n         * @type {!DatePickerI18n}\n         * @default {English/US}\n         */\n        i18n: {\n          type: Object,\n          value: () => {\n            return {\n              monthNames: [\n                'January',\n                'February',\n                'March',\n                'April',\n                'May',\n                'June',\n                'July',\n                'August',\n                'September',\n                'October',\n                'November',\n                'December',\n              ],\n              weekdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n              weekdaysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n              firstDayOfWeek: 0,\n              week: 'Week',\n              calendar: 'Calendar',\n              today: 'Today',\n              cancel: 'Cancel',\n              referenceDate: '',\n              formatDate(d) {\n                const yearStr = String(d.year).replace(/\\d+/, (y) => '0000'.substr(y.length) + y);\n                return [d.month + 1, d.day, yearStr].join('/');\n              },\n              parseDate(text) {\n                const parts = text.split('/');\n                const today = new Date();\n                let date,\n                  month = today.getMonth(),\n                  year = today.getFullYear();\n\n                if (parts.length === 3) {\n                  month = parseInt(parts[0]) - 1;\n                  date = parseInt(parts[1]);\n                  year = parseInt(parts[2]);\n                  if (parts[2].length < 3 && year >= 0) {\n                    const usedReferenceDate = this.referenceDate ? parseDate(this.referenceDate) : new Date();\n                    year = getAdjustedYear(usedReferenceDate, year, month, date);\n                  }\n                } else if (parts.length === 2) {\n                  month = parseInt(parts[0]) - 1;\n                  date = parseInt(parts[1]);\n                } else if (parts.length === 1) {\n                  date = parseInt(parts[0]);\n                }\n\n                if (date !== undefined) {\n                  return { day: date, month, year };\n                }\n              },\n              formatTitle: (monthName, fullYear) => {\n                return `${monthName} ${fullYear}`;\n              },\n            };\n          },\n        },\n\n        /**\n         * The earliest date that can be selected. All earlier dates will be disabled.\n         *\n         * Supported date formats:\n         * - ISO 8601 `\"YYYY-MM-DD\"` (default)\n         * - 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`\n         *\n         * @type {string | undefined}\n         */\n        min: {\n          type: String,\n        },\n\n        /**\n         * The latest date that can be selected. All later dates will be disabled.\n         *\n         * Supported date formats:\n         * - ISO 8601 `\"YYYY-MM-DD\"` (default)\n         * - 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`\n         *\n         * @type {string | undefined}\n         */\n        max: {\n          type: String,\n        },\n\n        /**\n         * The earliest date that can be selected. All earlier dates will be disabled.\n         * @type {Date | undefined}\n         * @protected\n         */\n        _minDate: {\n          type: Date,\n          computed: '__computeMinOrMaxDate(min)',\n        },\n\n        /**\n         * The latest date that can be selected. All later dates will be disabled.\n         * @type {Date | undefined}\n         * @protected\n         */\n        _maxDate: {\n          type: Date,\n          computed: '__computeMinOrMaxDate(max)',\n        },\n\n        /** @private */\n        _noInput: {\n          type: Boolean,\n          computed: '_isNoInput(inputElement, _fullscreen, _ios, i18n, opened, autoOpenDisabled)',\n        },\n\n        /** @private */\n        _ios: {\n          type: Boolean,\n          value: isIOS,\n        },\n\n        /** @private */\n        _focusOverlayOnOpen: Boolean,\n\n        /** @protected */\n        _overlayInitialized: Boolean,\n      };\n    }\n\n    static get observers() {\n      return [\n        '_selectedDateChanged(_selectedDate, i18n.formatDate)',\n        '_focusedDateChanged(_focusedDate, i18n.formatDate)',\n      ];\n    }\n\n    static get constraints() {\n      return [...super.constraints, 'min', 'max'];\n    }\n\n    /**\n     * Override a getter from `InputControlMixin` to make it optional\n     * and to prevent warning when a clear button is missing,\n     * for example when using <vaadin-date-picker-light>.\n     * @protected\n     * @return {Element | null | undefined}\n     */\n    get clearElement() {\n      return null;\n    }\n\n    /** @protected */\n    get _inputValue() {\n      return this.inputElement ? this.inputElement.value : undefined;\n    }\n\n    /** @protected */\n    set _inputValue(value) {\n      if (this.inputElement) {\n        this.inputElement.value = value;\n      }\n    }\n\n    /** @private */\n    get _nativeInput() {\n      if (this.inputElement) {\n        // TODO: support focusElement for backwards compatibility\n        return this.inputElement.focusElement || this.inputElement;\n      }\n      return null;\n    }\n\n    constructor() {\n      super();\n\n      this._boundOnClick = this._onClick.bind(this);\n      this._boundOnScroll = this._onScroll.bind(this);\n    }\n\n    /**\n     * Override an event listener from `DelegateFocusMixin`\n     * @protected\n     */\n    _onFocus(event) {\n      super._onFocus(event);\n\n      if (this._noInput) {\n        event.target.blur();\n      }\n    }\n\n    /**\n     * Override an event listener from `DelegateFocusMixin`\n     * @protected\n     */\n    _onBlur(event) {\n      super._onBlur(event);\n\n      if (!this.opened) {\n        if (this.autoOpenDisabled) {\n          this._selectParsedOrFocusedDate();\n        }\n\n        this.validate();\n\n        if (this._inputValue === '' && this.value !== '') {\n          this.value = '';\n        }\n      }\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addEventListener('click', this._boundOnClick);\n\n      this.addController(\n        new MediaQueryController(this._fullscreenMediaQuery, (matches) => {\n          this._fullscreen = matches;\n        }),\n      );\n\n      this.addController(new VirtualKeyboardController(this));\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      this.opened = false;\n    }\n\n    /**\n     * Override Polymer lifecycle callback to dispatch `change` event if needed.\n     * This is necessary to ensure `change` is fired after `value-changed`.\n     *\n     * @param {!Object} currentProps Current accessor values\n     * @param {?Object} changedProps Properties changed since the last call\n     * @param {?Object} oldProps Previous values for each changed property\n     * @protected\n     * @override\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) {\n      super._propertiesChanged(currentProps, changedProps, oldProps);\n\n      if ('value' in changedProps && this.__dispatchChange) {\n        this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n        this.__dispatchChange = false;\n      }\n    }\n\n    /**\n     * Opens the dropdown.\n     */\n    open() {\n      if (!this.disabled && !this.readonly) {\n        this.opened = true;\n      }\n    }\n\n    /**\n     * Closes the dropdown.\n     */\n    close() {\n      if (this._overlayInitialized || this.autoOpenDisabled) {\n        this.$.overlay.close();\n      }\n    }\n\n    /** @protected */\n    _initOverlay() {\n      this.$.overlay.removeAttribute('disable-upgrade');\n      this._overlayInitialized = true;\n\n      this.$.overlay.addEventListener('opened-changed', (e) => {\n        this.opened = e.detail.value;\n      });\n\n      this.$.overlay.addEventListener('vaadin-overlay-escape-press', () => {\n        this._focusedDate = this._selectedDate;\n        this._close();\n      });\n\n      this._overlayContent.addEventListener('close', () => {\n        this._close();\n      });\n\n      this._overlayContent.addEventListener('focus-input', this._focusAndSelect.bind(this));\n\n      // User confirmed selected date by clicking the calendar.\n      this._overlayContent.addEventListener('date-tap', (e) => {\n        this.__userConfirmedDate = true;\n\n        this._selectDate(e.detail.date);\n\n        this._close();\n      });\n\n      // User confirmed selected date by pressing Enter, Space, or Today.\n      this._overlayContent.addEventListener('date-selected', (e) => {\n        // Reset if a date is deselected.\n        this.__userConfirmedDate = !!e.detail.date;\n\n        this._selectDate(e.detail.date);\n      });\n\n      // Set focus-ring attribute when moving focus to the overlay\n      // by pressing Tab or arrow key, after opening it on click.\n      this._overlayContent.addEventListener('focusin', () => {\n        if (this._keyboardActive) {\n          this._setFocused(true);\n        }\n      });\n\n      this.addEventListener('mousedown', () => this.__bringToFront());\n      this.addEventListener('touchstart', () => this.__bringToFront());\n    }\n\n    /**\n     * Returns true if the current input value satisfies all constraints (if any)\n     *\n     * Override the `checkValidity` method for custom validations.\n     *\n     * @return {boolean} True if the value is valid\n     */\n    checkValidity() {\n      const inputValid =\n        !this._inputValue ||\n        (!!this._selectedDate && this._inputValue === this._getFormattedDate(this.i18n.formatDate, this._selectedDate));\n      const minMaxValid = !this._selectedDate || dateAllowed(this._selectedDate, this._minDate, this._maxDate);\n\n      let inputValidity = true;\n      if (this.inputElement) {\n        if (this.inputElement.checkValidity) {\n          inputValidity = this.inputElement.checkValidity();\n        } else if (this.inputElement.validate) {\n          // Iron-form-elements have the validate API\n          inputValidity = this.inputElement.validate();\n        }\n      }\n\n      return inputValid && minMaxValid && inputValidity;\n    }\n\n    /**\n     * Override method inherited from `FocusMixin`\n     * to not call `_setFocused(true)` when focus\n     * is restored after closing overlay on click,\n     * and to avoid removing `focus-ring` attribute.\n     *\n     * @param {!FocusEvent} _event\n     * @return {boolean}\n     * @protected\n     * @override\n     */\n    _shouldSetFocus(_event) {\n      return !this._shouldKeepFocusRing;\n    }\n\n    /**\n     * Override method inherited from `FocusMixin`\n     * to prevent removing the `focused` attribute:\n     * - when moving focus to the overlay content,\n     * - when closing on date click / outside click.\n     *\n     * @param {!FocusEvent} _event\n     * @return {boolean}\n     * @protected\n     * @override\n     */\n    _shouldRemoveFocus(_event) {\n      return !this.opened;\n    }\n\n    /**\n     * Override method inherited from `FocusMixin`\n     * to store the `focus-ring` state to restore\n     * it later when closing on outside click.\n     *\n     * @param {boolean} focused\n     * @protected\n     * @override\n     */\n    _setFocused(focused) {\n      super._setFocused(focused);\n\n      this._shouldKeepFocusRing = focused && this._keyboardActive;\n    }\n\n    /**\n     * Select date on user interaction and set the flag\n     * to fire change event if necessary.\n     *\n     * @param {Date} dateToSelect\n     * @protected\n     */\n    _selectDate(dateToSelect) {\n      const value = this._formatISO(dateToSelect);\n\n      // Only set flag if the value will change.\n      if (this.value !== value) {\n        this.__dispatchChange = true;\n      }\n\n      this._selectedDate = dateToSelect;\n    }\n\n    /** @private */\n    _close() {\n      this._focus();\n      this.close();\n    }\n\n    /** @private */\n    __bringToFront() {\n      requestAnimationFrame(() => {\n        this.$.overlay.bringToFront();\n      });\n    }\n\n    /** @private */\n    // eslint-disable-next-line max-params\n    _isNoInput(inputElement, fullscreen, ios, i18n, opened, autoOpenDisabled) {\n      // On fullscreen mode, text input is disabled if auto-open isn't disabled or\n      // whenever the dropdown is opened\n      const noInputOnFullscreenMode = fullscreen && (!autoOpenDisabled || opened);\n      // On iOS, text input is disabled whenever the dropdown is opened, because\n      // the virtual keyboard doesn't affect the viewport metrics and thus the\n      // dropdown could get covered by the keyboard.\n      const noInputOnIos = ios && opened;\n\n      return !inputElement || noInputOnFullscreenMode || noInputOnIos || !i18n.parseDate;\n    }\n\n    /** @private */\n    _formatISO(date) {\n      if (!(date instanceof Date)) {\n        return '';\n      }\n\n      const pad = (num, fmt = '00') => (fmt + num).substr((fmt + num).length - fmt.length);\n\n      let yearSign = '';\n      let yearFmt = '0000';\n      let yearAbs = date.getFullYear();\n      if (yearAbs < 0) {\n        yearAbs = -yearAbs;\n        yearSign = '-';\n        yearFmt = '000000';\n      } else if (date.getFullYear() >= 10000) {\n        yearSign = '+';\n        yearFmt = '000000';\n      }\n\n      const year = yearSign + pad(yearAbs, yearFmt);\n      const month = pad(date.getMonth() + 1);\n      const day = pad(date.getDate());\n      return [year, month, day].join('-');\n    }\n\n    /** @protected */\n    _inputElementChanged(input) {\n      super._inputElementChanged(input);\n      if (input) {\n        input.autocomplete = 'off';\n        input.setAttribute('role', 'combobox');\n        input.setAttribute('aria-haspopup', 'dialog');\n        input.setAttribute('aria-expanded', !!this.opened);\n        this._applyInputValue(this._selectedDate);\n      }\n    }\n\n    /** @protected */\n    _openedChanged(opened) {\n      if (opened && !this._overlayInitialized) {\n        this._initOverlay();\n      }\n      if (this._overlayInitialized) {\n        this.$.overlay.opened = opened;\n      }\n      if (this.inputElement) {\n        this.inputElement.setAttribute('aria-expanded', opened);\n      }\n    }\n\n    /** @private */\n    _selectedDateChanged(selectedDate, formatDate) {\n      if (selectedDate === undefined || formatDate === undefined) {\n        return;\n      }\n      const value = this._formatISO(selectedDate);\n\n      if (!this.__keepInputValue) {\n        this._applyInputValue(selectedDate);\n      }\n\n      if (value !== this.value) {\n        this.validate();\n        this.value = value;\n      }\n      this._ignoreFocusedDateChange = true;\n      this._focusedDate = selectedDate;\n      this._ignoreFocusedDateChange = false;\n    }\n\n    /** @private */\n    _focusedDateChanged(focusedDate, formatDate) {\n      if (focusedDate === undefined || formatDate === undefined) {\n        return;\n      }\n      if (!this._ignoreFocusedDateChange && !this._noInput) {\n        this._applyInputValue(focusedDate);\n      }\n    }\n\n    /** @private */\n    __getOverlayTheme(theme, overlayInitialized) {\n      if (overlayInitialized) {\n        return theme;\n      }\n    }\n\n    /**\n     * Override the value observer from `InputMixin` to implement custom\n     * handling of the `value` property. The date-picker doesn't forward\n     * the value directly to the input like the default implementation of `InputMixin`.\n     * Instead, it parses the value into a date, puts it in `_selectedDate` which\n     * is then displayed in the input with respect to the specified date format.\n     *\n     * @param {string | undefined} value\n     * @param {string | undefined} oldValue\n     * @protected\n     * @override\n     */\n    _valueChanged(value, oldValue) {\n      const newDate = parseDate(value);\n\n      if (value && !newDate) {\n        // The new value cannot be parsed, revert the old value.\n        this.value = oldValue;\n        return;\n      }\n\n      if (value) {\n        if (!dateEquals(this._selectedDate, newDate)) {\n          // Update the date instance only if the date has actually changed.\n          this._selectedDate = newDate;\n\n          if (oldValue !== undefined) {\n            // Validate only if `value` changes after initialization.\n            this.validate();\n          }\n        }\n      } else {\n        this._selectedDate = null;\n      }\n\n      this._toggleHasValue(this._hasValue);\n    }\n\n    /** @protected */\n    _onOverlayOpened() {\n      const parsedInitialPosition = parseDate(this.initialPosition);\n\n      const initialPosition =\n        this._selectedDate || this._overlayContent.initialPosition || parsedInitialPosition || new Date();\n\n      if (parsedInitialPosition || dateAllowed(initialPosition, this._minDate, this._maxDate)) {\n        this._overlayContent.initialPosition = initialPosition;\n      } else {\n        this._overlayContent.initialPosition = getClosestDate(initialPosition, [this._minDate, this._maxDate]);\n      }\n\n      this._overlayContent.scrollToDate(this._overlayContent.focusedDate || this._overlayContent.initialPosition);\n      // Have a default focused date\n      this._ignoreFocusedDateChange = true;\n      this._overlayContent.focusedDate = this._overlayContent.focusedDate || this._overlayContent.initialPosition;\n      this._ignoreFocusedDateChange = false;\n\n      window.addEventListener('scroll', this._boundOnScroll, true);\n\n      if (this._focusOverlayOnOpen) {\n        this._overlayContent.focusDateElement();\n        this._focusOverlayOnOpen = false;\n      } else {\n        this._focus();\n      }\n\n      if (this._noInput && this.focusElement) {\n        this.focusElement.blur();\n        this._overlayContent.focusDateElement();\n      }\n    }\n\n    /** @private */\n    _selectParsedOrFocusedDate() {\n      // Select the parsed input or focused date\n      this._ignoreFocusedDateChange = true;\n      if (this.i18n.parseDate) {\n        const inputValue = this._inputValue || '';\n        const parsedDate = this._getParsedDate(inputValue);\n\n        if (this._isValidDate(parsedDate)) {\n          this._selectDate(parsedDate);\n        } else {\n          this.__keepInputValue = true;\n          this._selectDate(null);\n          this._selectedDate = null;\n          this.__keepInputValue = false;\n        }\n      } else if (this._focusedDate) {\n        this._selectDate(this._focusedDate);\n      }\n      this._ignoreFocusedDateChange = false;\n    }\n\n    /** @protected */\n    _onOverlayClosed() {\n      window.removeEventListener('scroll', this._boundOnScroll, true);\n\n      // No need to select date on close if it was confirmed by the user.\n      if (this.__userConfirmedDate) {\n        this.__userConfirmedDate = false;\n      } else {\n        this._selectParsedOrFocusedDate();\n      }\n\n      if (this._nativeInput && this._nativeInput.selectionStart) {\n        this._nativeInput.selectionStart = this._nativeInput.selectionEnd;\n      }\n      // No need to revalidate the value after `_selectedDateChanged`\n      // Needed in case the value was not changed: open and close dropdown.\n      if (!this.value) {\n        this.validate();\n      }\n    }\n\n    /** @private */\n    _onScroll(e) {\n      if (e.target === window || !this._overlayContent.contains(e.target)) {\n        this._overlayContent._repositionYearScroller();\n      }\n    }\n\n    /** @protected */\n    _focus() {\n      if (!this._noInput) {\n        this.inputElement.focus();\n      }\n    }\n\n    /** @private */\n    _focusAndSelect() {\n      this._focus();\n      this._setSelectionRange(0, this._inputValue.length);\n    }\n\n    /** @private */\n    _applyInputValue(date) {\n      this._inputValue = date ? this._getFormattedDate(this.i18n.formatDate, date) : '';\n    }\n\n    /** @private */\n    _getFormattedDate(formatDate, date) {\n      return formatDate(extractDateParts(date));\n    }\n\n    /** @private */\n    _setSelectionRange(a, b) {\n      if (this._nativeInput && this._nativeInput.setSelectionRange) {\n        this._nativeInput.setSelectionRange(a, b);\n      }\n    }\n\n    /** @private */\n    _isValidDate(d) {\n      return d && !isNaN(d.getTime());\n    }\n\n    /**\n     * Override an event listener from `InputConstraintsMixin`\n     * to have date-picker fully control when to fire a change event.\n     * @protected\n     */\n    _onChange(event) {\n      // For change event on the native <input> blur, after the input is cleared,\n      // we schedule change event to be dispatched on date-picker blur.\n      if (this._inputValue === '') {\n        this.__dispatchChange = true;\n      }\n\n      event.stopPropagation();\n    }\n\n    /**\n     * @param {Event} event\n     * @private\n     */\n    _onClick(event) {\n      // Clear button click is handled in separate listener\n      // but bubbles to the host, so we need to ignore it.\n      if (!this._isClearButton(event)) {\n        this._onHostClick(event);\n      }\n    }\n\n    /**\n     * @param {Event} event\n     * @private\n     */\n    _onHostClick(event) {\n      if (!this.autoOpenDisabled || this._noInput) {\n        event.preventDefault();\n        this.open();\n      }\n    }\n\n    /**\n     * Override an event listener from `InputControlMixin`\n     * to validate and dispatch change on clear.\n     * @protected\n     */\n    _onClearButtonClick(event) {\n      event.preventDefault();\n      this.value = '';\n      this._inputValue = '';\n      this.validate();\n      this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     * @param {KeyboardEvent} e\n     * @protected\n     * @override\n     */\n    _onKeyDown(e) {\n      super._onKeyDown(e);\n\n      if (this._noInput) {\n        // The input element cannot be readonly as it would conflict with\n        // the required attribute. Both are not allowed on an input element.\n        // Therefore we prevent default on most keydown events.\n        const allowedKeys = [\n          9, // Tab\n        ];\n        if (allowedKeys.indexOf(e.keyCode) === -1) {\n          e.preventDefault();\n        }\n      }\n\n      switch (e.key) {\n        case 'ArrowDown':\n        case 'ArrowUp':\n          // Prevent scrolling the page with arrows\n          e.preventDefault();\n          if (this.opened) {\n            // The overlay can be opened with ctrl + option + shift in VoiceOver\n            // and without this logic, it won't be possible to focus the dialog opened this way.\n            this._overlayContent.focusDateElement();\n          } else {\n            this._focusOverlayOnOpen = true;\n            this.open();\n          }\n          break;\n        case 'Tab':\n          if (this.opened) {\n            e.preventDefault();\n            e.stopPropagation();\n            // Clear the selection range (remains visible on IE)\n            this._setSelectionRange(0, 0);\n            if (e.shiftKey) {\n              this._overlayContent.focusCancel();\n            } else {\n              this._overlayContent.focusDateElement();\n            }\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     *\n     * @param {!KeyboardEvent} _event\n     * @protected\n     * @override\n     */\n    _onEnter(_event) {\n      const oldValue = this.value;\n      if (this.opened) {\n        // Closing will implicitly select parsed or focused date\n        this.close();\n      } else {\n        this._selectParsedOrFocusedDate();\n      }\n      if (oldValue === this.value) {\n        this.validate();\n      }\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     * Do not call `super` in order to override clear\n     * button logic defined in `InputControlMixin`.\n     *\n     * @param {!KeyboardEvent} event\n     * @protected\n     * @override\n     */\n    _onEscape(event) {\n      // Closing overlay is handled in vaadin-overlay-escape-press event listener.\n      if (this.opened) {\n        return;\n      }\n\n      if (this.clearButtonVisible && !!this.value) {\n        // Stop event from propagating to the host element\n        // to avoid closing dialog when clearing on Esc\n        event.stopPropagation();\n        this._onClearButtonClick(event);\n        return;\n      }\n\n      if (this.autoOpenDisabled) {\n        // Do not restore selected date if Esc was pressed after clearing input field\n        if (this.inputElement.value === '') {\n          this._selectDate(null);\n        }\n        this._applyInputValue(this._selectedDate);\n      } else {\n        this._focusedDate = this._selectedDate;\n        this._selectParsedOrFocusedDate();\n      }\n    }\n\n    /** @private */\n    _getParsedDate(inputValue = this._inputValue) {\n      const dateObject = this.i18n.parseDate && this.i18n.parseDate(inputValue);\n      const parsedDate = dateObject && parseDate(`${dateObject.year}-${dateObject.month + 1}-${dateObject.day}`);\n      return parsedDate;\n    }\n\n    /** @protected */\n    _isClearButton(event) {\n      return event.composedPath()[0] === this.clearElement;\n    }\n\n    /**\n     * Override an event listener from `InputMixin`\n     * @protected\n     */\n    _onInput() {\n      if (!this.opened && this.inputElement.value && !this.autoOpenDisabled) {\n        this.open();\n      }\n      this._userInputValueChanged();\n    }\n\n    /** @private */\n    _userInputValueChanged() {\n      if (this._inputValue) {\n        const parsedDate = this._getParsedDate();\n\n        if (this._isValidDate(parsedDate)) {\n          this._ignoreFocusedDateChange = true;\n          if (!dateEquals(parsedDate, this._focusedDate)) {\n            this._focusedDate = parsedDate;\n          }\n          this._ignoreFocusedDateChange = false;\n        }\n      }\n    }\n\n    /** @private */\n    get _overlayContent() {\n      return this.$.overlay.content.querySelector('#overlay-content');\n    }\n\n    /** @private */\n    __computeMinOrMaxDate(dateString) {\n      return parseDate(dateString);\n    }\n\n    /**\n     * Fired when the user commits a value change.\n     *\n     * @event change\n     */\n\n    /**\n     * Fired when `value` property value changes.\n     *\n     * @event value-changed\n     */\n\n    /**\n     * Fired when `opened` property value changes.\n     *\n     * @event opened-changed\n     */\n  };\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/input-container/src/vaadin-input-container.js';\nimport './vaadin-date-picker-overlay.js';\nimport './vaadin-date-picker-overlay-content.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\nimport { InputControlMixin } from '@vaadin/field-base/src/input-control-mixin.js';\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\nimport { inputFieldShared } from '@vaadin/field-base/src/styles/input-field-shared-styles.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DatePickerMixin } from './vaadin-date-picker-mixin.js';\nimport { datePickerStyles } from './vaadin-date-picker-styles.js';\n\nregisterStyles('vaadin-date-picker', [inputFieldShared, datePickerStyles], { moduleId: 'vaadin-date-picker-styles' });\n\n/**\n * `<vaadin-date-picker>` is an input field that allows to enter a date by typing or by selecting from a calendar overlay.\n *\n * ```html\n * <vaadin-date-picker label=\"Birthday\"></vaadin-date-picker>\n * ```\n *\n * ```js\n * datePicker.value = '2016-03-02';\n * ```\n *\n * When the selected `value` is changed, a `value-changed` event is triggered.\n *\n * ### Styling\n *\n * The following custom properties are available for styling:\n *\n * Custom property                | Description                | Default\n * -------------------------------|----------------------------|---------\n * `--vaadin-field-default-width` | Default width of the field | `12em`\n *\n * `<vaadin-date-picker>` provides the same set of shadow DOM parts and state attributes as `<vaadin-text-field>`.\n * See [`<vaadin-text-field>`](#/elements/vaadin-text-field) for the styling documentation.\n *\n * In addition to `<vaadin-text-field>` parts, the following parts are available for theming:\n *\n * Part name             | Description\n * ----------------------|--------------------\n * `toggle-button`       | Toggle button\n * `overlay-content`     | The overlay element\n *\n * In addition to `<vaadin-text-field>` state attributes, the following state attributes are available for theming:\n *\n * Attribute  | Description                                      | Part name\n * -----------|--------------------------------------------------|-----------\n * `opened`   | Set when the date selector overlay is opened     | :host\n * `today`    | Set on the date corresponding to the current day | date\n * `selected` | Set on the selected date                         | date\n *\n * If you want to replace the default `<input>` and its container with a custom implementation to get full control\n * over the input field, consider using the [`<vaadin-date-picker-light>`](#/elements/vaadin-date-picker-light) element.\n *\n * ### Internal components\n *\n * In addition to `<vaadin-date-picker>` itself, the following internal\n * components are themable:\n *\n * - `<vaadin-date-picker-overlay>` - has the same API as [`<vaadin-overlay>`](#/elements/vaadin-overlay).\n * - `<vaadin-date-picker-overlay-content>`\n * - `<vaadin-month-calendar>`\n * - [`<vaadin-input-container>`](#/elements/vaadin-input-container) - an internal element wrapping the input.\n *\n * In order to style the overlay content, use `<vaadin-date-picker-overlay-content>` shadow DOM parts:\n *\n * Part name             | Description\n * ----------------------|--------------------\n * `overlay-header`      | Fullscreen mode header\n * `label`               | Fullscreen mode value/label\n * `clear-button`        | Fullscreen mode clear button\n * `toggle-button`       | Fullscreen mode toggle button\n * `years-toggle-button` | Fullscreen mode years scroller toggle\n * `months`              | Months scroller\n * `years`               | Years scroller\n * `toolbar`             | Footer bar with buttons\n * `today-button`        | Today button\n * `cancel-button`       | Cancel button\n * `month`               | Month calendar\n * `year-number`         | Year number\n * `year-separator`      | Year separator\n *\n * In order to style the month calendar, use `<vaadin-month-calendar>` shadow DOM parts:\n *\n * Part name             | Description\n * ----------------------|--------------------\n * `month-header`        | Month title\n * `weekdays`            | Weekday container\n * `weekday`             | Weekday element\n * `week-numbers`        | Week numbers container\n * `week-number`         | Week number element\n * `date`                | Date element\n *\n * Note: the `theme` attribute value set on `<vaadin-date-picker>` is\n * propagated to the internal components listed above.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n * @fires {CustomEvent} validated - Fired whenever the field is validated.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes InputControlMixin\n * @mixes DatePickerMixin\n */\nclass DatePicker extends DatePickerMixin(InputControlMixin(ThemableMixin(ElementMixin(PolymerElement)))) {\n  static get is() {\n    return 'vaadin-date-picker';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host([opened]) {\n          pointer-events: auto;\n        }\n      </style>\n\n      <div class=\"vaadin-date-picker-container\">\n        <div part=\"label\">\n          <slot name=\"label\"></slot>\n          <span part=\"required-indicator\" aria-hidden=\"true\" on-click=\"focus\"></span>\n        </div>\n\n        <vaadin-input-container\n          part=\"input-field\"\n          readonly=\"[[readonly]]\"\n          disabled=\"[[disabled]]\"\n          invalid=\"[[invalid]]\"\n          theme$=\"[[_theme]]\"\n        >\n          <slot name=\"prefix\" slot=\"prefix\"></slot>\n          <slot name=\"input\"></slot>\n          <div id=\"clearButton\" part=\"clear-button\" slot=\"suffix\" aria-hidden=\"true\"></div>\n          <div part=\"toggle-button\" slot=\"suffix\" aria-hidden=\"true\" on-click=\"_toggle\"></div>\n        </vaadin-input-container>\n\n        <div part=\"helper-text\">\n          <slot name=\"helper\"></slot>\n        </div>\n\n        <div part=\"error-message\">\n          <slot name=\"error-message\"></slot>\n        </div>\n      </div>\n\n      <vaadin-date-picker-overlay\n        id=\"overlay\"\n        fullscreen$=\"[[_fullscreen]]\"\n        theme$=\"[[__getOverlayTheme(_theme, _overlayInitialized)]]\"\n        on-vaadin-overlay-open=\"_onOverlayOpened\"\n        on-vaadin-overlay-closing=\"_onOverlayClosed\"\n        restore-focus-on-close\n        restore-focus-node=\"[[inputElement]]\"\n        disable-upgrade\n      >\n        <template>\n          <vaadin-date-picker-overlay-content\n            id=\"overlay-content\"\n            i18n=\"[[i18n]]\"\n            fullscreen$=\"[[_fullscreen]]\"\n            label=\"[[label]]\"\n            selected-date=\"[[_selectedDate]]\"\n            focused-date=\"{{_focusedDate}}\"\n            show-week-numbers=\"[[showWeekNumbers]]\"\n            min-date=\"[[_minDate]]\"\n            max-date=\"[[_maxDate]]\"\n            part=\"overlay-content\"\n            theme$=\"[[__getOverlayTheme(_theme, _overlayInitialized)]]\"\n          ></vaadin-date-picker-overlay-content>\n        </template>\n      </vaadin-date-picker-overlay>\n\n      <slot name=\"tooltip\"></slot>\n    `;\n  }\n\n  /**\n   * Used by `InputControlMixin` as a reference to the clear button element.\n   * @protected\n   * @return {!HTMLElement}\n   */\n  get clearElement() {\n    return this.$.clearButton;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addController(\n      new InputController(this, (input) => {\n        this._setInputElement(input);\n        this._setFocusElement(input);\n        this.stateTarget = input;\n        this.ariaTarget = input;\n      }),\n    );\n    this.addController(new LabelledInputController(this.inputElement, this._labelController));\n\n    this._tooltipController = new TooltipController(this);\n    this.addController(this._tooltipController);\n    this._tooltipController.setPosition('top');\n    this._tooltipController.setShouldShow((target) => !target.opened);\n\n    const toggleButton = this.shadowRoot.querySelector('[part=\"toggle-button\"]');\n    toggleButton.addEventListener('mousedown', (e) => e.preventDefault());\n  }\n\n  /** @protected */\n  _initOverlay() {\n    super._initOverlay();\n\n    this.$.overlay.addEventListener('vaadin-overlay-close', this._onVaadinOverlayClose.bind(this));\n  }\n\n  /** @private */\n  _onVaadinOverlayClose(e) {\n    if (e.detail.sourceEvent && e.detail.sourceEvent.composedPath().includes(this)) {\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  _toggle(e) {\n    e.stopPropagation();\n    this[this._overlayInitialized && this.$.overlay.opened ? 'close' : 'open']();\n  }\n\n  // Workaround https://github.com/vaadin/web-components/issues/2855\n  /** @protected */\n  _openedChanged(opened) {\n    super._openedChanged(opened);\n\n    this.$.overlay.positionTarget = this.shadowRoot.querySelector('[part=\"input-field\"]');\n    this.$.overlay.noVerticalOverlap = true;\n  }\n}\n\ncustomElements.define(DatePicker.is, DatePicker);\n\nexport { DatePicker };\n", "/**\n * @license\n * Copyright (c) 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst loader = css`\n  [part~='loader'] {\n    height: 2px;\n    background: var(--material-background-color)\n      linear-gradient(\n        90deg,\n        transparent 0%,\n        transparent 20%,\n        var(--material-primary-color) 20%,\n        var(--material-primary-color) 40%,\n        transparent 40%,\n        transparent 60%,\n        var(--material-primary-color) 60%,\n        var(--material-primary-color) 80%,\n        transparent 80%,\n        transparent 100%\n      )\n      0 0 / 400% 100% repeat-x;\n    opacity: 0;\n  }\n\n  :host(:not([loading])) [part~='loader'] {\n    display: none;\n  }\n\n  :host([loading]) [part='loader'] {\n    animation: 3s linear infinite material-loader-progress, 0.3s 0.1s both material-loader-fade-in;\n  }\n\n  [part='loader']::before {\n    content: '';\n    display: block;\n    height: 100%;\n    opacity: 0.16;\n    background: var(--material-primary-color);\n  }\n\n  @keyframes material-loader-fade-in {\n    0% {\n      opacity: 0;\n    }\n\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @keyframes material-loader-progress {\n    0% {\n      background-position: 0 0;\n      background-size: 300% 100%;\n    }\n\n    33% {\n      background-position: -100% 0;\n      background-size: 400% 100%;\n    }\n\n    67% {\n      background-position: -200% 0;\n      background-size: 250% 100%;\n    }\n\n    100% {\n      background-position: -300% 0;\n      background-size: 300% 100%;\n    }\n  }\n\n  /* RTL specific styles */\n\n  @keyframes material-loader-progress-rtl {\n    0% {\n      background-position: 100% 0;\n      background-size: 300% 100%;\n    }\n\n    33% {\n      background-position: 200% 0;\n      background-size: 400% 100%;\n    }\n\n    67% {\n      background-position: 300% 0;\n      background-size: 250% 100%;\n    }\n\n    100% {\n      background-position: 400% 0;\n      background-size: 300% 100%;\n    }\n  }\n\n  :host([loading][dir='rtl']) [part='loader'] {\n    animation: 3s linear infinite material-loader-progress-rtl, 0.3s 0.1s both material-loader-fade-in;\n  }\n`;\n\nexport { loader };\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport { registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { overlay } from './overlay.js';\n\nconst menuOverlay = overlay;\n\nregisterStyles('', menuOverlay, { moduleId: 'material-menu-overlay' });\n\nexport { menuOverlay };\n", "import '@vaadin/vaadin-material-styles/color.js';\nimport '@vaadin/overlay/theme/material/vaadin-overlay.js';\nimport { loader } from '@vaadin/vaadin-material-styles/mixins/loader.js';\nimport { menuOverlay } from '@vaadin/vaadin-material-styles/mixins/menu-overlay.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst comboBoxOverlay = css`\n  :host {\n    --_vaadin-combo-box-items-container-border-width: 8px 0;\n    --_vaadin-combo-box-items-container-border-style: solid;\n    --_vaadin-combo-box-items-container-border-color: transparent;\n  }\n\n  [part='overlay'] {\n    position: relative;\n    overflow: visible;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n\n  [part='content'] {\n    padding: 0;\n  }\n\n  [part~='loader'] {\n    position: absolute;\n    z-index: 1;\n    top: -2px;\n    left: 0;\n    right: 0;\n  }\n`;\n\nregisterStyles('vaadin-combo-box-overlay', [menuOverlay, comboBoxOverlay, loader], {\n  moduleId: 'material-combo-box-overlay',\n});\n", "import '@vaadin/vaadin-material-styles/font-icons.js';\nimport '@vaadin/vaadin-material-styles/color.js';\nimport '@vaadin/vaadin-material-styles/typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst item = css`\n  :host {\n    display: flex;\n    align-items: center;\n    box-sizing: border-box;\n    min-height: 36px;\n    padding: 8px 32px 8px 10px;\n    overflow: hidden;\n    font-family: var(--material-font-family);\n    font-size: var(--material-small-font-size);\n    line-height: 24px;\n  }\n\n  /* It's the list-box's responsibility to add the focus style */\n  :host([focused]) {\n    outline: none;\n  }\n\n  /* Checkmark */\n  [part='checkmark']::before {\n    display: var(--_material-item-selected-icon-display, none);\n    content: '';\n    font-family: material-icons;\n    font-size: 24px;\n    line-height: 1;\n    font-weight: 400;\n    width: 24px;\n    text-align: center;\n    margin-right: 10px;\n    color: var(--material-secondary-text-color);\n    flex: none;\n  }\n\n  :host([selected]) [part='checkmark']::before {\n    content: var(--material-icons-check);\n  }\n\n  @media (any-hover: hover) {\n    :host(:hover:not([disabled])) {\n      background-color: var(--material-secondary-background-color);\n    }\n\n    :host([focused]:not([disabled])) {\n      background-color: var(--material-divider-color);\n    }\n  }\n\n  /* Disabled */\n  :host([disabled]) {\n    color: var(--material-disabled-text-color);\n    cursor: default;\n    pointer-events: none;\n  }\n\n  /* RTL specific styles */\n  :host([dir='rtl']) {\n    padding: 8px 10px 8px 32px;\n  }\n\n  :host([dir='rtl']) [part='checkmark']::before {\n    margin-right: 0;\n    margin-left: 10px;\n  }\n`;\n\nregisterStyles('vaadin-item', item, { moduleId: 'material-item' });\n\nexport { item };\n", "import '@vaadin/vaadin-material-styles/color.js';\nimport '@vaadin/vaadin-material-styles/font-icons.js';\nimport '@vaadin/vaadin-material-styles/typography.js';\nimport { item } from '@vaadin/item/theme/material/vaadin-item-styles.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst comboBoxItem = css`\n  :host {\n    cursor: pointer;\n    -webkit-tap-highlight-color: transparent;\n    padding: 4px 10px;\n    --_material-item-selected-icon-display: block;\n  }\n`;\n\nregisterStyles('vaadin-combo-box-item', [item, comboBoxItem], {\n  moduleId: 'material-combo-box-item',\n});\n", "/**\n * @license\n * Copyright (c) 2018 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/vaadin-material-styles/font-icons.js';\nimport { inputFieldShared } from '@vaadin/vaadin-material-styles/mixins/input-field-shared.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst timePicker = css`\n  [part~='toggle-button']::before {\n    content: var(--material-icons-clock);\n  }\n`;\n\nregisterStyles('vaadin-time-picker', [inputFieldShared, timePicker], { moduleId: 'material-time-picker' });\n", "/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * An item element used by the `<vaadin-combo-box>` dropdown.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name   | Description\n * ------------|--------------\n * `checkmark` | The graphical checkmark shown for a selected item\n * `content`   | The element that wraps the item content\n *\n * The following state attributes are exposed for styling:\n *\n * Attribute    | Description\n * -------------|-------------\n * `selected`   | Set when the item is selected\n * `focused`    | Set when the item is focused\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @mixes ThemableMixin\n * @mixes DirMixin\n * @private\n */\nexport class ComboBoxItem extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n      </style>\n      <span part=\"checkmark\" aria-hidden=\"true\"></span>\n      <div part=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-combo-box-item';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The index of the item\n       */\n      index: Number,\n\n      /**\n       * The item to render\n       * @type {(String|Object)}\n       */\n      item: Object,\n\n      /**\n       * The text label corresponding to the item\n       */\n      label: String,\n\n      /**\n       * True when item is selected\n       */\n      selected: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * True when item is focused\n       */\n      focused: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Custom function for rendering the content of the `<vaadin-combo-box-item>` propagated from the combo box element.\n       */\n      renderer: Function,\n\n      /**\n       * Saved instance of a custom renderer function.\n       */\n      _oldRenderer: Function,\n    };\n  }\n\n  static get observers() {\n    return ['__rendererOrItemChanged(renderer, index, item.*, selected, focused)', '__updateLabel(label, renderer)'];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this._comboBox = this.parentNode.comboBox;\n\n    const hostDir = this._comboBox.getAttribute('dir');\n    if (hostDir) {\n      this.setAttribute('dir', hostDir);\n    }\n  }\n\n  /**\n   * Requests an update for the content of the item.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (!this.renderer) {\n      return;\n    }\n\n    const model = {\n      index: this.index,\n      item: this.item,\n      focused: this.focused,\n      selected: this.selected,\n    };\n\n    this.renderer(this, this._comboBox, model);\n  }\n\n  /** @private */\n  __rendererOrItemChanged(renderer, index, item) {\n    if (item === undefined || index === undefined) {\n      return;\n    }\n\n    if (this._oldRenderer !== renderer) {\n      this.innerHTML = '';\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n      // When clearing the rendered content, this part needs to be manually disposed of.\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n      delete this._$litPart$;\n    }\n\n    if (renderer) {\n      this._oldRenderer = renderer;\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __updateLabel(label, renderer) {\n    if (renderer) {\n      return;\n    }\n\n    this.textContent = label;\n  }\n}\n\ncustomElements.define(ComboBoxItem.is, ComboBoxItem);\n", "/**\n * @license\n * Copyright (c) 2018 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ComboBoxItem } from '@vaadin/combo-box/src/vaadin-combo-box-item.js';\n\n/**\n * An element used for items in `<vaadin-time-picker>`.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------|-------------\n * `content` | The element that wraps the item content\n *\n * The following state attributes are exposed for styling:\n *\n * Attribute  | Description                   | Part name\n * -----------|-------------------------------|-----------\n * `selected` | Set when the item is selected | :host\n * `focused`  | Set when the item is focused  | :host\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @extends ComboBoxItem\n * @private\n */\nclass TimePickerItem extends ComboBoxItem {\n  static get is() {\n    return 'vaadin-time-picker-item';\n  }\n}\n\ncustomElements.define(TimePickerItem.is, TimePickerItem);\n", "/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\nimport { animationFrame, idlePeriod, microTask } from './async.js';\nimport { Debouncer, enqueueDebouncer, flush } from './debounce.js';\n\nconst IOS = navigator.userAgent.match(/iP(?:hone|ad;(?: U;)? CPU) OS (\\d+)/);\nconst IOS_TOUCH_SCROLLING = IOS && IOS[1] >= 8;\nconst DEFAULT_PHYSICAL_COUNT = 3;\n\n/**\n * DO NOT EDIT THIS FILE!\n *\n * This file includes the iron-list scrolling engine copied from\n * https://github.com/PolymerElements/iron-list/blob/master/iron-list.js\n *\n * If something in the scrolling engine needs to be changed\n * for the virtualizer's purposes, override a function\n * in virtualizer-iron-list-adapter.js instead of changing it here.\n * If a function on this file is no longer needed, the code can be safely deleted.\n *\n * This will allow us to keep the iron-list code here as close to\n * the original as possible.\n */\nexport const ironList = {\n  /**\n   * The ratio of hidden tiles that should remain in the scroll direction.\n   * Recommended value ~0.5, so it will distribute tiles evenly in both\n   * directions.\n   */\n  _ratio: 0.5,\n\n  /**\n   * The padding-top value for the list.\n   */\n  _scrollerPaddingTop: 0,\n\n  /**\n   * This value is a cached value of `scrollTop` from the last `scroll` event.\n   */\n  _scrollPosition: 0,\n\n  /**\n   * The sum of the heights of all the tiles in the DOM.\n   */\n  _physicalSize: 0,\n\n  /**\n   * The average `offsetHeight` of the tiles observed till now.\n   */\n  _physicalAverage: 0,\n\n  /**\n   * The number of tiles which `offsetHeight` > 0 observed until now.\n   */\n  _physicalAverageCount: 0,\n\n  /**\n   * The Y position of the item rendered in the `_physicalStart`\n   * tile relative to the scrolling list.\n   */\n  _physicalTop: 0,\n\n  /**\n   * The number of items in the list.\n   */\n  _virtualCount: 0,\n\n  /**\n   * The estimated scroll height based on `_physicalAverage`\n   */\n  _estScrollHeight: 0,\n\n  /**\n   * The scroll height of the dom node\n   */\n  _scrollHeight: 0,\n\n  /**\n   * The height of the list. This is referred as the viewport in the context of\n   * list.\n   */\n  _viewportHeight: 0,\n\n  /**\n   * The width of the list. This is referred as the viewport in the context of\n   * list.\n   */\n  _viewportWidth: 0,\n\n  /**\n   * An array of DOM nodes that are currently in the tree\n   * @type {?Array<!HTMLElement>}\n   */\n  _physicalItems: null,\n\n  /**\n   * An array of heights for each item in `_physicalItems`\n   * @type {?Array<number>}\n   */\n  _physicalSizes: null,\n\n  /**\n   * A cached value for the first visible index.\n   * See `firstVisibleIndex`\n   * @type {?number}\n   */\n  _firstVisibleIndexVal: null,\n\n  /**\n   * A cached value for the last visible index.\n   * See `lastVisibleIndex`\n   * @type {?number}\n   */\n  _lastVisibleIndexVal: null,\n\n  /**\n   * The max number of pages to render. One page is equivalent to the height of\n   * the list.\n   */\n  _maxPages: 2,\n\n  /**\n   * The cost of stamping a template in ms.\n   */\n  _templateCost: 0,\n\n  /**\n   * The bottom of the physical content.\n   */\n  get _physicalBottom() {\n    return this._physicalTop + this._physicalSize;\n  },\n\n  /**\n   * The bottom of the scroll.\n   */\n  get _scrollBottom() {\n    return this._scrollPosition + this._viewportHeight;\n  },\n\n  /**\n   * The n-th item rendered in the last physical item.\n   */\n  get _virtualEnd() {\n    return this._virtualStart + this._physicalCount - 1;\n  },\n\n  /**\n   * The height of the physical content that isn't on the screen.\n   */\n  get _hiddenContentSize() {\n    return this._physicalSize - this._viewportHeight;\n  },\n\n  /**\n   * The maximum scroll top value.\n   */\n  get _maxScrollTop() {\n    return this._estScrollHeight - this._viewportHeight + this._scrollOffset;\n  },\n\n  /**\n   * The largest n-th value for an item such that it can be rendered in\n   * `_physicalStart`.\n   */\n  get _maxVirtualStart() {\n    const virtualCount = this._virtualCount;\n    return Math.max(0, virtualCount - this._physicalCount);\n  },\n\n  get _virtualStart() {\n    return this._virtualStartVal || 0;\n  },\n\n  set _virtualStart(val) {\n    val = this._clamp(val, 0, this._maxVirtualStart);\n    this._virtualStartVal = val;\n  },\n\n  get _physicalStart() {\n    return this._physicalStartVal || 0;\n  },\n\n  /**\n   * The k-th tile that is at the top of the scrolling list.\n   */\n  set _physicalStart(val) {\n    val %= this._physicalCount;\n    if (val < 0) {\n      val = this._physicalCount + val;\n    }\n    this._physicalStartVal = val;\n  },\n\n  /**\n   * The k-th tile that is at the bottom of the scrolling list.\n   */\n  get _physicalEnd() {\n    return (this._physicalStart + this._physicalCount - 1) % this._physicalCount;\n  },\n\n  get _physicalCount() {\n    return this._physicalCountVal || 0;\n  },\n\n  set _physicalCount(val) {\n    this._physicalCountVal = val;\n  },\n\n  /**\n   * An optimal physical size such that we will have enough physical items\n   * to fill up the viewport and recycle when the user scrolls.\n   *\n   * This default value assumes that we will at least have the equivalent\n   * to a viewport of physical items above and below the user's viewport.\n   */\n  get _optPhysicalSize() {\n    return this._viewportHeight === 0 ? Infinity : this._viewportHeight * this._maxPages;\n  },\n\n  /**\n   * True if the current list is visible.\n   */\n  get _isVisible() {\n    return Boolean(this.offsetWidth || this.offsetHeight);\n  },\n\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get firstVisibleIndex() {\n    let idx = this._firstVisibleIndexVal;\n    if (idx == null) {\n      let physicalOffset = this._physicalTop + this._scrollOffset;\n\n      idx =\n        this._iterateItems((pidx, vidx) => {\n          physicalOffset += this._getPhysicalSizeIncrement(pidx);\n\n          if (physicalOffset > this._scrollPosition) {\n            return vidx;\n          }\n        }) || 0;\n      this._firstVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get lastVisibleIndex() {\n    let idx = this._lastVisibleIndexVal;\n    if (idx == null) {\n      let physicalOffset = this._physicalTop + this._scrollOffset;\n      this._iterateItems((pidx, vidx) => {\n        if (physicalOffset < this._scrollBottom) {\n          idx = vidx;\n        }\n        physicalOffset += this._getPhysicalSizeIncrement(pidx);\n      });\n\n      this._lastVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  get _scrollOffset() {\n    return this._scrollerPaddingTop + this.scrollOffset;\n  },\n\n  /**\n   * Recycles the physical items when needed.\n   */\n  _scrollHandler() {\n    const scrollTop = Math.max(0, Math.min(this._maxScrollTop, this._scrollTop));\n    let delta = scrollTop - this._scrollPosition;\n    const isScrollingDown = delta >= 0;\n    // Track the current scroll position.\n    this._scrollPosition = scrollTop;\n    // Clear indexes for first and last visible indexes.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n    // Random access.\n    if (Math.abs(delta) > this._physicalSize && this._physicalSize > 0) {\n      delta -= this._scrollOffset;\n      const idxAdjustment = Math.round(delta / this._physicalAverage);\n      this._virtualStart += idxAdjustment;\n      this._physicalStart += idxAdjustment;\n      // Estimate new physical offset based on the virtual start index.\n      // adjusts the physical start position to stay in sync with the clamped\n      // virtual start index. It's critical not to let this value be\n      // more than the scroll position however, since that would result in\n      // the physical items not covering the viewport, and leading to\n      // _increasePoolIfNeeded to run away creating items to try to fill it.\n      this._physicalTop = Math.min(Math.floor(this._virtualStart) * this._physicalAverage, this._scrollPosition);\n      this._update();\n    } else if (this._physicalCount > 0) {\n      const reusables = this._getReusables(isScrollingDown);\n      if (isScrollingDown) {\n        this._physicalTop = reusables.physicalTop;\n        this._virtualStart += reusables.indexes.length;\n        this._physicalStart += reusables.indexes.length;\n      } else {\n        this._virtualStart -= reusables.indexes.length;\n        this._physicalStart -= reusables.indexes.length;\n      }\n      this._update(reusables.indexes, isScrollingDown ? null : reusables.indexes);\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, 0), microTask);\n    }\n  },\n\n  /**\n   * Returns an object that contains the indexes of the physical items\n   * that might be reused and the physicalTop.\n   *\n   * @param {boolean} fromTop If the potential reusable items are above the scrolling region.\n   */\n  _getReusables(fromTop) {\n    let ith, offsetContent, physicalItemHeight;\n    const idxs = [];\n    const protectedOffsetContent = this._hiddenContentSize * this._ratio;\n    const virtualStart = this._virtualStart;\n    const virtualEnd = this._virtualEnd;\n    const physicalCount = this._physicalCount;\n    let top = this._physicalTop + this._scrollOffset;\n    const bottom = this._physicalBottom + this._scrollOffset;\n    // This may be called outside of a scrollHandler, so use last cached position\n    const scrollTop = this._scrollPosition;\n    const scrollBottom = this._scrollBottom;\n\n    if (fromTop) {\n      ith = this._physicalStart;\n      offsetContent = scrollTop - top;\n    } else {\n      ith = this._physicalEnd;\n      offsetContent = bottom - scrollBottom;\n    }\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      physicalItemHeight = this._getPhysicalSizeIncrement(ith);\n      offsetContent -= physicalItemHeight;\n      if (idxs.length >= physicalCount || offsetContent <= protectedOffsetContent) {\n        break;\n      }\n      if (fromTop) {\n        // Check that index is within the valid range.\n        if (virtualEnd + idxs.length + 1 >= this._virtualCount) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + physicalItemHeight >= scrollTop - this._scrollOffset) {\n          break;\n        }\n        idxs.push(ith);\n        top += physicalItemHeight;\n        ith = (ith + 1) % physicalCount;\n      } else {\n        // Check that index is within the valid range.\n        if (virtualStart - idxs.length <= 0) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + this._physicalSize - physicalItemHeight <= scrollBottom) {\n          break;\n        }\n        idxs.push(ith);\n        top -= physicalItemHeight;\n        ith = ith === 0 ? physicalCount - 1 : ith - 1;\n      }\n    }\n    return { indexes: idxs, physicalTop: top - this._scrollOffset };\n  },\n\n  /**\n   * Update the list of items, starting from the `_virtualStart` item.\n   * @param {!Array<number>=} itemSet\n   * @param {!Array<number>=} movingUp\n   */\n  _update(itemSet, movingUp) {\n    if ((itemSet && itemSet.length === 0) || this._physicalCount === 0) {\n      return;\n    }\n    this._assignModels(itemSet);\n    this._updateMetrics(itemSet);\n    // Adjust offset after measuring.\n    if (movingUp) {\n      while (movingUp.length) {\n        const idx = movingUp.pop();\n        this._physicalTop -= this._getPhysicalSizeIncrement(idx);\n      }\n    }\n    this._positionItems();\n    this._updateScrollerSize();\n  },\n\n  _isClientFull() {\n    return (\n      this._scrollBottom !== 0 &&\n      this._physicalBottom - 1 >= this._scrollBottom &&\n      this._physicalTop <= this._scrollPosition\n    );\n  },\n\n  /**\n   * Increases the pool size.\n   */\n  _increasePoolIfNeeded(count) {\n    const nextPhysicalCount = this._clamp(\n      this._physicalCount + count,\n      DEFAULT_PHYSICAL_COUNT,\n      this._virtualCount - this._virtualStart,\n    );\n    const delta = nextPhysicalCount - this._physicalCount;\n    let nextIncrease = Math.round(this._physicalCount * 0.5);\n\n    if (delta < 0) {\n      return;\n    }\n    if (delta > 0) {\n      const ts = window.performance.now();\n      // Concat arrays in place.\n      [].push.apply(this._physicalItems, this._createPool(delta));\n      // Push 0s into physicalSizes. Can't use Array.fill because IE11 doesn't\n      // support it.\n      for (let i = 0; i < delta; i++) {\n        this._physicalSizes.push(0);\n      }\n      this._physicalCount += delta;\n      // Update the physical start if it needs to preserve the model of the\n      // focused item. In this situation, the focused item is currently rendered\n      // and its model would have changed after increasing the pool if the\n      // physical start remained unchanged.\n      if (\n        this._physicalStart > this._physicalEnd &&\n        this._isIndexRendered(this._focusedVirtualIndex) &&\n        this._getPhysicalIndex(this._focusedVirtualIndex) < this._physicalEnd\n      ) {\n        this._physicalStart += delta;\n      }\n      this._update();\n      this._templateCost = (window.performance.now() - ts) / delta;\n      nextIncrease = Math.round(this._physicalCount * 0.5);\n    }\n    if (this._virtualEnd >= this._virtualCount - 1 || nextIncrease === 0) {\n      // Do nothing.\n    } else if (!this._isClientFull()) {\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, nextIncrease), microTask);\n    } else if (this._physicalSize < this._optPhysicalSize) {\n      // Yield and increase the pool during idle time until the physical size is\n      // optimal.\n      this._debounce(\n        '_increasePoolIfNeeded',\n        this._increasePoolIfNeeded.bind(this, this._clamp(Math.round(50 / this._templateCost), 1, nextIncrease)),\n        idlePeriod,\n      );\n    }\n  },\n\n  /**\n   * Renders the a new list.\n   */\n  _render() {\n    if (!this.isAttached || !this._isVisible) {\n      return;\n    }\n    if (this._physicalCount !== 0) {\n      const reusables = this._getReusables(true);\n      this._physicalTop = reusables.physicalTop;\n      this._virtualStart += reusables.indexes.length;\n      this._physicalStart += reusables.indexes.length;\n      this._update(reusables.indexes);\n      this._update();\n      this._increasePoolIfNeeded(0);\n    } else if (this._virtualCount > 0) {\n      // Initial render\n      this.updateViewportBoundaries();\n      this._increasePoolIfNeeded(DEFAULT_PHYSICAL_COUNT);\n    }\n  },\n\n  /**\n   * Called when the items have changed. That is, reassignments\n   * to `items`, splices or updates to a single item.\n   */\n  _itemsChanged(change) {\n    if (change.path === 'items') {\n      this._virtualStart = 0;\n      this._physicalTop = 0;\n      this._virtualCount = this.items ? this.items.length : 0;\n      this._physicalIndexForKey = {};\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      this._physicalCount = this._physicalCount || 0;\n      this._physicalItems = this._physicalItems || [];\n      this._physicalSizes = this._physicalSizes || [];\n      this._physicalStart = 0;\n      if (this._scrollTop > this._scrollOffset) {\n        this._resetScrollPosition(0);\n      }\n      this._debounce('_render', this._render, animationFrame);\n    }\n  },\n\n  /**\n   * Executes a provided function per every physical index in `itemSet`\n   * `itemSet` default value is equivalent to the entire set of physical\n   * indexes.\n   *\n   * @param {!function(number, number)} fn\n   * @param {!Array<number>=} itemSet\n   */\n  _iterateItems(fn, itemSet) {\n    let pidx, vidx, rtn, i;\n\n    if (arguments.length === 2 && itemSet) {\n      for (i = 0; i < itemSet.length; i++) {\n        pidx = itemSet[i];\n        vidx = this._computeVidx(pidx);\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    } else {\n      pidx = this._physicalStart;\n      vidx = this._virtualStart;\n      for (; pidx < this._physicalCount; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n      for (pidx = 0; pidx < this._physicalStart; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the virtual index for a given physical index\n   *\n   * @param {number} pidx Physical index\n   * @return {number}\n   */\n  _computeVidx(pidx) {\n    if (pidx >= this._physicalStart) {\n      return this._virtualStart + (pidx - this._physicalStart);\n    }\n    return this._virtualStart + (this._physicalCount - this._physicalStart) + pidx;\n  },\n\n  /**\n   * Updates the position of the physical items.\n   */\n  _positionItems() {\n    this._adjustScrollPosition();\n\n    let y = this._physicalTop;\n\n    this._iterateItems((pidx) => {\n      this.translate3d(0, `${y}px`, 0, this._physicalItems[pidx]);\n      y += this._physicalSizes[pidx];\n    });\n  },\n\n  _getPhysicalSizeIncrement(pidx) {\n    return this._physicalSizes[pidx];\n  },\n\n  /**\n   * Adjusts the scroll position when it was overestimated.\n   */\n  _adjustScrollPosition() {\n    const deltaHeight =\n      this._virtualStart === 0 ? this._physicalTop : Math.min(this._scrollPosition + this._physicalTop, 0);\n    // Note: the delta can be positive or negative.\n    if (deltaHeight !== 0) {\n      this._physicalTop -= deltaHeight;\n      // This may be called outside of a scrollHandler, so use last cached position\n      const scrollTop = this._scrollPosition;\n      // Juking scroll position during interial scrolling on iOS is no bueno\n      if (!IOS_TOUCH_SCROLLING && scrollTop > 0) {\n        this._resetScrollPosition(scrollTop - deltaHeight);\n      }\n    }\n  },\n\n  /**\n   * Sets the position of the scroll.\n   */\n  _resetScrollPosition(pos) {\n    if (this.scrollTarget && pos >= 0) {\n      this._scrollTop = pos;\n      this._scrollPosition = this._scrollTop;\n    }\n  },\n\n  /**\n   * Sets the scroll height, that's the height of the content,\n   *\n   * @param {boolean=} forceUpdate If true, updates the height no matter what.\n   */\n  _updateScrollerSize(forceUpdate) {\n    this._estScrollHeight =\n      this._physicalBottom +\n      Math.max(this._virtualCount - this._physicalCount - this._virtualStart, 0) * this._physicalAverage;\n\n    forceUpdate = forceUpdate || this._scrollHeight === 0;\n    forceUpdate = forceUpdate || this._scrollPosition >= this._estScrollHeight - this._physicalSize;\n    // Amortize height adjustment, so it won't trigger large repaints too often.\n    if (forceUpdate || Math.abs(this._estScrollHeight - this._scrollHeight) >= this._viewportHeight) {\n      this.$.items.style.height = `${this._estScrollHeight}px`;\n      this._scrollHeight = this._estScrollHeight;\n    }\n  },\n\n  /**\n   * Scroll to a specific index in the virtual list regardless\n   * of the physical items in the DOM tree.\n   *\n   * @method scrollToIndex\n   * @param {number} idx The index of the item\n   */\n  scrollToIndex(idx) {\n    if (typeof idx !== 'number' || idx < 0 || idx > this.items.length - 1) {\n      return;\n    }\n    flush();\n    // Items should have been rendered prior scrolling to an index.\n    if (this._physicalCount === 0) {\n      return;\n    }\n    idx = this._clamp(idx, 0, this._virtualCount - 1);\n    // Update the virtual start only when needed.\n    if (!this._isIndexRendered(idx) || idx >= this._maxVirtualStart) {\n      this._virtualStart = idx - 1;\n    }\n    this._assignModels();\n    this._updateMetrics();\n    // Estimate new physical offset.\n    this._physicalTop = this._virtualStart * this._physicalAverage;\n\n    let currentTopItem = this._physicalStart;\n    let currentVirtualItem = this._virtualStart;\n    let targetOffsetTop = 0;\n    const hiddenContentSize = this._hiddenContentSize;\n    // Scroll to the item as much as we can.\n    while (currentVirtualItem < idx && targetOffsetTop <= hiddenContentSize) {\n      targetOffsetTop += this._getPhysicalSizeIncrement(currentTopItem);\n      currentTopItem = (currentTopItem + 1) % this._physicalCount;\n      currentVirtualItem += 1;\n    }\n    this._updateScrollerSize(true);\n    this._positionItems();\n    this._resetScrollPosition(this._physicalTop + this._scrollOffset + targetOffsetTop);\n    this._increasePoolIfNeeded(0);\n    // Clear cached visible index.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n  },\n\n  /**\n   * Reset the physical average and the average count.\n   */\n  _resetAverage() {\n    this._physicalAverage = 0;\n    this._physicalAverageCount = 0;\n  },\n\n  /**\n   * A handler for the `iron-resize` event triggered by `IronResizableBehavior`\n   * when the element is resized.\n   */\n  _resizeHandler() {\n    this._debounce(\n      '_render',\n      () => {\n        // Clear cached visible index.\n        this._firstVisibleIndexVal = null;\n        this._lastVisibleIndexVal = null;\n        if (this._isVisible) {\n          this.updateViewportBoundaries();\n          // Reinstall the scroll event listener.\n          this.toggleScrollListener(true);\n          this._resetAverage();\n          this._render();\n        } else {\n          // Uninstall the scroll event listener.\n          this.toggleScrollListener(false);\n        }\n      },\n      animationFrame,\n    );\n  },\n\n  _isIndexRendered(idx) {\n    return idx >= this._virtualStart && idx <= this._virtualEnd;\n  },\n\n  _getPhysicalIndex(vidx) {\n    return (this._physicalStart + (vidx - this._virtualStart)) % this._physicalCount;\n  },\n\n  _clamp(v, min, max) {\n    return Math.min(max, Math.max(min, v));\n  },\n\n  _debounce(name, cb, asyncModule) {\n    this._debouncers = this._debouncers || {};\n    this._debouncers[name] = Debouncer.debounce(this._debouncers[name], asyncModule, cb.bind(this));\n    enqueueDebouncer(this._debouncers[name]);\n  },\n};\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { animationFrame, timeOut } from './async.js';\nimport { isSafari } from './browser-utils.js';\nimport { Debouncer, flush } from './debounce.js';\nimport { ironList } from './iron-list-core.js';\n\n// Iron-list can by default handle sizes up to around 100000.\n// When the size is larger than MAX_VIRTUAL_COUNT _vidxOffset is used\nconst MAX_VIRTUAL_COUNT = 100000;\nconst OFFSET_ADJUST_MIN_THRESHOLD = 1000;\n\nexport class IronListAdapter {\n  constructor({ createElements, updateElement, scrollTarget, scrollContainer, elementsContainer, reorderElements }) {\n    this.isAttached = true;\n    this._vidxOffset = 0;\n    this.createElements = createElements;\n    this.updateElement = updateElement;\n    this.scrollTarget = scrollTarget;\n    this.scrollContainer = scrollContainer;\n    this.elementsContainer = elementsContainer || scrollContainer;\n    this.reorderElements = reorderElements;\n    // Iron-list uses this value to determine how many pages of elements to render\n    this._maxPages = 1.3;\n\n    // Placeholder height (used for sizing elements that have intrinsic 0 height after update)\n    this.__placeholderHeight = 200;\n    // A queue of 10 previous element heights\n    this.__elementHeightQueue = Array(10);\n\n    this.timeouts = {\n      SCROLL_REORDER: 500,\n      IGNORE_WHEEL: 500,\n      FIX_INVALID_ITEM_POSITIONING: 100,\n    };\n\n    this.__resizeObserver = new ResizeObserver(() => this._resizeHandler());\n\n    if (getComputedStyle(this.scrollTarget).overflow === 'visible') {\n      this.scrollTarget.style.overflow = 'auto';\n    }\n\n    if (getComputedStyle(this.scrollContainer).position === 'static') {\n      this.scrollContainer.style.position = 'relative';\n    }\n\n    this.__resizeObserver.observe(this.scrollTarget);\n    this.scrollTarget.addEventListener('scroll', () => this._scrollHandler());\n\n    this._scrollLineHeight = this._getScrollLineHeight();\n    this.scrollTarget.addEventListener('wheel', (e) => this.__onWheel(e));\n\n    if (this.reorderElements) {\n      // Reordering the physical elements cancels the user's grab of the scroll bar handle on Safari.\n      // Need to defer reordering until the user lets go of the scroll bar handle.\n      this.scrollTarget.addEventListener('mousedown', () => {\n        this.__mouseDown = true;\n      });\n      this.scrollTarget.addEventListener('mouseup', () => {\n        this.__mouseDown = false;\n        if (this.__pendingReorder) {\n          this.__reorderElements();\n        }\n      });\n    }\n  }\n\n  get scrollOffset() {\n    return 0;\n  }\n\n  get adjustedFirstVisibleIndex() {\n    return this.firstVisibleIndex + this._vidxOffset;\n  }\n\n  get adjustedLastVisibleIndex() {\n    return this.lastVisibleIndex + this._vidxOffset;\n  }\n\n  scrollToIndex(index) {\n    if (typeof index !== 'number' || isNaN(index) || this.size === 0 || !this.scrollTarget.offsetHeight) {\n      return;\n    }\n    index = this._clamp(index, 0, this.size - 1);\n\n    const visibleElementCount = this.__getVisibleElements().length;\n    let targetVirtualIndex = Math.floor((index / this.size) * this._virtualCount);\n    if (this._virtualCount - targetVirtualIndex < visibleElementCount) {\n      targetVirtualIndex = this._virtualCount - (this.size - index);\n      this._vidxOffset = this.size - this._virtualCount;\n    } else if (targetVirtualIndex < visibleElementCount) {\n      if (index < OFFSET_ADJUST_MIN_THRESHOLD) {\n        targetVirtualIndex = index;\n        this._vidxOffset = 0;\n      } else {\n        targetVirtualIndex = OFFSET_ADJUST_MIN_THRESHOLD;\n        this._vidxOffset = index - targetVirtualIndex;\n      }\n    } else {\n      this._vidxOffset = index - targetVirtualIndex;\n    }\n\n    this.__skipNextVirtualIndexAdjust = true;\n    super.scrollToIndex(targetVirtualIndex);\n\n    if (this.adjustedFirstVisibleIndex !== index && this._scrollTop < this._maxScrollTop && !this.grid) {\n      // Workaround an iron-list issue by manually adjusting the scroll position\n      this._scrollTop -= this.__getIndexScrollOffset(index) || 0;\n    }\n    this._scrollHandler();\n  }\n\n  flush() {\n    // The scroll target is hidden.\n    if (this.scrollTarget.offsetHeight === 0) {\n      return;\n    }\n\n    this._resizeHandler();\n    flush();\n    this._scrollHandler();\n    if (this.__fixInvalidItemPositioningDebouncer) {\n      this.__fixInvalidItemPositioningDebouncer.flush();\n    }\n    if (this.__scrollReorderDebouncer) {\n      this.__scrollReorderDebouncer.flush();\n    }\n    if (this.__debouncerWheelAnimationFrame) {\n      this.__debouncerWheelAnimationFrame.flush();\n    }\n  }\n\n  update(startIndex = 0, endIndex = this.size - 1) {\n    this.__getVisibleElements().forEach((el) => {\n      if (el.__virtualIndex >= startIndex && el.__virtualIndex <= endIndex) {\n        this.__updateElement(el, el.__virtualIndex, true);\n      }\n    });\n  }\n\n  /**\n   * Updates the height for a given set of items.\n   *\n   * @param {!Array<number>=} itemSet\n   */\n  _updateMetrics(itemSet) {\n    // Make sure we distributed all the physical items\n    // so we can measure them.\n    flush();\n\n    let newPhysicalSize = 0;\n    let oldPhysicalSize = 0;\n    const prevAvgCount = this._physicalAverageCount;\n    const prevPhysicalAvg = this._physicalAverage;\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    this._iterateItems((pidx, vidx) => {\n      oldPhysicalSize += this._physicalSizes[pidx];\n      this._physicalSizes[pidx] = Math.ceil(this.__getBorderBoxHeight(this._physicalItems[pidx]));\n      newPhysicalSize += this._physicalSizes[pidx];\n      this._physicalAverageCount += this._physicalSizes[pidx] ? 1 : 0;\n    }, itemSet);\n\n    this._physicalSize = this._physicalSize + newPhysicalSize - oldPhysicalSize;\n\n    // Update the average if it measured something.\n    if (this._physicalAverageCount !== prevAvgCount) {\n      this._physicalAverage = Math.round(\n        (prevPhysicalAvg * prevAvgCount + newPhysicalSize) / this._physicalAverageCount,\n      );\n    }\n  }\n\n  __getBorderBoxHeight(el) {\n    const style = getComputedStyle(el);\n\n    const itemHeight = parseFloat(style.height) || 0;\n\n    if (style.boxSizing === 'border-box') {\n      return itemHeight;\n    }\n\n    const paddingBottom = parseFloat(style.paddingBottom) || 0;\n    const paddingTop = parseFloat(style.paddingTop) || 0;\n    const borderBottomWidth = parseFloat(style.borderBottomWidth) || 0;\n    const borderTopWidth = parseFloat(style.borderTopWidth) || 0;\n\n    return itemHeight + paddingBottom + paddingTop + borderBottomWidth + borderTopWidth;\n  }\n\n  __updateElement(el, index, forceSameIndexUpdates) {\n    // Clean up temporary placeholder sizing\n    if (el.style.paddingTop) {\n      el.style.paddingTop = '';\n    }\n\n    if (!this.__preventElementUpdates && (el.__lastUpdatedIndex !== index || forceSameIndexUpdates)) {\n      this.updateElement(el, index);\n      el.__lastUpdatedIndex = index;\n    }\n\n    const elementHeight = el.offsetHeight;\n    if (elementHeight === 0) {\n      // If the elements have 0 height after update (for example due to lazy rendering),\n      // it results in iron-list requesting to create an unlimited count of elements.\n      // Assign a temporary placeholder sizing to elements that would otherwise end up having\n      // no height.\n      el.style.paddingTop = `${this.__placeholderHeight}px`;\n\n      // Manually schedule the resize handler to make sure the placeholder padding is\n      // cleared in case the resize observer never triggers.\n      requestAnimationFrame(() => this._resizeHandler());\n    } else {\n      // Add element height to the queue\n      this.__elementHeightQueue.push(elementHeight);\n      this.__elementHeightQueue.shift();\n\n      // Calcualte new placeholder height based on the average of the defined values in the\n      // element height queue\n      const filteredHeights = this.__elementHeightQueue.filter((h) => h !== undefined);\n      this.__placeholderHeight = Math.round(filteredHeights.reduce((a, b) => a + b, 0) / filteredHeights.length);\n    }\n  }\n\n  __getIndexScrollOffset(index) {\n    const element = this.__getVisibleElements().find((el) => el.__virtualIndex === index);\n    return element ? this.scrollTarget.getBoundingClientRect().top - element.getBoundingClientRect().top : undefined;\n  }\n\n  get size() {\n    return this.__size;\n  }\n\n  set size(size) {\n    if (size === this.size) {\n      return;\n    }\n    // Cancel active debouncers\n    if (this.__fixInvalidItemPositioningDebouncer) {\n      this.__fixInvalidItemPositioningDebouncer.cancel();\n    }\n    if (this._debouncers && this._debouncers._increasePoolIfNeeded) {\n      // Avoid creating unnecessary elements on the following flush()\n      this._debouncers._increasePoolIfNeeded.cancel();\n    }\n\n    // Prevent element update while the scroll position is being restored\n    this.__preventElementUpdates = true;\n\n    // Record the scroll position before changing the size\n    let fvi; // First visible index\n    let fviOffsetBefore; // Scroll offset of the first visible index\n    if (size > 0) {\n      fvi = this.adjustedFirstVisibleIndex;\n      fviOffsetBefore = this.__getIndexScrollOffset(fvi);\n    }\n\n    // Change the size\n    this.__size = size;\n\n    this._itemsChanged({\n      path: 'items',\n    });\n    flush();\n\n    // Try to restore the scroll position if the new size is larger than 0\n    if (size > 0) {\n      fvi = Math.min(fvi, size - 1);\n      this.scrollToIndex(fvi);\n\n      const fviOffsetAfter = this.__getIndexScrollOffset(fvi);\n      if (fviOffsetBefore !== undefined && fviOffsetAfter !== undefined) {\n        this._scrollTop += fviOffsetBefore - fviOffsetAfter;\n      }\n    }\n\n    if (!this.elementsContainer.children.length) {\n      requestAnimationFrame(() => this._resizeHandler());\n    }\n\n    this.__preventElementUpdates = false;\n    // Schedule and flush a resize handler\n    this._resizeHandler();\n    flush();\n  }\n\n  /** @private */\n  get _scrollTop() {\n    return this.scrollTarget.scrollTop;\n  }\n\n  /** @private */\n  set _scrollTop(top) {\n    this.scrollTarget.scrollTop = top;\n  }\n\n  /** @private */\n  get items() {\n    return {\n      length: Math.min(this.size, MAX_VIRTUAL_COUNT),\n    };\n  }\n\n  /** @private */\n  get offsetHeight() {\n    return this.scrollTarget.offsetHeight;\n  }\n\n  /** @private */\n  get $() {\n    return {\n      items: this.scrollContainer,\n    };\n  }\n\n  /** @private */\n  updateViewportBoundaries() {\n    const styles = window.getComputedStyle(this.scrollTarget);\n    this._scrollerPaddingTop = this.scrollTarget === this ? 0 : parseInt(styles['padding-top'], 10);\n    this._isRTL = Boolean(styles.direction === 'rtl');\n    this._viewportWidth = this.elementsContainer.offsetWidth;\n    this._viewportHeight = this.scrollTarget.offsetHeight;\n    this._scrollPageHeight = this._viewportHeight - this._scrollLineHeight;\n    if (this.grid) {\n      this._updateGridMetrics();\n    }\n  }\n\n  /** @private */\n  setAttribute() {}\n\n  /** @private */\n  _createPool(size) {\n    const physicalItems = this.createElements(size);\n    const fragment = document.createDocumentFragment();\n    physicalItems.forEach((el) => {\n      el.style.position = 'absolute';\n      fragment.appendChild(el);\n      this.__resizeObserver.observe(el);\n    });\n    this.elementsContainer.appendChild(fragment);\n    return physicalItems;\n  }\n\n  /** @private */\n  _assignModels(itemSet) {\n    this._iterateItems((pidx, vidx) => {\n      const el = this._physicalItems[pidx];\n      el.hidden = vidx >= this.size;\n      if (!el.hidden) {\n        el.__virtualIndex = vidx + (this._vidxOffset || 0);\n        this.__updateElement(el, el.__virtualIndex);\n      } else {\n        delete el.__lastUpdatedIndex;\n      }\n    }, itemSet);\n  }\n\n  /** @private */\n  _isClientFull() {\n    // Workaround an issue in iron-list that can cause it to freeze on fast scroll\n    setTimeout(() => {\n      this.__clientFull = true;\n    });\n    return this.__clientFull || super._isClientFull();\n  }\n\n  /** @private */\n  translate3d(_x, y, _z, el) {\n    el.style.transform = `translateY(${y})`;\n  }\n\n  /** @private */\n  toggleScrollListener() {}\n\n  _scrollHandler() {\n    this._adjustVirtualIndexOffset(this._scrollTop - (this.__previousScrollTop || 0));\n    const delta = this.scrollTarget.scrollTop - this._scrollPosition;\n\n    super._scrollHandler();\n\n    if (this._physicalCount !== 0) {\n      const isScrollingDown = delta >= 0;\n      const reusables = this._getReusables(!isScrollingDown);\n\n      if (reusables.indexes.length) {\n        // After running super._scrollHandler, fix internal properties to workaround an iron-list issue.\n        // See https://github.com/vaadin/web-components/issues/1691\n        this._physicalTop = reusables.physicalTop;\n\n        if (isScrollingDown) {\n          this._virtualStart -= reusables.indexes.length;\n          this._physicalStart -= reusables.indexes.length;\n        } else {\n          this._virtualStart += reusables.indexes.length;\n          this._physicalStart += reusables.indexes.length;\n        }\n        this._resizeHandler();\n      }\n    }\n\n    if (delta) {\n      // There was a change in scroll top. Schedule a check for invalid item positioning.\n      this.__fixInvalidItemPositioningDebouncer = Debouncer.debounce(\n        this.__fixInvalidItemPositioningDebouncer,\n        timeOut.after(this.timeouts.FIX_INVALID_ITEM_POSITIONING),\n        () => this.__fixInvalidItemPositioning(),\n      );\n    }\n\n    if (this.reorderElements) {\n      this.__scrollReorderDebouncer = Debouncer.debounce(\n        this.__scrollReorderDebouncer,\n        timeOut.after(this.timeouts.SCROLL_REORDER),\n        () => this.__reorderElements(),\n      );\n    }\n\n    this.__previousScrollTop = this._scrollTop;\n\n    // If the first visible index is not 0 when scrolled to the top,\n    // scroll to index 0 to fix the issue.\n    if (this._scrollTop === 0 && this.firstVisibleIndex !== 0 && Math.abs(delta) > 0) {\n      this.scrollToIndex(0);\n    }\n  }\n\n  /**\n   * Work around an iron-list issue with invalid item positioning.\n   * See https://github.com/vaadin/flow-components/issues/4306\n   * @private\n   */\n  __fixInvalidItemPositioning() {\n    if (!this.scrollTarget.isConnected) {\n      return;\n    }\n\n    // Check if the first physical item element is below the top of the viewport\n    const physicalTopBelowTop = this._physicalTop > this._scrollTop;\n    // Check if the last physical item element is above the bottom of the viewport\n    const physicalBottomAboveBottom = this._physicalBottom < this._scrollBottom;\n\n    // Check if the first index is visible\n    const firstIndexVisible = this.adjustedFirstVisibleIndex === 0;\n    // Check if the last index is visible\n    const lastIndexVisible = this.adjustedLastVisibleIndex === this.size - 1;\n\n    if ((physicalTopBelowTop && !firstIndexVisible) || (physicalBottomAboveBottom && !lastIndexVisible)) {\n      // Invalid state! Try to recover.\n\n      const isScrollingDown = physicalBottomAboveBottom;\n      // Set the \"_ratio\" property temporarily to 0 to make iron-list's _getReusables\n      // place all the free physical items on one side of the viewport.\n      const originalRatio = this._ratio;\n      this._ratio = 0;\n      // Fake a scroll change to make _scrollHandler place the physical items\n      // on the desired side.\n      this._scrollPosition = this._scrollTop + (isScrollingDown ? -1 : 1);\n      this._scrollHandler();\n      // Restore the original \"_ratio\" value.\n      this._ratio = originalRatio;\n    }\n  }\n\n  /** @private */\n  __onWheel(e) {\n    if (e.ctrlKey || this._hasScrolledAncestor(e.target, e.deltaX, e.deltaY)) {\n      return;\n    }\n\n    let deltaY = e.deltaY;\n    if (e.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      // Scrolling by \"lines of text\" instead of pixels\n      deltaY *= this._scrollLineHeight;\n    } else if (e.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      // Scrolling by \"pages\" instead of pixels\n      deltaY *= this._scrollPageHeight;\n    }\n\n    this._deltaYAcc = this._deltaYAcc || 0;\n\n    if (this._wheelAnimationFrame) {\n      // Accumulate wheel delta while a frame is being processed\n      this._deltaYAcc += deltaY;\n      e.preventDefault();\n      return;\n    }\n\n    deltaY += this._deltaYAcc;\n    this._deltaYAcc = 0;\n\n    this._wheelAnimationFrame = true;\n    this.__debouncerWheelAnimationFrame = Debouncer.debounce(\n      this.__debouncerWheelAnimationFrame,\n      animationFrame,\n      () => {\n        this._wheelAnimationFrame = false;\n      },\n    );\n\n    const momentum = Math.abs(e.deltaX) + Math.abs(deltaY);\n\n    if (this._canScroll(this.scrollTarget, e.deltaX, deltaY)) {\n      e.preventDefault();\n      this.scrollTarget.scrollTop += deltaY;\n      this.scrollTarget.scrollLeft += e.deltaX;\n\n      this._hasResidualMomentum = true;\n\n      this._ignoreNewWheel = true;\n      this._debouncerIgnoreNewWheel = Debouncer.debounce(\n        this._debouncerIgnoreNewWheel,\n        timeOut.after(this.timeouts.IGNORE_WHEEL),\n        () => {\n          this._ignoreNewWheel = false;\n        },\n      );\n    } else if ((this._hasResidualMomentum && momentum <= this._previousMomentum) || this._ignoreNewWheel) {\n      e.preventDefault();\n    } else if (momentum > this._previousMomentum) {\n      this._hasResidualMomentum = false;\n    }\n    this._previousMomentum = momentum;\n  }\n\n  /**\n   * Determines if the element has an ancestor that handles the scroll delta prior to this\n   *\n   * @private\n   */\n  _hasScrolledAncestor(el, deltaX, deltaY) {\n    if (el === this.scrollTarget || el === this.scrollTarget.getRootNode().host) {\n      return false;\n    } else if (\n      this._canScroll(el, deltaX, deltaY) &&\n      ['auto', 'scroll'].indexOf(getComputedStyle(el).overflow) !== -1\n    ) {\n      return true;\n    } else if (el !== this && el.parentElement) {\n      return this._hasScrolledAncestor(el.parentElement, deltaX, deltaY);\n    }\n  }\n\n  _canScroll(el, deltaX, deltaY) {\n    return (\n      (deltaY > 0 && el.scrollTop < el.scrollHeight - el.offsetHeight) ||\n      (deltaY < 0 && el.scrollTop > 0) ||\n      (deltaX > 0 && el.scrollLeft < el.scrollWidth - el.offsetWidth) ||\n      (deltaX < 0 && el.scrollLeft > 0)\n    );\n  }\n\n  /**\n   * @returns {Number|undefined} - The browser's default font-size in pixels\n   * @private\n   */\n  _getScrollLineHeight() {\n    const el = document.createElement('div');\n    el.style.fontSize = 'initial';\n    el.style.display = 'none';\n    document.body.appendChild(el);\n    const fontSize = window.getComputedStyle(el).fontSize;\n    document.body.removeChild(el);\n    return fontSize ? window.parseInt(fontSize) : undefined;\n  }\n\n  __getVisibleElements() {\n    return Array.from(this.elementsContainer.children).filter((element) => !element.hidden);\n  }\n\n  /** @private */\n  __reorderElements() {\n    if (this.__mouseDown) {\n      this.__pendingReorder = true;\n      return;\n    }\n    this.__pendingReorder = false;\n\n    const adjustedVirtualStart = this._virtualStart + (this._vidxOffset || 0);\n\n    // Which row to use as a target?\n    const visibleElements = this.__getVisibleElements();\n\n    const elementWithFocus = visibleElements.find(\n      (element) =>\n        element.contains(this.elementsContainer.getRootNode().activeElement) ||\n        element.contains(this.scrollTarget.getRootNode().activeElement),\n    );\n    const targetElement = elementWithFocus || visibleElements[0];\n    if (!targetElement) {\n      // All elements are hidden, don't reorder\n      return;\n    }\n\n    // Where the target row should be?\n    const targetPhysicalIndex = targetElement.__virtualIndex - adjustedVirtualStart;\n\n    // Reodrer the DOM elements to keep the target row at the target physical index\n    const delta = visibleElements.indexOf(targetElement) - targetPhysicalIndex;\n    if (delta > 0) {\n      for (let i = 0; i < delta; i++) {\n        this.elementsContainer.appendChild(visibleElements[i]);\n      }\n    } else if (delta < 0) {\n      for (let i = visibleElements.length + delta; i < visibleElements.length; i++) {\n        this.elementsContainer.insertBefore(visibleElements[i], visibleElements[0]);\n      }\n    }\n\n    // Due to a rendering bug, reordering the rows can make parts of the scroll target disappear\n    // on Safari when using sticky positioning in case the scroll target is inside a flexbox.\n    // This issue manifests with grid (the header can disappear if grid is used inside a flexbox)\n    if (isSafari) {\n      const { transform } = this.scrollTarget.style;\n      this.scrollTarget.style.transform = 'translateZ(0)';\n      setTimeout(() => {\n        this.scrollTarget.style.transform = transform;\n      });\n    }\n  }\n\n  /** @private */\n  _adjustVirtualIndexOffset(delta) {\n    if (this._virtualCount >= this.size) {\n      this._vidxOffset = 0;\n    } else if (this.__skipNextVirtualIndexAdjust) {\n      this.__skipNextVirtualIndexAdjust = false;\n    } else if (Math.abs(delta) > 10000) {\n      // Process a large scroll position change\n      const scale = this._scrollTop / (this.scrollTarget.scrollHeight - this.scrollTarget.offsetHeight);\n      const offset = scale * this.size;\n      this._vidxOffset = Math.round(offset - scale * this._virtualCount);\n    } else {\n      // Make sure user can always swipe/wheel scroll to the start and end\n      const oldOffset = this._vidxOffset;\n      const threshold = OFFSET_ADJUST_MIN_THRESHOLD;\n      const maxShift = 100;\n\n      // Near start\n      if (this._scrollTop === 0) {\n        this._vidxOffset = 0;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(0);\n        }\n      } else if (this.firstVisibleIndex < threshold && this._vidxOffset > 0) {\n        this._vidxOffset -= Math.min(this._vidxOffset, maxShift);\n        super.scrollToIndex(this.firstVisibleIndex + (oldOffset - this._vidxOffset));\n      }\n\n      // Near end\n      const maxOffset = this.size - this._virtualCount;\n      if (this._scrollTop >= this._maxScrollTop && this._maxScrollTop > 0) {\n        this._vidxOffset = maxOffset;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this._virtualCount - 1);\n        }\n      } else if (this.firstVisibleIndex > this._virtualCount - threshold && this._vidxOffset < maxOffset) {\n        this._vidxOffset += Math.min(maxOffset - this._vidxOffset, maxShift);\n        super.scrollToIndex(this.firstVisibleIndex - (this._vidxOffset - oldOffset));\n      }\n    }\n  }\n}\n\nObject.setPrototypeOf(IronListAdapter.prototype, ironList);\n", "import { IronListAdapter } from './virtualizer-iron-list-adapter.js';\n\nexport class Virtualizer {\n  /**\n   * @typedef {Object} VirtualizerConfig\n   * @property {Function} createElements Function that returns the given number of new elements\n   * @property {Function} updateElement Function that updates the element at a specific index\n   * @property {HTMLElement} scrollTarget Reference to the scrolling element\n   * @property {HTMLElement} scrollContainer Reference to a wrapper for the item elements (or a slot) inside the scrollTarget\n   * @property {HTMLElement | undefined} elementsContainer Reference to the container in which the item elements are placed, defaults to scrollContainer\n   * @property {boolean | undefined} reorderElements Determines whether the physical item elements should be kept in order in the DOM\n   * @param {VirtualizerConfig} config Configuration for the virtualizer\n   */\n  constructor(config) {\n    this.__adapter = new IronListAdapter(config);\n  }\n\n  /**\n   * The size of the virtualizer\n   * @return {number | undefined} The size of the virtualizer\n   */\n  get size() {\n    return this.__adapter.size;\n  }\n\n  /**\n   * The size of the virtualizer\n   * @param {number} size The size of the virtualizer\n   */\n  set size(size) {\n    this.__adapter.size = size;\n  }\n\n  /**\n   * Scroll to a specific index in the virtual list\n   *\n   * @method scrollToIndex\n   * @param {number} index The index of the item\n   */\n  scrollToIndex(index) {\n    this.__adapter.scrollToIndex(index);\n  }\n\n  /**\n   * Requests the virtualizer to re-render the item elements on an index range, if currently in the DOM\n   *\n   * @method update\n   * @param {number | undefined} startIndex The start index of the range\n   * @param {number | undefined} endIndex The end index of the range\n   */\n  update(startIndex = 0, endIndex = this.size - 1) {\n    this.__adapter.update(startIndex, endIndex);\n  }\n\n  /**\n   * Flushes active asynchronous tasks so that the component and the DOM end up in a stable state\n   *\n   * @method update\n   * @param {number | undefined} startIndex The start index of the range\n   * @param {number | undefined} endIndex The end index of the range\n   */\n  flush() {\n    this.__adapter.flush();\n  }\n\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @return {number}\n   */\n  get firstVisibleIndex() {\n    return this.__adapter.adjustedFirstVisibleIndex;\n  }\n\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @return {number}\n   */\n  get lastVisibleIndex() {\n    return this.__adapter.adjustedLastVisibleIndex;\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/*\n * Placeholder object class representing items being loaded.\n *\n * @private\n */\nexport const ComboBoxPlaceholder = class ComboBoxPlaceholder {\n  toString() {\n    return '';\n  }\n};\n", "/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { generateUniqueId } from '@vaadin/component-base/src/unique-id-utils.js';\nimport { Virtualizer } from '@vaadin/component-base/src/virtualizer.js';\nimport { ComboBoxPlaceholder } from './vaadin-combo-box-placeholder.js';\n\n/**\n * Element for internal use only.\n *\n * @extends HTMLElement\n * @private\n */\nexport class ComboBoxScroller extends PolymerElement {\n  static get is() {\n    return 'vaadin-combo-box-scroller';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          min-height: 1px;\n          overflow: auto;\n\n          /* Fixes item background from getting on top of scrollbars on Safari */\n          transform: translate3d(0, 0, 0);\n\n          /* Enable momentum scrolling on iOS */\n          -webkit-overflow-scrolling: touch;\n\n          /* Fixes scrollbar disappearing when 'Show scroll bars: Always' enabled in Safari */\n          box-shadow: 0 0 0 white;\n        }\n\n        #selector {\n          border-width: var(--_vaadin-combo-box-items-container-border-width);\n          border-style: var(--_vaadin-combo-box-items-container-border-style);\n          border-color: var(--_vaadin-combo-box-items-container-border-color);\n          position: relative;\n        }\n      </style>\n      <div id=\"selector\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      /**\n       * A full set of items to filter the visible options from.\n       * Set to an empty array when combo-box is not opened.\n       */\n      items: {\n        type: Array,\n        observer: '__itemsChanged',\n      },\n\n      /**\n       * Index of an item that has focus outline and is scrolled into view.\n       * The actual focus still remains in the input field.\n       */\n      focusedIndex: {\n        type: Number,\n        observer: '__focusedIndexChanged',\n      },\n\n      /**\n       * Set to true while combo-box fetches new page from the data provider.\n       */\n      loading: {\n        type: Boolean,\n        observer: '__loadingChanged',\n      },\n\n      /**\n       * Whether the combo-box is currently opened or not. If set to false,\n       * calling `scrollIntoView` does not have any effect.\n       */\n      opened: {\n        type: Boolean,\n        observer: '__openedChanged',\n      },\n\n      /**\n       * The selected item from the `items` array.\n       */\n      selectedItem: {\n        type: Object,\n        observer: '__selectedItemChanged',\n      },\n\n      /**\n       * Path for the id of the item, used to detect whether the item is selected.\n       */\n      itemIdPath: {\n        type: String,\n      },\n\n      /**\n       * Reference to the combo-box, used by the item elements.\n       */\n      comboBox: {\n        type: Object,\n      },\n\n      /**\n       * Function used to set a label for every combo-box item.\n       */\n      getItemLabel: {\n        type: Object,\n      },\n\n      /**\n       * Function used to render the content of every combo-box item.\n       */\n      renderer: {\n        type: Object,\n        observer: '__rendererChanged',\n      },\n\n      /**\n       * Used to propagate the `theme` attribute from the host element.\n       */\n      theme: {\n        type: String,\n      },\n    };\n  }\n\n  constructor() {\n    super();\n    this.__boundOnItemClick = this.__onItemClick.bind(this);\n  }\n\n  __openedChanged(opened) {\n    if (opened) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    // Ensure every instance has unique ID\n    this.id = `${this.localName}-${generateUniqueId()}`;\n\n    // Allow extensions to customize tag name for the items\n    this.__hostTagName = this.constructor.is.replace('-scroller', '');\n\n    this.setAttribute('role', 'listbox');\n\n    this.addEventListener('click', (e) => e.stopPropagation());\n\n    this.__patchWheelOverScrolling();\n\n    this.__virtualizer = new Virtualizer({\n      createElements: this.__createElements.bind(this),\n      updateElement: this.__updateElement.bind(this),\n      elementsContainer: this,\n      scrollTarget: this,\n      scrollContainer: this.$.selector,\n    });\n  }\n\n  requestContentUpdate() {\n    if (this.__virtualizer) {\n      this.__virtualizer.update();\n    }\n  }\n\n  scrollIntoView(index) {\n    if (!(this.opened && index >= 0)) {\n      return;\n    }\n\n    const visibleItemsCount = this._visibleItemsCount();\n\n    let targetIndex = index;\n\n    if (index > this.__virtualizer.lastVisibleIndex - 1) {\n      // Index is below the bottom, scrolling down. Make the item appear at the bottom.\n      // First scroll to target (will be at the top of the scroller) to make sure it's rendered.\n      this.__virtualizer.scrollToIndex(index);\n      // Then calculate the index for the following scroll (to get the target to bottom of the scroller).\n      targetIndex = index - visibleItemsCount + 1;\n    } else if (index > this.__virtualizer.firstVisibleIndex) {\n      // The item is already visible, scrolling is unnecessary per se. But we need to trigger iron-list to set\n      // the correct scrollTop on the scrollTarget. Scrolling to firstVisibleIndex.\n      targetIndex = this.__virtualizer.firstVisibleIndex;\n    }\n    this.__virtualizer.scrollToIndex(Math.max(0, targetIndex));\n\n    // Sometimes the item is partly below the bottom edge, detect and adjust.\n    const lastPhysicalItem = [...this.children].find(\n      (el) => !el.hidden && el.index === this.__virtualizer.lastVisibleIndex,\n    );\n    if (!lastPhysicalItem || index !== lastPhysicalItem.index) {\n      return;\n    }\n    const lastPhysicalItemRect = lastPhysicalItem.getBoundingClientRect();\n    const scrollerRect = this.getBoundingClientRect();\n    const scrollTopAdjust = lastPhysicalItemRect.bottom - scrollerRect.bottom + this._viewportTotalPaddingBottom;\n    if (scrollTopAdjust > 0) {\n      this.scrollTop += scrollTopAdjust;\n    }\n  }\n\n  /** @private */\n  __getAriaRole(itemIndex) {\n    return itemIndex !== undefined ? 'option' : false;\n  }\n\n  /** @private */\n  __isItemFocused(focusedIndex, itemIndex) {\n    return !this.loading && focusedIndex === itemIndex;\n  }\n\n  /** @protected */\n  _isItemSelected(item, selectedItem, itemIdPath) {\n    if (item instanceof ComboBoxPlaceholder) {\n      return false;\n    } else if (itemIdPath && item !== undefined && selectedItem !== undefined) {\n      return this.get(itemIdPath, item) === this.get(itemIdPath, selectedItem);\n    }\n    return item === selectedItem;\n  }\n\n  /** @private */\n  __itemsChanged(items) {\n    if (this.__virtualizer && items) {\n      this.__virtualizer.size = items.length;\n      this.__virtualizer.flush();\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __loadingChanged() {\n    this.requestContentUpdate();\n  }\n\n  /** @private */\n  __selectedItemChanged() {\n    this.requestContentUpdate();\n  }\n\n  /** @private */\n  __focusedIndexChanged(index, oldIndex) {\n    if (index !== oldIndex) {\n      this.requestContentUpdate();\n    }\n\n    // Do not jump back to the previously focused item while loading\n    // when requesting next page from the data provider on scroll.\n    if (index >= 0 && !this.loading) {\n      this.scrollIntoView(index);\n    }\n  }\n\n  /** @private */\n  __rendererChanged(renderer, oldRenderer) {\n    if (renderer || oldRenderer) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __createElements(count) {\n    return [...Array(count)].map(() => {\n      const item = document.createElement(`${this.__hostTagName}-item`);\n      item.addEventListener('click', this.__boundOnItemClick);\n      // Negative tabindex prevents the item content from being focused.\n      item.tabIndex = '-1';\n      item.style.width = '100%';\n      return item;\n    });\n  }\n\n  /** @private */\n  __updateElement(el, index) {\n    const item = this.items[index];\n    const focusedIndex = this.focusedIndex;\n    const selected = this._isItemSelected(item, this.selectedItem, this.itemIdPath);\n\n    el.setProperties({\n      item,\n      index,\n      label: this.getItemLabel(item),\n      selected,\n      renderer: this.renderer,\n      focused: this.__isItemFocused(focusedIndex, index),\n    });\n\n    el.id = `${this.__hostTagName}-item-${index}`;\n    el.setAttribute('role', this.__getAriaRole(index));\n    el.setAttribute('aria-selected', selected.toString());\n    el.setAttribute('aria-posinset', index + 1);\n    el.setAttribute('aria-setsize', this.items.length);\n\n    if (this.theme) {\n      el.setAttribute('theme', this.theme);\n    } else {\n      el.removeAttribute('theme');\n    }\n\n    if (item instanceof ComboBoxPlaceholder) {\n      this.__requestItemByIndex(index);\n    }\n  }\n\n  /** @private */\n  __onItemClick(e) {\n    this.dispatchEvent(new CustomEvent('selection-changed', { detail: { item: e.currentTarget.item } }));\n  }\n\n  /**\n   * We want to prevent the kinetic scrolling energy from being transferred from the overlay contents over to the parent.\n   * Further improvement ideas: after the contents have been scrolled to the top or bottom and scrolling has stopped, it could allow\n   * scrolling the parent similarly to touch scrolling.\n   */\n  __patchWheelOverScrolling() {\n    this.$.selector.addEventListener('wheel', (e) => {\n      const scrolledToTop = this.scrollTop === 0;\n      const scrolledToBottom = this.scrollHeight - this.scrollTop - this.clientHeight <= 1;\n      if (scrolledToTop && e.deltaY < 0) {\n        e.preventDefault();\n      } else if (scrolledToBottom && e.deltaY > 0) {\n        e.preventDefault();\n      }\n    });\n  }\n\n  get _viewportTotalPaddingBottom() {\n    if (this._cachedViewportTotalPaddingBottom === undefined) {\n      const itemsStyle = window.getComputedStyle(this.$.selector);\n      this._cachedViewportTotalPaddingBottom = [itemsStyle.paddingBottom, itemsStyle.borderBottomWidth]\n        .map((v) => {\n          return parseInt(v, 10);\n        })\n        .reduce((sum, v) => {\n          return sum + v;\n        });\n    }\n\n    return this._cachedViewportTotalPaddingBottom;\n  }\n\n  /**\n   * Dispatches an `index-requested` event for the given index to notify\n   * the data provider that it should start loading the page containing the requested index.\n   *\n   * The event is dispatched asynchronously to prevent an immediate page request and therefore\n   * a possible infinite recursion in case the data provider implements page request cancelation logic\n   * by invoking data provider page callbacks with an empty array.\n   * The infinite recursion may occur otherwise since invoking a data provider page callback with an empty array\n   * triggers a synchronous scroller update and, if the callback corresponds to the currently visible page,\n   * the scroller will synchronously request the page again which may lead to looping in the end.\n   * That was the case for the Flow counterpart:\n   * https://github.com/vaadin/flow-components/issues/3553#issuecomment-1239344828\n   */\n  __requestItemByIndex(index) {\n    requestAnimationFrame(() => {\n      this.dispatchEvent(\n        new CustomEvent('index-requested', {\n          detail: {\n            index,\n            currentScrollerPos: this._oldScrollerPosition,\n          },\n        }),\n      );\n    });\n  }\n\n  /** @private */\n  _visibleItemsCount() {\n    // Ensure items are positioned\n    this.__virtualizer.scrollToIndex(this.__virtualizer.firstVisibleIndex);\n    const hasItems = this.__virtualizer.size > 0;\n    return hasItems ? this.__virtualizer.lastVisibleIndex - this.__virtualizer.firstVisibleIndex + 1 : 0;\n  }\n}\n\ncustomElements.define(ComboBoxScroller.is, ComboBoxScroller);\n", "/**\n * @license\n * Copyright (c) 2018 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ComboBoxScroller } from '@vaadin/combo-box/src/vaadin-combo-box-scroller.js';\n\n/**\n * An element used internally by `<vaadin-time-picker>`. Not intended to be used separately.\n *\n * @extends ComboBoxScroller\n * @private\n */\nclass TimePickerScroller extends ComboBoxScroller {\n  static get is() {\n    return 'vaadin-time-picker-scroller';\n  }\n}\n\ncustomElements.define(TimePickerScroller.is, TimePickerScroller);\n", "/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { Overlay } from '@vaadin/overlay/src/vaadin-overlay.js';\nimport { PositionMixin } from '@vaadin/overlay/src/vaadin-overlay-position-mixin.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-combo-box-overlay',\n  css`\n    #overlay {\n      width: var(--vaadin-combo-box-overlay-width, var(--_vaadin-combo-box-overlay-default-width, auto));\n    }\n\n    [part='content'] {\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n    }\n  `,\n  { moduleId: 'vaadin-combo-box-overlay-styles' },\n);\n\nlet memoizedTemplate;\n\n/**\n * An element used internally by `<vaadin-combo-box>`. Not intended to be used separately.\n *\n * @extends Overlay\n * @private\n */\nexport class ComboBoxOverlay extends PositionMixin(Overlay) {\n  static get is() {\n    return 'vaadin-combo-box-overlay';\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      memoizedTemplate = super.template.cloneNode(true);\n      memoizedTemplate.content.querySelector('[part~=\"overlay\"]').removeAttribute('tabindex');\n    }\n\n    return memoizedTemplate;\n  }\n\n  static get observers() {\n    return ['_setOverlayWidth(positionTarget, opened)'];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    const comboBox = this._comboBox;\n\n    const hostDir = comboBox && comboBox.getAttribute('dir');\n    if (hostDir) {\n      this.setAttribute('dir', hostDir);\n    }\n  }\n\n  ready() {\n    super.ready();\n    const loader = document.createElement('div');\n    loader.setAttribute('part', 'loader');\n    const content = this.shadowRoot.querySelector('[part~=\"content\"]');\n    content.parentNode.insertBefore(loader, content);\n    this.requiredVerticalSpace = 200;\n  }\n\n  _outsideClickListener(event) {\n    const eventPath = event.composedPath();\n    if (!eventPath.includes(this.positionTarget) && !eventPath.includes(this)) {\n      this.close();\n    }\n  }\n\n  _setOverlayWidth(positionTarget, opened) {\n    if (positionTarget && opened) {\n      const propPrefix = this.localName;\n      this.style.setProperty(`--_${propPrefix}-default-width`, `${positionTarget.clientWidth}px`);\n\n      const customWidth = getComputedStyle(this._comboBox).getPropertyValue(`--${propPrefix}-width`);\n\n      if (customWidth === '') {\n        this.style.removeProperty(`--${propPrefix}-width`);\n      } else {\n        this.style.setProperty(`--${propPrefix}-width`, customWidth);\n      }\n\n      this._updatePosition();\n    }\n  }\n}\n\ncustomElements.define(ComboBoxOverlay.is, ComboBoxOverlay);\n", "/**\n * @license\n * Copyright (c) 2018 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ComboBoxOverlay } from '@vaadin/combo-box/src/vaadin-combo-box-overlay.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-time-picker-overlay',\n  css`\n    #overlay {\n      width: var(--vaadin-time-picker-overlay-width, var(--_vaadin-time-picker-overlay-default-width, auto));\n    }\n  `,\n  { moduleId: 'vaadin-time-picker-overlay-styles' },\n);\n\n/**\n * An element used internally by `<vaadin-time-picker>`. Not intended to be used separately.\n *\n * @extends ComboBoxOverlay\n * @private\n */\nclass TimePickerOverlay extends ComboBoxOverlay {\n  static get is() {\n    return 'vaadin-time-picker-overlay';\n  }\n}\n\ncustomElements.define(TimePickerOverlay.is, TimePickerOverlay);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Passes the component to the template renderer callback if the template renderer is imported.\n * Otherwise, if there is a template, it warns that the template renderer needs to be imported.\n *\n * @param {HTMLElement} component\n */\nexport function processTemplates(component) {\n  if (window.Vaadin && window.Vaadin.templateRendererCallback) {\n    window.Vaadin.templateRendererCallback(component);\n    return;\n  }\n\n  if (component.querySelector('template')) {\n    console.warn(\n      `WARNING: <template> inside <${component.localName}> is no longer supported. Import @vaadin/polymer-legacy-adapter/template-renderer.js to enable compatibility.`,\n    );\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { isTouch } from '@vaadin/component-base/src/browser-utils.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { DisabledMixin } from '@vaadin/component-base/src/disabled-mixin.js';\nimport { isElementFocused } from '@vaadin/component-base/src/focus-utils.js';\nimport { KeyboardMixin } from '@vaadin/component-base/src/keyboard-mixin.js';\nimport { processTemplates } from '@vaadin/component-base/src/templates.js';\nimport { InputMixin } from '@vaadin/field-base/src/input-mixin.js';\nimport { VirtualKeyboardController } from '@vaadin/field-base/src/virtual-keyboard-controller.js';\nimport { ComboBoxPlaceholder } from './vaadin-combo-box-placeholder.js';\n\n/**\n * Checks if the value is supported as an item value in this control.\n *\n * @param {unknown} value\n * @return {boolean}\n */\nfunction isValidValue(value) {\n  return value !== undefined && value !== null;\n}\n\n/**\n * Returns the index of the first item that satisfies the provided testing function\n * ignoring placeholder items.\n *\n * @param {Array<ComboBoxItem | string>} items\n * @param {Function} callback\n * @return {number}\n */\nfunction findItemIndex(items, callback) {\n  return items.findIndex((item) => {\n    if (item instanceof ComboBoxPlaceholder) {\n      return false;\n    }\n\n    return callback(item);\n  });\n}\n\n/**\n * @polymerMixin\n * @param {function(new:HTMLElement)} subclass\n */\nexport const ComboBoxMixin = (subclass) =>\n  class VaadinComboBoxMixinElement extends ControllerMixin(KeyboardMixin(InputMixin(DisabledMixin(subclass)))) {\n    static get properties() {\n      return {\n        /**\n         * True if the dropdown is open, false otherwise.\n         * @type {boolean}\n         */\n        opened: {\n          type: Boolean,\n          notify: true,\n          value: false,\n          reflectToAttribute: true,\n          observer: '_openedChanged',\n        },\n\n        /**\n         * Set true to prevent the overlay from opening automatically.\n         * @attr {boolean} auto-open-disabled\n         */\n        autoOpenDisabled: {\n          type: Boolean,\n        },\n\n        /**\n         * When present, it specifies that the field is read-only.\n         * @type {boolean}\n         */\n        readonly: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * Custom function for rendering the content of every item.\n         * Receives three arguments:\n         *\n         * - `root` The `<vaadin-combo-box-item>` internal container DOM element.\n         * - `comboBox` The reference to the `<vaadin-combo-box>` element.\n         * - `model` The object with the properties related with the rendered\n         *   item, contains:\n         *   - `model.index` The index of the rendered item.\n         *   - `model.item` The item.\n         * @type {ComboBoxRenderer | undefined}\n         */\n        renderer: Function,\n\n        /**\n         * A full set of items to filter the visible options from.\n         * The items can be of either `String` or `Object` type.\n         * @type {!Array<!ComboBoxItem | string> | undefined}\n         */\n        items: {\n          type: Array,\n          observer: '_itemsChanged',\n        },\n\n        /**\n         * If `true`, the user can input a value that is not present in the items list.\n         * `value` property will be set to the input value in this case.\n         * Also, when `value` is set programmatically, the input value will be set\n         * to reflect that value.\n         * @attr {boolean} allow-custom-value\n         * @type {boolean}\n         */\n        allowCustomValue: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * A subset of items, filtered based on the user input. Filtered items\n         * can be assigned directly to omit the internal filtering functionality.\n         * The items can be of either `String` or `Object` type.\n         * @type {!Array<!ComboBoxItem | string> | undefined}\n         */\n        filteredItems: {\n          type: Array,\n          observer: '_filteredItemsChanged',\n        },\n\n        /**\n         * Used to detect user value changes and fire `change` events.\n         * @private\n         */\n        _lastCommittedValue: String,\n\n        /**\n         * When set to `true`, \"loading\" attribute is added to host and the overlay element.\n         * @type {boolean}\n         */\n        loading: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * @type {number}\n         * @protected\n         */\n        _focusedIndex: {\n          type: Number,\n          observer: '_focusedIndexChanged',\n          value: -1,\n        },\n\n        /**\n         * Filtering string the user has typed into the input field.\n         * @type {string}\n         */\n        filter: {\n          type: String,\n          value: '',\n          notify: true,\n        },\n\n        /**\n         * The selected item from the `items` array.\n         * @type {ComboBoxItem | string | undefined}\n         */\n        selectedItem: {\n          type: Object,\n          notify: true,\n        },\n\n        /**\n         * Path for label of the item. If `items` is an array of objects, the\n         * `itemLabelPath` is used to fetch the displayed string label for each\n         * item.\n         *\n         * The item label is also used for matching items when processing user\n         * input, i.e., for filtering and selecting items.\n         * @attr {string} item-label-path\n         * @type {string}\n         */\n        itemLabelPath: {\n          type: String,\n          value: 'label',\n          observer: '_itemLabelPathChanged',\n        },\n\n        /**\n         * Path for the value of the item. If `items` is an array of objects, the\n         * `itemValuePath:` is used to fetch the string value for the selected\n         * item.\n         *\n         * The item value is used in the `value` property of the combo box,\n         * to provide the form value.\n         * @attr {string} item-value-path\n         * @type {string}\n         */\n        itemValuePath: {\n          type: String,\n          value: 'value',\n        },\n\n        /**\n         * Path for the id of the item. If `items` is an array of objects,\n         * the `itemIdPath` is used to compare and identify the same item\n         * in `selectedItem` and `filteredItems` (items given by the\n         * `dataProvider` callback).\n         * @attr {string} item-id-path\n         */\n        itemIdPath: String,\n\n        /**\n         * @type {!HTMLElement | undefined}\n         * @protected\n         */\n        _toggleElement: {\n          type: Object,\n          observer: '_toggleElementChanged',\n        },\n\n        /** @private */\n        _closeOnBlurIsPrevented: Boolean,\n\n        /** @private */\n        _scroller: Object,\n\n        /** @private */\n        _overlayOpened: {\n          type: Boolean,\n          observer: '_overlayOpenedChanged',\n        },\n      };\n    }\n\n    static get observers() {\n      return [\n        '_selectedItemChanged(selectedItem, itemValuePath, itemLabelPath)',\n        '_openedOrItemsChanged(opened, filteredItems, loading)',\n        '_updateScroller(_scroller, filteredItems, opened, loading, selectedItem, itemIdPath, _focusedIndex, renderer, theme)',\n      ];\n    }\n\n    constructor() {\n      super();\n      this._boundOnFocusout = this._onFocusout.bind(this);\n      this._boundOverlaySelectedItemChanged = this._overlaySelectedItemChanged.bind(this);\n      this._boundOnClearButtonMouseDown = this.__onClearButtonMouseDown.bind(this);\n      this._boundOnClick = this._onClick.bind(this);\n      this._boundOnOverlayTouchAction = this._onOverlayTouchAction.bind(this);\n      this._boundOnTouchend = this._onTouchend.bind(this);\n    }\n\n    /**\n     * Tag name prefix used by scroller and items.\n     * @protected\n     * @return {string}\n     */\n    get _tagNamePrefix() {\n      return 'vaadin-combo-box';\n    }\n\n    /**\n     * @return {string | undefined}\n     * @protected\n     */\n    get _inputElementValue() {\n      return this.inputElement ? this.inputElement[this._propertyForValue] : undefined;\n    }\n\n    /**\n     * @param {string} value\n     * @protected\n     */\n    set _inputElementValue(value) {\n      if (this.inputElement) {\n        this.inputElement[this._propertyForValue] = value;\n      }\n    }\n\n    /**\n     * Get a reference to the native `<input>` element.\n     * Override to provide a custom input.\n     * @protected\n     * @return {HTMLInputElement | undefined}\n     */\n    get _nativeInput() {\n      return this.inputElement;\n    }\n\n    /**\n     * Override method inherited from `InputMixin`\n     * to customize the input element.\n     * @protected\n     * @override\n     */\n    _inputElementChanged(inputElement) {\n      super._inputElementChanged(inputElement);\n\n      const input = this._nativeInput;\n\n      if (input) {\n        input.autocomplete = 'off';\n        input.autocapitalize = 'off';\n\n        input.setAttribute('role', 'combobox');\n        input.setAttribute('aria-autocomplete', 'list');\n        input.setAttribute('aria-expanded', !!this.opened);\n\n        // Disable the macOS Safari spell check auto corrections.\n        input.setAttribute('spellcheck', 'false');\n\n        // Disable iOS autocorrect suggestions.\n        input.setAttribute('autocorrect', 'off');\n\n        this._revertInputValueToValue();\n\n        if (this.clearElement) {\n          this.clearElement.addEventListener('mousedown', this._boundOnClearButtonMouseDown);\n        }\n      }\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this._initOverlay();\n      this._initScroller();\n\n      this.addEventListener('focusout', this._boundOnFocusout);\n\n      this._lastCommittedValue = this.value;\n\n      this.addEventListener('click', this._boundOnClick);\n      this.addEventListener('touchend', this._boundOnTouchend);\n\n      const bringToFrontListener = () => {\n        requestAnimationFrame(() => {\n          this.$.overlay.bringToFront();\n        });\n      };\n\n      this.addEventListener('mousedown', bringToFrontListener);\n      this.addEventListener('touchstart', bringToFrontListener);\n\n      processTemplates(this);\n\n      this.addController(new VirtualKeyboardController(this));\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      // Close the overlay on detach\n      this.close();\n    }\n\n    /**\n     * Requests an update for the content of items.\n     * While performing the update, it invokes the renderer (passed in the `renderer` property) once an item.\n     *\n     * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n     */\n    requestContentUpdate() {\n      if (!this._scroller) {\n        return;\n      }\n\n      this._scroller.requestContentUpdate();\n\n      this._getItemElements().forEach((item) => {\n        item.requestContentUpdate();\n      });\n    }\n\n    /**\n     * Opens the dropdown list.\n     */\n    open() {\n      // Prevent _open() being called when input is disabled or read-only\n      if (!this.disabled && !this.readonly) {\n        this.opened = true;\n      }\n    }\n\n    /**\n     * Closes the dropdown list.\n     */\n    close() {\n      this.opened = false;\n    }\n\n    /**\n     * Override Polymer lifecycle callback to handle `filter` property change after\n     * the observer for `opened` property is triggered. This is needed when opening\n     * combo-box on user input to ensure the focused index is set correctly.\n     *\n     * @param {!Object} currentProps Current accessor values\n     * @param {?Object} changedProps Properties changed since the last call\n     * @param {?Object} oldProps Previous values for each changed property\n     * @protected\n     * @override\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) {\n      super._propertiesChanged(currentProps, changedProps, oldProps);\n\n      if (changedProps.filter !== undefined) {\n        this._filterChanged(changedProps.filter);\n      }\n    }\n\n    /** @private */\n    _initOverlay() {\n      const overlay = this.$.overlay;\n\n      // Store instance for detecting \"dir\" attribute on opening\n      overlay._comboBox = this;\n\n      overlay.addEventListener('touchend', this._boundOnOverlayTouchAction);\n      overlay.addEventListener('touchmove', this._boundOnOverlayTouchAction);\n\n      // Prevent blurring the input when clicking inside the overlay\n      overlay.addEventListener('mousedown', (e) => e.preventDefault());\n\n      // Manual two-way binding for the overlay \"opened\" property\n      overlay.addEventListener('opened-changed', (e) => {\n        this._overlayOpened = e.detail.value;\n      });\n    }\n\n    /**\n     * Create and initialize the scroller element.\n     * Override to provide custom host reference.\n     *\n     * @protected\n     */\n    _initScroller(host) {\n      const scrollerTag = `${this._tagNamePrefix}-scroller`;\n\n      const overlay = this.$.overlay;\n\n      overlay.renderer = (root) => {\n        if (!root.firstChild) {\n          root.appendChild(document.createElement(scrollerTag));\n        }\n      };\n\n      // Ensure the scroller is rendered\n      overlay.requestContentUpdate();\n\n      const scroller = overlay.querySelector(scrollerTag);\n\n      scroller.comboBox = host || this;\n      scroller.getItemLabel = this._getItemLabel.bind(this);\n      scroller.addEventListener('selection-changed', this._boundOverlaySelectedItemChanged);\n\n      // Trigger the observer to set properties\n      this._scroller = scroller;\n    }\n\n    /** @private */\n    // eslint-disable-next-line max-params\n    _updateScroller(scroller, items, opened, loading, selectedItem, itemIdPath, focusedIndex, renderer, theme) {\n      if (scroller) {\n        if (opened) {\n          scroller.style.maxHeight =\n            getComputedStyle(this).getPropertyValue(`--${this._tagNamePrefix}-overlay-max-height`) || '65vh';\n        }\n\n        scroller.setProperties({\n          items: opened ? items : [],\n          opened,\n          loading,\n          selectedItem,\n          itemIdPath,\n          focusedIndex,\n          renderer,\n          theme,\n        });\n      }\n    }\n\n    /** @private */\n    _openedOrItemsChanged(opened, items, loading) {\n      // Close the overlay if there are no items to display.\n      // See https://github.com/vaadin/vaadin-combo-box/pull/964\n      this._overlayOpened = !!(opened && (loading || (items && items.length)));\n    }\n\n    /** @private */\n    _overlayOpenedChanged(opened, wasOpened) {\n      if (opened) {\n        this.dispatchEvent(new CustomEvent('vaadin-combo-box-dropdown-opened', { bubbles: true, composed: true }));\n\n        this._onOpened();\n      } else if (wasOpened && this.filteredItems && this.filteredItems.length) {\n        this.close();\n\n        this.dispatchEvent(new CustomEvent('vaadin-combo-box-dropdown-closed', { bubbles: true, composed: true }));\n      }\n    }\n\n    /** @private */\n    _focusedIndexChanged(index, oldIndex) {\n      if (oldIndex === undefined) {\n        return;\n      }\n      this._updateActiveDescendant(index);\n    }\n\n    /** @protected */\n    _isInputFocused() {\n      return this.inputElement && isElementFocused(this.inputElement);\n    }\n\n    /** @private */\n    _updateActiveDescendant(index) {\n      const input = this._nativeInput;\n      if (!input) {\n        return;\n      }\n\n      const item = this._getItemElements().find((el) => el.index === index);\n      if (item) {\n        input.setAttribute('aria-activedescendant', item.id);\n      } else {\n        input.removeAttribute('aria-activedescendant');\n      }\n    }\n\n    /** @private */\n    _openedChanged(opened, wasOpened) {\n      // Prevent _close() being called when opened is set to its default value (false).\n      if (wasOpened === undefined) {\n        return;\n      }\n\n      if (opened) {\n        this._openedWithFocusRing = this.hasAttribute('focus-ring');\n        // For touch devices, we don't want to popup virtual keyboard\n        // unless input element is explicitly focused by the user.\n        if (!this._isInputFocused() && !isTouch) {\n          this.focus();\n        }\n\n        this.$.overlay.restoreFocusOnClose = true;\n      } else {\n        this._onClosed();\n        if (this._openedWithFocusRing && this._isInputFocused()) {\n          this.setAttribute('focus-ring', '');\n        }\n      }\n\n      const input = this._nativeInput;\n      if (input) {\n        input.setAttribute('aria-expanded', !!opened);\n\n        if (opened) {\n          input.setAttribute('aria-controls', this._scroller.id);\n        } else {\n          input.removeAttribute('aria-controls');\n        }\n      }\n    }\n\n    /** @private */\n    _onOverlayTouchAction() {\n      // On touch devices, blur the input on touch start inside the overlay, in order to hide\n      // the virtual keyboard. But don't close the overlay on this blur.\n      this._closeOnBlurIsPrevented = true;\n      this.inputElement.blur();\n      this._closeOnBlurIsPrevented = false;\n    }\n\n    /** @protected */\n    _isClearButton(event) {\n      return event.composedPath()[0] === this.clearElement;\n    }\n\n    /**\n     * @param {Event} event\n     * @protected\n     */\n    _handleClearButtonClick(event) {\n      event.preventDefault();\n      this._clear();\n\n      // De-select dropdown item\n      if (this.opened) {\n        this.requestContentUpdate();\n      }\n    }\n\n    /**\n     * @param {Event} event\n     * @private\n     */\n    _onToggleButtonClick(event) {\n      // Prevent parent components such as `vaadin-grid`\n      // from handling the click event after it bubbles.\n      event.preventDefault();\n\n      if (this.opened) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n\n    /**\n     * @param {Event} event\n     * @protected\n     */\n    _onHostClick(event) {\n      if (!this.autoOpenDisabled) {\n        event.preventDefault();\n        this.open();\n      }\n    }\n\n    /** @private */\n    _onClick(e) {\n      const path = e.composedPath();\n\n      if (this._isClearButton(e)) {\n        this._handleClearButtonClick(e);\n      } else if (path.indexOf(this._toggleElement) > -1) {\n        this._onToggleButtonClick(e);\n      } else {\n        this._onHostClick(e);\n      }\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     *\n     * @param {KeyboardEvent} e\n     * @protected\n     * @override\n     */\n    _onKeyDown(e) {\n      super._onKeyDown(e);\n\n      if (e.key === 'Tab') {\n        this.$.overlay.restoreFocusOnClose = false;\n      } else if (e.key === 'ArrowDown') {\n        this._onArrowDown();\n\n        // Prevent caret from moving\n        e.preventDefault();\n      } else if (e.key === 'ArrowUp') {\n        this._onArrowUp();\n\n        // Prevent caret from moving\n        e.preventDefault();\n      }\n    }\n\n    /** @private */\n    _getItemLabel(item) {\n      let label = item && this.itemLabelPath ? this.get(this.itemLabelPath, item) : undefined;\n      if (label === undefined || label === null) {\n        label = item ? item.toString() : '';\n      }\n      return label;\n    }\n\n    /** @private */\n    _getItemValue(item) {\n      let value = item && this.itemValuePath ? this.get(this.itemValuePath, item) : undefined;\n      if (value === undefined) {\n        value = item ? item.toString() : '';\n      }\n      return value;\n    }\n\n    /** @private */\n    _onArrowDown() {\n      if (this.opened) {\n        const items = this.filteredItems;\n        if (items) {\n          this._focusedIndex = Math.min(items.length - 1, this._focusedIndex + 1);\n          this._prefillFocusedItemLabel();\n        }\n      } else {\n        this.open();\n      }\n    }\n\n    /** @private */\n    _onArrowUp() {\n      if (this.opened) {\n        if (this._focusedIndex > -1) {\n          this._focusedIndex = Math.max(0, this._focusedIndex - 1);\n        } else {\n          const items = this.filteredItems;\n          if (items) {\n            this._focusedIndex = items.length - 1;\n          }\n        }\n\n        this._prefillFocusedItemLabel();\n      } else {\n        this.open();\n      }\n    }\n\n    /** @private */\n    _prefillFocusedItemLabel() {\n      if (this._focusedIndex > -1) {\n        const focusedItem = this.filteredItems[this._focusedIndex];\n        this._inputElementValue = this._getItemLabel(focusedItem);\n        this._markAllSelectionRange();\n      }\n    }\n\n    /** @private */\n    _setSelectionRange(start, end) {\n      // Setting selection range focuses and/or moves the caret in some browsers,\n      // and there's no need to modify the selection range if the input isn't focused anyway.\n      // This affects Safari. When the overlay is open, and then hitting tab, browser should focus\n      // the next focusable element instead of the combo-box itself.\n      if (this._isInputFocused() && this.inputElement.setSelectionRange) {\n        this.inputElement.setSelectionRange(start, end);\n      }\n    }\n\n    /** @private */\n    _markAllSelectionRange() {\n      if (this._inputElementValue !== undefined) {\n        this._setSelectionRange(0, this._inputElementValue.length);\n      }\n    }\n\n    /** @private */\n    _clearSelectionRange() {\n      if (this._inputElementValue !== undefined) {\n        const pos = this._inputElementValue ? this._inputElementValue.length : 0;\n        this._setSelectionRange(pos, pos);\n      }\n    }\n\n    /** @private */\n    _closeOrCommit() {\n      if (!this.opened && !this.loading) {\n        this._commitValue();\n      } else {\n        this.close();\n      }\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     *\n     * @param {KeyboardEvent} e\n     * @protected\n     * @override\n     */\n    _onEnter(e) {\n      // Do not commit value when custom values are disallowed and input value is not a valid option\n      // also stop propagation of the event, otherwise the user could submit a form while the input\n      // still contains an invalid value\n      const hasInvalidOption =\n        this._focusedIndex < 0 &&\n        this._inputElementValue !== '' &&\n        this._getItemLabel(this.selectedItem) !== this._inputElementValue;\n      if (!this.allowCustomValue && hasInvalidOption) {\n        // Do not submit the surrounding form.\n        e.preventDefault();\n        // Do not trigger global listeners\n        e.stopPropagation();\n        return;\n      }\n\n      // Stop propagation of the enter event only if the dropdown is opened, this\n      // \"consumes\" the enter event for the action of closing the dropdown\n      if (this.opened) {\n        // Do not submit the surrounding form.\n        e.preventDefault();\n        // Do not trigger global listeners\n        e.stopPropagation();\n      }\n\n      this._closeOrCommit();\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     * Do not call `super` in order to override clear\n     * button logic defined in `InputControlMixin`.\n     *\n     * @param {!KeyboardEvent} e\n     * @protected\n     * @override\n     */\n    _onEscape(e) {\n      if (this.autoOpenDisabled) {\n        // Auto-open is disabled\n        if (this.opened || (this.value !== this._inputElementValue && this._inputElementValue.length > 0)) {\n          // The overlay is open or\n          // The input value has changed but the change hasn't been committed, so cancel it.\n          e.stopPropagation();\n          this._focusedIndex = -1;\n          this.cancel();\n        } else if (this.clearButtonVisible && !this.opened && !!this.value) {\n          e.stopPropagation();\n          // The clear button is visible and the overlay is closed, so clear the value.\n          this._clear();\n        }\n      } else if (this.opened) {\n        // Auto-open is enabled\n        // The overlay is open\n        e.stopPropagation();\n\n        if (this._focusedIndex > -1) {\n          // An item is focused, revert the input to the filtered value\n          this._focusedIndex = -1;\n          this._revertInputValue();\n        } else {\n          // No item is focused, cancel the change and close the overlay\n          this.cancel();\n        }\n      } else if (this.clearButtonVisible && !!this.value) {\n        e.stopPropagation();\n        // The clear button is visible and the overlay is closed, so clear the value.\n        this._clear();\n      }\n    }\n\n    /** @private */\n    _toggleElementChanged(toggleElement) {\n      if (toggleElement) {\n        // Don't blur the input on toggle mousedown\n        toggleElement.addEventListener('mousedown', (e) => e.preventDefault());\n        // Unfocus previously focused element if focus is not inside combo box (on touch devices)\n        toggleElement.addEventListener('click', () => {\n          if (isTouch && !this._isInputFocused()) {\n            document.activeElement.blur();\n          }\n        });\n      }\n    }\n\n    /**\n     * Clears the current value.\n     * @protected\n     */\n    _clear() {\n      this.selectedItem = null;\n\n      if (this.allowCustomValue) {\n        this.value = '';\n      }\n\n      this._detectAndDispatchChange();\n    }\n\n    /**\n     * Reverts back to original value.\n     */\n    cancel() {\n      this._revertInputValueToValue();\n      // In the next _detectAndDispatchChange() call, the change detection should not pass\n      this._lastCommittedValue = this.value;\n      this._closeOrCommit();\n    }\n\n    /** @private */\n    _onOpened() {\n      // Defer scroll position adjustment to improve performance.\n      requestAnimationFrame(() => {\n        this._scrollIntoView(this._focusedIndex);\n\n        // Set attribute after the items are rendered when overlay is opened for the first time.\n        this._updateActiveDescendant(this._focusedIndex);\n      });\n\n      // _detectAndDispatchChange() should not consider value changes done before opening\n      this._lastCommittedValue = this.value;\n    }\n\n    /** @private */\n    _onClosed() {\n      if (!this.loading || this.allowCustomValue) {\n        this._commitValue();\n      }\n    }\n\n    /** @private */\n    _commitValue() {\n      if (this._focusedIndex > -1) {\n        const focusedItem = this.filteredItems[this._focusedIndex];\n        if (this.selectedItem !== focusedItem) {\n          this.selectedItem = focusedItem;\n        }\n        // Make sure input field is updated in case value doesn't change (i.e. FOO -> foo)\n        this._inputElementValue = this._getItemLabel(this.selectedItem);\n      } else if (this._inputElementValue === '' || this._inputElementValue === undefined) {\n        this.selectedItem = null;\n\n        if (this.allowCustomValue) {\n          this.value = '';\n        }\n      } else {\n        // Try to find an item which label matches the input value.\n        const items = [...(this.filteredItems || []), this.selectedItem];\n        const itemMatchingInputValue = items[this.__getItemIndexByLabel(items, this._inputElementValue)];\n\n        if (\n          this.allowCustomValue &&\n          // To prevent a repetitive input value being saved after pressing ESC and Tab.\n          !itemMatchingInputValue\n        ) {\n          const customValue = this._inputElementValue;\n\n          // Store reference to the last custom value for checking it on focusout.\n          this._lastCustomValue = customValue;\n\n          // An item matching by label was not found, but custom values are allowed.\n          // Dispatch a custom-value-set event with the input value.\n          const e = new CustomEvent('custom-value-set', {\n            detail: customValue,\n            composed: true,\n            cancelable: true,\n            bubbles: true,\n          });\n          this.dispatchEvent(e);\n          if (!e.defaultPrevented) {\n            this.value = customValue;\n          }\n        } else if (!this.allowCustomValue && !this.opened && itemMatchingInputValue) {\n          // An item matching by label was found, select it.\n          this.value = this._getItemValue(itemMatchingInputValue);\n        } else {\n          // Revert the input value\n          this._inputElementValue = this.selectedItem ? this._getItemLabel(this.selectedItem) : this.value || '';\n        }\n      }\n\n      this._detectAndDispatchChange();\n\n      this._clearSelectionRange();\n\n      this.filter = '';\n    }\n\n    /**\n     * @return {string}\n     * @protected\n     */\n    get _propertyForValue() {\n      return 'value';\n    }\n\n    /**\n     * Override an event listener from `InputMixin`.\n     * @param {!Event} event\n     * @protected\n     * @override\n     */\n    _onInput(event) {\n      const filter = this._inputElementValue;\n\n      // When opening dropdown on user input, both `opened` and `filter` properties are set.\n      // Perform a batched property update instead of relying on sync property observers.\n      // This is necessary to avoid an extra data-provider request for loading first page.\n      const props = {};\n\n      if (this.filter === filter) {\n        // Filter and input value might get out of sync, while keyboard navigating for example.\n        // Afterwards, input value might be changed to the same value as used in filtering.\n        // In situation like these, we need to make sure all the filter changes handlers are run.\n        this._filterChanged(this.filter);\n      } else {\n        props.filter = filter;\n      }\n\n      if (!this.opened && !this._isClearButton(event) && !this.autoOpenDisabled) {\n        props.opened = true;\n      }\n\n      this.setProperties(props);\n    }\n\n    /**\n     * Override an event listener from `InputMixin`.\n     * @param {!Event} event\n     * @protected\n     * @override\n     */\n    _onChange(event) {\n      // Suppress the native change event fired on the native input.\n      // We use `_detectAndDispatchChange` to fire a custom event.\n      event.stopPropagation();\n    }\n\n    /** @private */\n    _itemLabelPathChanged(itemLabelPath) {\n      if (typeof itemLabelPath !== 'string') {\n        console.error('You should set itemLabelPath to a valid string');\n      }\n    }\n\n    /** @private */\n    _filterChanged(filter) {\n      // Scroll to the top of the list whenever the filter changes.\n      this._scrollIntoView(0);\n\n      this._focusedIndex = -1;\n\n      if (this.items) {\n        this.filteredItems = this._filterItems(this.items, filter);\n      } else {\n        // With certain use cases (e. g., external filtering), `items` are\n        // undefined. Filtering is unnecessary per se, but the filteredItems\n        // observer should still be invoked to update focused item.\n        this._filteredItemsChanged(this.filteredItems);\n      }\n    }\n\n    /** @protected */\n    _revertInputValue() {\n      if (this.filter !== '') {\n        this._inputElementValue = this.filter;\n      } else {\n        this._revertInputValueToValue();\n      }\n      this._clearSelectionRange();\n    }\n\n    /** @private */\n    _revertInputValueToValue() {\n      if (this.allowCustomValue && !this.selectedItem) {\n        this._inputElementValue = this.value;\n      } else {\n        this._inputElementValue = this._getItemLabel(this.selectedItem);\n      }\n    }\n\n    /** @private */\n    _selectedItemChanged(selectedItem) {\n      if (selectedItem === null || selectedItem === undefined) {\n        if (this.filteredItems) {\n          if (!this.allowCustomValue) {\n            this.value = '';\n          }\n\n          this._toggleHasValue(this._hasValue);\n          this._inputElementValue = this.value;\n        }\n      } else {\n        const value = this._getItemValue(selectedItem);\n        if (this.value !== value) {\n          this.value = value;\n          if (this.value !== value) {\n            // The value was changed to something else in value-changed listener,\n            // so prevent from resetting it to the previous value.\n            return;\n          }\n        }\n\n        this._toggleHasValue(true);\n        this._inputElementValue = this._getItemLabel(selectedItem);\n      }\n\n      if (this.filteredItems) {\n        this._focusedIndex = this.filteredItems.indexOf(selectedItem);\n      }\n    }\n\n    /**\n     * Override an observer from `InputMixin`.\n     * @protected\n     * @override\n     */\n    _valueChanged(value, oldVal) {\n      if (value === '' && oldVal === undefined) {\n        // Initializing, no need to do anything\n        // See https://github.com/vaadin/vaadin-combo-box/issues/554\n        return;\n      }\n\n      if (isValidValue(value)) {\n        if (this._getItemValue(this.selectedItem) !== value) {\n          this._selectItemForValue(value);\n        }\n\n        if (!this.selectedItem && this.allowCustomValue) {\n          this._inputElementValue = value;\n        }\n\n        this._toggleHasValue(this._hasValue);\n      } else {\n        this.selectedItem = null;\n      }\n\n      this.filter = '';\n\n      // In the next _detectAndDispatchChange() call, the change detection should pass\n      this._lastCommittedValue = undefined;\n    }\n\n    /** @private */\n    _detectAndDispatchChange() {\n      if (this.value !== this._lastCommittedValue) {\n        this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n        this._lastCommittedValue = this.value;\n      }\n    }\n\n    /** @private */\n    _itemsChanged(items, oldItems) {\n      this._ensureItemsOrDataProvider(() => {\n        this.items = oldItems;\n      });\n\n      if (items) {\n        this.filteredItems = items.slice(0);\n      } else if (oldItems) {\n        // Only clear filteredItems if the component had items previously but got cleared\n        this.filteredItems = null;\n      }\n    }\n\n    /** @private */\n    _filteredItemsChanged(filteredItems, oldFilteredItems) {\n      // Store the currently focused item if any. The focused index preserves\n      // in the case when more filtered items are loading but it is reset\n      // when the user types in a filter query.\n      const focusedItem = oldFilteredItems ? oldFilteredItems[this._focusedIndex] : null;\n\n      // Try to sync `selectedItem` based on `value` once a new set of `filteredItems` is available\n      // (as a result of external filtering or when they have been loaded by the data provider).\n      // When `value` is specified but `selectedItem` is not, it means that there was no item\n      // matching `value` at the moment `value` was set, so `selectedItem` has remained unsynced.\n      const valueIndex = this.__getItemIndexByValue(filteredItems, this.value);\n      if ((this.selectedItem === null || this.selectedItem === undefined) && valueIndex >= 0) {\n        this.selectedItem = filteredItems[valueIndex];\n      }\n\n      // Try to first set focus on the item that had been focused before `filteredItems` were updated\n      // if it is still present in the `filteredItems` array. Otherwise, set the focused index\n      // depending on the selected item or the filter query.\n      const focusedItemIndex = this.__getItemIndexByValue(filteredItems, this._getItemValue(focusedItem));\n      if (focusedItemIndex > -1) {\n        this._focusedIndex = focusedItemIndex;\n      } else {\n        this.__setInitialFocusedIndex();\n      }\n    }\n\n    /** @private */\n    __setInitialFocusedIndex() {\n      const inputValue = this._inputElementValue;\n      if (inputValue === undefined || inputValue === this._getItemLabel(this.selectedItem)) {\n        // When the input element value is the same as the current value or not defined,\n        // set the focused index to the item that matches the value.\n        this._focusedIndex = this.__getItemIndexByLabel(this.filteredItems, this._getItemLabel(this.selectedItem));\n      } else {\n        // When the user filled in something that is different from the current value = filtering is enabled,\n        // set the focused index to the item that matches the filter query.\n        this._focusedIndex = this.__getItemIndexByLabel(this.filteredItems, this.filter);\n      }\n    }\n\n    /** @private */\n    _filterItems(arr, filter) {\n      if (!arr) {\n        return arr;\n      }\n\n      const filteredItems = arr.filter((item) => {\n        filter = filter ? filter.toString().toLowerCase() : '';\n        // Check if item contains input value.\n        return this._getItemLabel(item).toString().toLowerCase().indexOf(filter) > -1;\n      });\n\n      return filteredItems;\n    }\n\n    /** @private */\n    _selectItemForValue(value) {\n      const valueIndex = this.__getItemIndexByValue(this.filteredItems, value);\n      const previouslySelectedItem = this.selectedItem;\n\n      if (valueIndex >= 0) {\n        this.selectedItem = this.filteredItems[valueIndex];\n      } else if (this.dataProvider && this.selectedItem === undefined) {\n        this.selectedItem = undefined;\n      } else {\n        this.selectedItem = null;\n      }\n\n      if (this.selectedItem === null && previouslySelectedItem === null) {\n        this._selectedItemChanged(this.selectedItem);\n      }\n    }\n\n    /** @private */\n    _getItemElements() {\n      return Array.from(this._scroller.querySelectorAll(`${this._tagNamePrefix}-item`));\n    }\n\n    /** @private */\n    _scrollIntoView(index) {\n      if (!this._scroller) {\n        return;\n      }\n      this._scroller.scrollIntoView(index);\n    }\n\n    /**\n     * Returns the first item that matches the provided value.\n     *\n     * @private\n     */\n    __getItemIndexByValue(items, value) {\n      if (!items || !isValidValue(value)) {\n        return -1;\n      }\n\n      return findItemIndex(items, (item) => {\n        return this._getItemValue(item) === value;\n      });\n    }\n\n    /**\n     * Returns the first item that matches the provided label.\n     * Labels are matched against each other case insensitively.\n     *\n     * @private\n     */\n    __getItemIndexByLabel(items, label) {\n      if (!items || !label) {\n        return -1;\n      }\n\n      return findItemIndex(items, (item) => {\n        return this._getItemLabel(item).toString().toLowerCase() === label.toString().toLowerCase();\n      });\n    }\n\n    /** @private */\n    _overlaySelectedItemChanged(e) {\n      // Stop this private event from leaking outside.\n      e.stopPropagation();\n\n      if (e.detail.item instanceof ComboBoxPlaceholder) {\n        // Placeholder items should not be selectable.\n        return;\n      }\n\n      if (this.opened) {\n        this._focusedIndex = this.filteredItems.indexOf(e.detail.item);\n        this.close();\n      }\n    }\n\n    /** @private */\n    __onClearButtonMouseDown(event) {\n      event.preventDefault(); // Prevent native focusout event\n      this.inputElement.focus();\n    }\n\n    /** @private */\n    _onFocusout(event) {\n      // VoiceOver on iOS fires `focusout` event when moving focus to the item in the dropdown.\n      // Do not focus the input in this case, because it would break announcement for the item.\n      if (event.relatedTarget && event.relatedTarget.localName === `${this._tagNamePrefix}-item`) {\n        return;\n      }\n\n      // Fixes the problem with `focusout` happening when clicking on the scroll bar on Edge\n      if (event.relatedTarget === this.$.overlay) {\n        event.composedPath()[0].focus();\n        return;\n      }\n      if (!this.readonly && !this._closeOnBlurIsPrevented) {\n        // User's logic in `custom-value-set` event listener might cause input to blur,\n        // which will result in attempting to commit the same custom value once again.\n        if (!this.opened && this.allowCustomValue && this._inputElementValue === this._lastCustomValue) {\n          delete this._lastCustomValue;\n          return;\n        }\n\n        this._closeOrCommit();\n      }\n    }\n\n    /** @private */\n    _onTouchend(event) {\n      if (!this.clearElement || event.composedPath()[0] !== this.clearElement) {\n        return;\n      }\n\n      event.preventDefault();\n      this._clear();\n    }\n\n    /**\n     * Fired when the value changes.\n     *\n     * @event value-changed\n     * @param {Object} detail\n     * @param {String} detail.value the combobox value\n     */\n\n    /**\n     * Fired when selected item changes.\n     *\n     * @event selected-item-changed\n     * @param {Object} detail\n     * @param {Object|String} detail.value the selected item. Type is the same as the type of `items`.\n     */\n\n    /**\n     * Fired when the user sets a custom value.\n     * @event custom-value-set\n     * @param {String} detail the custom value\n     */\n\n    /**\n     * Fired when value changes.\n     * To comply with https://developer.mozilla.org/en-US/docs/Web/Events/change\n     * @event change\n     */\n\n    /**\n     * Fired after the `vaadin-combo-box-overlay` opens.\n     *\n     * @event vaadin-combo-box-dropdown-opened\n     */\n\n    /**\n     * Fired after the `vaadin-combo-box-overlay` closes.\n     *\n     * @event vaadin-combo-box-dropdown-closed\n     */\n  };\n", "/**\n * @license\n * Copyright (c) 2018 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport './vaadin-time-picker-item.js';\nimport './vaadin-time-picker-scroller.js';\nimport './vaadin-time-picker-overlay.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ComboBoxMixin } from '@vaadin/combo-box/src/vaadin-combo-box-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * An element used internally by `<vaadin-time-picker>`. Not intended to be used separately.\n *\n * @extends HTMLElement\n * @mixes ComboBoxMixin\n * @mixes ThemableMixin\n * @private\n */\nclass TimePickerComboBox extends ComboBoxMixin(ThemableMixin(PolymerElement)) {\n  static get is() {\n    return 'vaadin-time-picker-combo-box';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host([opened]) {\n          pointer-events: auto;\n        }\n      </style>\n\n      <slot></slot>\n\n      <vaadin-time-picker-overlay\n        id=\"overlay\"\n        opened=\"[[_overlayOpened]]\"\n        loading$=\"[[loading]]\"\n        theme$=\"[[_theme]]\"\n        position-target=\"[[positionTarget]]\"\n        no-vertical-overlap\n        restore-focus-node=\"[[inputElement]]\"\n      ></vaadin-time-picker-overlay>\n    `;\n  }\n\n  static get properties() {\n    return {\n      positionTarget: {\n        type: Object,\n      },\n    };\n  }\n\n  /**\n   * Tag name prefix used by scroller and items.\n   * @protected\n   * @return {string}\n   */\n  get _tagNamePrefix() {\n    return 'vaadin-time-picker';\n  }\n\n  /**\n   * Reference to the clear button element.\n   * @protected\n   * @return {!HTMLElement}\n   */\n  get clearElement() {\n    return this.querySelector('[part=\"clear-button\"]');\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.allowCustomValue = true;\n    this._toggleElement = this.querySelector('.toggle-button');\n\n    // See https://github.com/vaadin/vaadin-time-picker/issues/145\n    this.setAttribute('dir', 'ltr');\n  }\n}\n\ncustomElements.define(TimePickerComboBox.is, TimePickerComboBox);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { InputConstraintsMixin } from './input-constraints-mixin.js';\n\n/**\n * A mixin to provide `pattern` and `preventInvalidInput` properties.\n *\n * @polymerMixin\n * @mixes InputConstraintsMixin\n */\nexport const PatternMixin = (superclass) =>\n  class PatternMixinClass extends InputConstraintsMixin(superclass) {\n    static get properties() {\n      return {\n        /**\n         * A regular expression that the value is checked against.\n         * The pattern must match the entire value, not just some subset.\n         */\n        pattern: {\n          type: String,\n        },\n\n        /**\n         * When set to true, user is prevented from typing a value that\n         * conflicts with the given `pattern`.\n         * @attr {boolean} prevent-invalid-input\n         * @deprecated Please use `allowedCharPattern` instead.\n         */\n        preventInvalidInput: {\n          type: Boolean,\n          observer: '_preventInvalidInputChanged',\n        },\n      };\n    }\n\n    static get delegateAttrs() {\n      return [...super.delegateAttrs, 'pattern'];\n    }\n\n    static get constraints() {\n      return [...super.constraints, 'pattern'];\n    }\n\n    /** @private */\n    _checkInputValue() {\n      if (this.preventInvalidInput) {\n        const input = this.inputElement;\n        if (input && input.value.length > 0 && !this.checkValidity()) {\n          input.value = this.value || '';\n          // Add input-prevented attribute for 200ms\n          this.setAttribute('input-prevented', '');\n          this._inputDebouncer = Debouncer.debounce(this._inputDebouncer, timeOut.after(200), () => {\n            this.removeAttribute('input-prevented');\n          });\n        }\n      }\n    }\n\n    /**\n     * @param {Event} event\n     * @protected\n     * @override\n     */\n    _onInput(event) {\n      this._checkInputValue();\n\n      super._onInput(event);\n    }\n\n    /** @private */\n    _preventInvalidInputChanged(preventInvalidInput) {\n      if (preventInvalidInput) {\n        console.warn(\n          `WARNING: Since Vaadin 23.2, \"preventInvalidInput\" is deprecated. Please use \"allowedCharPattern\" instead.`,\n        );\n      }\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2018 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/input-container/src/vaadin-input-container.js';\nimport './vaadin-time-picker-combo-box.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\nimport { InputControlMixin } from '@vaadin/field-base/src/input-control-mixin.js';\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\nimport { PatternMixin } from '@vaadin/field-base/src/pattern-mixin.js';\nimport { inputFieldShared } from '@vaadin/field-base/src/styles/input-field-shared-styles.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst MIN_ALLOWED_TIME = '00:00:00.000';\nconst MAX_ALLOWED_TIME = '23:59:59.999';\n\nregisterStyles('vaadin-time-picker', inputFieldShared, { moduleId: 'vaadin-time-picker-styles' });\n\n/**\n * `<vaadin-time-picker>` is a Web Component providing a time-selection field.\n *\n * ```html\n * <vaadin-time-picker></vaadin-time-picker>\n * ```\n * ```js\n * timePicker.value = '14:30';\n * ```\n *\n * When the selected `value` is changed, a `value-changed` event is triggered.\n *\n * ### Styling\n *\n * The following custom properties are available for styling:\n *\n * Custom property                         | Description                | Default\n * ----------------------------------------|----------------------------|---------\n * `--vaadin-field-default-width`          | Default width of the field | `12em`\n * `--vaadin-combo-box-overlay-max-height` | Max height of the overlay  | `65vh`\n *\n * `<vaadin-time-picker>` provides the same set of shadow DOM parts and state attributes as `<vaadin-text-field>`.\n * See [`<vaadin-text-field>`](#/elements/vaadin-text-field) for the styling documentation.\n *\n * In addition to `<vaadin-text-field>` parts, the following parts are available for theming:\n *\n * Part name       | Description\n * ----------------|----------------\n * `toggle-button` | The toggle button\n *\n * In addition to `<vaadin-text-field>` state attributes, the following state attributes are available for theming:\n *\n * Attribute | Description\n * ----------|------------------------------------------\n * `opened`  | Set when the time-picker dropdown is open\n *\n * ### Internal components\n *\n * In addition to `<vaadin-time-picker>` itself, the following internal\n * components are themable:\n *\n * - `<vaadin-time-picker-combo-box>` - has the same API as [`<vaadin-combo-box-light>`](#/elements/vaadin-combo-box-light).\n * - `<vaadin-time-picker-overlay>` - has the same API as [`<vaadin-overlay>`](#/elements/vaadin-overlay).\n * - `<vaadin-time-picker-item>` - has the same API as [`<vaadin-item>`](#/elements/vaadin-item).\n * - [`<vaadin-input-container>`](#/elements/vaadin-input-container) - an internal element wrapping the input.\n *\n * Note: the `theme` attribute value set on `<vaadin-time-picker>` is\n * propagated to the internal components listed above.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n * @fires {CustomEvent} validated - Fired whenever the field is validated.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes InputControlMixin\n * @mixes PatternMixin\n */\nclass TimePicker extends PatternMixin(InputControlMixin(ThemableMixin(ElementMixin(PolymerElement)))) {\n  static get is() {\n    return 'vaadin-time-picker';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        /* See https://github.com/vaadin/vaadin-time-picker/issues/145 */\n        :host([dir='rtl']) [part='input-field'] {\n          direction: ltr;\n        }\n\n        :host([dir='rtl']) [part='input-field'] ::slotted(input)::placeholder {\n          direction: rtl;\n          text-align: left;\n        }\n\n        [part~='toggle-button'] {\n          cursor: pointer;\n        }\n      </style>\n\n      <div class=\"vaadin-time-picker-container\">\n        <div part=\"label\">\n          <slot name=\"label\"></slot>\n          <span part=\"required-indicator\" aria-hidden=\"true\" on-click=\"focus\"></span>\n        </div>\n\n        <vaadin-time-picker-combo-box\n          id=\"comboBox\"\n          filtered-items=\"[[__dropdownItems]]\"\n          value=\"{{_comboBoxValue}}\"\n          opened=\"{{opened}}\"\n          disabled=\"[[disabled]]\"\n          readonly=\"[[readonly]]\"\n          clear-button-visible=\"[[clearButtonVisible]]\"\n          auto-open-disabled=\"[[autoOpenDisabled]]\"\n          position-target=\"[[_inputContainer]]\"\n          theme$=\"[[_theme]]\"\n          on-change=\"__onComboBoxChange\"\n        >\n          <vaadin-input-container\n            part=\"input-field\"\n            readonly=\"[[readonly]]\"\n            disabled=\"[[disabled]]\"\n            invalid=\"[[invalid]]\"\n            theme$=\"[[_theme]]\"\n          >\n            <slot name=\"prefix\" slot=\"prefix\"></slot>\n            <slot name=\"input\"></slot>\n            <div id=\"clearButton\" part=\"clear-button\" slot=\"suffix\" aria-hidden=\"true\"></div>\n            <div id=\"toggleButton\" class=\"toggle-button\" part=\"toggle-button\" slot=\"suffix\" aria-hidden=\"true\"></div>\n          </vaadin-input-container>\n        </vaadin-time-picker-combo-box>\n\n        <div part=\"helper-text\">\n          <slot name=\"helper\"></slot>\n        </div>\n\n        <div part=\"error-message\">\n          <slot name=\"error-message\"></slot>\n        </div>\n      </div>\n      <slot name=\"tooltip\"></slot>\n    `;\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The time value for this element.\n       *\n       * Supported time formats are in ISO 8601:\n       * - `hh:mm` (default)\n       * - `hh:mm:ss`\n       * - `hh:mm:ss.fff`\n       * @type {string}\n       */\n      value: {\n        type: String,\n        notify: true,\n        value: '',\n      },\n\n      /**\n       * True if the dropdown is open, false otherwise.\n       */\n      opened: {\n        type: Boolean,\n        notify: true,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Minimum time allowed.\n       *\n       * Supported time formats are in ISO 8601:\n       * - `hh:mm`\n       * - `hh:mm:ss`\n       * - `hh:mm:ss.fff`\n       * @type {string}\n       */\n      min: {\n        type: String,\n        value: '',\n      },\n\n      /**\n       * Maximum time allowed.\n       *\n       * Supported time formats are in ISO 8601:\n       * - `hh:mm`\n       * - `hh:mm:ss`\n       * - `hh:mm:ss.fff`\n       * @type {string}\n       */\n      max: {\n        type: String,\n        value: '',\n      },\n\n      /**\n       * Defines the time interval (in seconds) between the items displayed\n       * in the time selection box. The default is 1 hour (i.e. `3600`).\n       *\n       * It also configures the precision of the value string. By default\n       * the component formats values as `hh:mm` but setting a step value\n       * lower than one minute or one second, format resolution changes to\n       * `hh:mm:ss` and `hh:mm:ss.fff` respectively.\n       *\n       * Unit must be set in seconds, and for correctly configuring intervals\n       * in the dropdown, it need to evenly divide a day.\n       *\n       * Note: it is possible to define step that is dividing an hour in inexact\n       * fragments (i.e. 5760 seconds which equals 1 hour 36 minutes), but it is\n       * not recommended to use it for better UX experience.\n       */\n      step: {\n        type: Number,\n      },\n\n      /**\n       * Set true to prevent the overlay from opening automatically.\n       * @attr {boolean} auto-open-disabled\n       */\n      autoOpenDisabled: Boolean,\n\n      /** @private */\n      __dropdownItems: {\n        type: Array,\n      },\n\n      /**\n       * The object used to localize this component.\n       * To change the default localization, replace the entire\n       * _i18n_ object or just the property you want to modify.\n       *\n       * The object has the following JSON structure:\n       *\n       * ```\n       * {\n       *   // A function to format given `Object` as\n       *   // time string. Object is in the format `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`\n       *   formatTime: (time) => {\n       *     // returns a string representation of the given\n       *     // object in `hh` / 'hh:mm' / 'hh:mm:ss' / 'hh:mm:ss.fff' - formats\n       *   },\n       *\n       *   // A function to parse the given text to an `Object` in the format\n       *   // `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`.\n       *   // Must properly parse (at least) text\n       *   // formatted by `formatTime`.\n       *   parseTime: text => {\n       *     // Parses a string in object/string that can be formatted by`formatTime`.\n       *   }\n       * }\n       * ```\n       *\n       * Both `formatTime` and `parseTime` need to be implemented\n       * to ensure the component works properly.\n       *\n       * @type {!TimePickerI18n}\n       */\n      i18n: {\n        type: Object,\n        value: () => {\n          return {\n            formatTime: (time) => {\n              if (!time) {\n                return;\n              }\n\n              const pad = (num = 0, fmt = '00') => (fmt + num).substr((fmt + num).length - fmt.length);\n              // Always display hour and minute\n              let timeString = `${pad(time.hours)}:${pad(time.minutes)}`;\n              // Adding second and millisecond depends on resolution\n              if (time.seconds !== undefined) {\n                timeString += `:${pad(time.seconds)}`;\n              }\n              if (time.milliseconds !== undefined) {\n                timeString += `.${pad(time.milliseconds, '000')}`;\n              }\n              return timeString;\n            },\n            parseTime: (text) => {\n              // Parsing with RegExp to ensure correct format\n              const MATCH_HOURS = '(\\\\d|[0-1]\\\\d|2[0-3])';\n              const MATCH_MINUTES = '(\\\\d|[0-5]\\\\d)';\n              const MATCH_SECONDS = MATCH_MINUTES;\n              const MATCH_MILLISECONDS = '(\\\\d{1,3})';\n              const re = new RegExp(\n                `^${MATCH_HOURS}(?::${MATCH_MINUTES}(?::${MATCH_SECONDS}(?:\\\\.${MATCH_MILLISECONDS})?)?)?$`,\n              );\n              const parts = re.exec(text);\n              if (parts) {\n                // Allows setting the milliseconds with hundreds and tens precision\n                if (parts[4]) {\n                  while (parts[4].length < 3) {\n                    parts[4] += '0';\n                  }\n                }\n                return { hours: parts[1], minutes: parts[2], seconds: parts[3], milliseconds: parts[4] };\n              }\n            },\n          };\n        },\n      },\n\n      /** @private */\n      _comboBoxValue: {\n        type: String,\n        observer: '__comboBoxValueChanged',\n      },\n\n      /** @private */\n      _inputContainer: Object,\n    };\n  }\n\n  static get observers() {\n    return ['__updateDropdownItems(i18n.*, min, max, step)'];\n  }\n\n  static get constraints() {\n    return [...super.constraints, 'min', 'max'];\n  }\n\n  /**\n   * Used by `InputControlMixin` as a reference to the clear button element.\n   * @protected\n   * @return {!HTMLElement}\n   */\n  get clearElement() {\n    return this.$.clearButton;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addController(\n      new InputController(this, (input) => {\n        this._setInputElement(input);\n        this._setFocusElement(input);\n        this.stateTarget = input;\n        this.ariaTarget = input;\n      }),\n    );\n    this.addController(new LabelledInputController(this.inputElement, this._labelController));\n    this._inputContainer = this.shadowRoot.querySelector('[part~=\"input-field\"]');\n\n    this._tooltipController = new TooltipController(this);\n    this._tooltipController.setShouldShow((timePicker) => !timePicker.opened);\n    this._tooltipController.setPosition('top');\n    this.addController(this._tooltipController);\n  }\n\n  /**\n   * Override method inherited from `InputMixin` to forward the input to combo-box.\n   * @protected\n   * @override\n   */\n  _inputElementChanged(input) {\n    super._inputElementChanged(input);\n\n    if (input) {\n      this.$.comboBox._setInputElement(input);\n    }\n  }\n\n  /**\n   * Opens the dropdown list.\n   */\n  open() {\n    if (!this.disabled && !this.readonly) {\n      this.opened = true;\n    }\n  }\n\n  /**\n   * Closes the dropdown list.\n   */\n  close() {\n    this.opened = false;\n  }\n\n  /**\n   * Returns true if the current input value satisfies all constraints (if any).\n   * You can override this method for custom validations.\n   *\n   * @return {boolean} True if the value is valid\n   */\n  checkValidity() {\n    return !!(\n      this.inputElement.checkValidity() &&\n      (!this.value || this._timeAllowed(this.i18n.parseTime(this.value))) &&\n      (!this._comboBoxValue || this.i18n.parseTime(this._comboBoxValue))\n    );\n  }\n\n  /**\n   * Override method inherited from `FocusMixin` to validate on blur.\n   * @param {boolean} focused\n   * @protected\n   */\n  _setFocused(focused) {\n    super._setFocused(focused);\n\n    if (!focused) {\n      this.validate();\n    }\n  }\n\n  /** @private */\n  __validDayDivisor(step) {\n    // Valid if undefined, or exact divides a day, or has millisecond resolution\n    return !step || (24 * 3600) % step === 0 || (step < 1 && ((step % 1) * 1000) % 1 === 0);\n  }\n\n  /**\n   * Override an event listener from `KeyboardMixin`.\n   * @param {!KeyboardEvent} e\n   * @protected\n   */\n  _onKeyDown(e) {\n    super._onKeyDown(e);\n\n    if (this.readonly || this.disabled || this.__dropdownItems.length) {\n      return;\n    }\n\n    const stepResolution = (this.__validDayDivisor(this.step) && this.step) || 60;\n\n    if (e.keyCode === 40) {\n      this.__onArrowPressWithStep(-stepResolution);\n    } else if (e.keyCode === 38) {\n      this.__onArrowPressWithStep(stepResolution);\n    }\n  }\n\n  /**\n   * Override an event listener from `KeyboardMixin`.\n   * Do not call `super` in order to override clear\n   * button logic defined in `InputControlMixin`.\n   * @param {Event} event\n   * @protected\n   */\n  _onEscape() {\n    // Do nothing, the internal combo-box handles Escape.\n  }\n\n  /** @private */\n  __onArrowPressWithStep(step) {\n    const objWithStep = this.__addStep(this.__getMsec(this.__memoValue), step, true);\n    this.__memoValue = objWithStep;\n    this.inputElement.value = this.i18n.formatTime(this.__validateTime(objWithStep));\n    this.__dispatchChange();\n  }\n\n  /** @private */\n  __dispatchChange() {\n    this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n  }\n\n  /**\n   * Returning milliseconds from Object in the format `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`\n   * @private\n   */\n  __getMsec(obj) {\n    let result = ((obj && obj.hours) || 0) * 60 * 60 * 1000;\n    result += ((obj && obj.minutes) || 0) * 60 * 1000;\n    result += ((obj && obj.seconds) || 0) * 1000;\n    result += (obj && parseInt(obj.milliseconds)) || 0;\n\n    return result;\n  }\n\n  /**\n   * Returning seconds from Object in the format `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`\n   * @private\n   */\n  __getSec(obj) {\n    let result = ((obj && obj.hours) || 0) * 60 * 60;\n    result += ((obj && obj.minutes) || 0) * 60;\n    result += (obj && obj.seconds) || 0;\n    result += (obj && obj.milliseconds / 1000) || 0;\n\n    return result;\n  }\n\n  /**\n   * Returning Object in the format `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`\n   * from the result of adding step value in milliseconds to the milliseconds amount.\n   * With `precision` parameter rounding the value to the closest step valid interval.\n   * @private\n   */\n  __addStep(msec, step, precision) {\n    // If the time is `00:00` and step changes value downwards, it should be considered as `24:00`\n    if (msec === 0 && step < 0) {\n      msec = 24 * 60 * 60 * 1000;\n    }\n\n    const stepMsec = step * 1000;\n    const diffToNext = msec % stepMsec;\n    if (stepMsec < 0 && diffToNext && precision) {\n      msec -= diffToNext;\n    } else if (stepMsec > 0 && diffToNext && precision) {\n      msec -= diffToNext - stepMsec;\n    } else {\n      msec += stepMsec;\n    }\n\n    const hh = Math.floor(msec / 1000 / 60 / 60);\n    msec -= hh * 1000 * 60 * 60;\n    const mm = Math.floor(msec / 1000 / 60);\n    msec -= mm * 1000 * 60;\n    const ss = Math.floor(msec / 1000);\n    msec -= ss * 1000;\n\n    return { hours: hh < 24 ? hh : 0, minutes: mm, seconds: ss, milliseconds: msec };\n  }\n\n  /** @private */\n  __updateDropdownItems(i8n, min, max, step) {\n    const minTimeObj = this.__validateTime(this.__parseISO(min || MIN_ALLOWED_TIME));\n    const minSec = this.__getSec(minTimeObj);\n\n    const maxTimeObj = this.__validateTime(this.__parseISO(max || MAX_ALLOWED_TIME));\n    const maxSec = this.__getSec(maxTimeObj);\n\n    this.__adjustValue(minSec, maxSec, minTimeObj, maxTimeObj);\n\n    this.__dropdownItems = this.__generateDropdownList(minSec, maxSec, step);\n\n    if (step !== this.__oldStep) {\n      this.__oldStep = step;\n      const parsedObj = this.__validateTime(this.__parseISO(this.value));\n      this.__updateValue(parsedObj);\n    }\n\n    if (this.value) {\n      this._comboBoxValue = this.i18n.formatTime(this.i18n.parseTime(this.value));\n    }\n  }\n\n  /** @private */\n  __generateDropdownList(minSec, maxSec, step) {\n    if (step < 15 * 60 || !this.__validDayDivisor(step)) {\n      return [];\n    }\n\n    const generatedList = [];\n\n    // Default step in overlay items is 1 hour\n    step = step || 3600;\n\n    let time = -step + minSec;\n    while (time + step >= minSec && time + step <= maxSec) {\n      const timeObj = this.__validateTime(this.__addStep(time * 1000, step));\n      time += step;\n      const formatted = this.i18n.formatTime(timeObj);\n      generatedList.push({ label: formatted, value: formatted });\n    }\n\n    return generatedList;\n  }\n\n  /** @private */\n  __adjustValue(minSec, maxSec, minTimeObj, maxTimeObj) {\n    // Do not change the value if it is empty\n    if (!this.__memoValue) {\n      return;\n    }\n\n    const valSec = this.__getSec(this.__memoValue);\n\n    if (valSec < minSec) {\n      this.__updateValue(minTimeObj);\n    } else if (valSec > maxSec) {\n      this.__updateValue(maxTimeObj);\n    }\n  }\n\n  /**\n   * Override an observer from `InputMixin`.\n   * @protected\n   * @override\n   */\n  _valueChanged(value, oldValue) {\n    const parsedObj = (this.__memoValue = this.__parseISO(value));\n    const newValue = this.__formatISO(parsedObj) || '';\n\n    if (value !== '' && value !== null && !parsedObj) {\n      // Value can not be parsed, reset to the old one.\n      this.value = oldValue === undefined ? '' : oldValue;\n    } else if (value !== newValue) {\n      // Value can be parsed (e.g. 12 -> 12:00), adjust.\n      this.value = newValue;\n    } else if (this.__keepInvalidInput) {\n      // User input could not be parsed and was reset\n      // to empty string, do not update input value.\n      delete this.__keepInvalidInput;\n    } else {\n      this.__updateInputValue(parsedObj);\n    }\n\n    this._toggleHasValue(this._hasValue);\n  }\n\n  /** @private */\n  __comboBoxValueChanged(value, oldValue) {\n    if (value === '' && oldValue === undefined) {\n      return;\n    }\n\n    const parsedObj = this.i18n.parseTime(value);\n    const newValue = this.i18n.formatTime(parsedObj) || '';\n\n    if (parsedObj) {\n      if (value !== newValue) {\n        this._comboBoxValue = newValue;\n      } else {\n        this.__updateValue(parsedObj);\n      }\n    } else {\n      // If the user input can not be parsed, set a flag\n      // that prevents `__valueChanged` from removing the input\n      // after setting the value property to an empty string below.\n      if (this.value !== '' && value !== '') {\n        this.__keepInvalidInput = true;\n      }\n\n      this.value = '';\n    }\n  }\n\n  /** @private */\n  __onComboBoxChange(event) {\n    event.stopPropagation();\n\n    this.validate();\n\n    this.__dispatchChange();\n  }\n\n  /** @private */\n  __updateValue(obj) {\n    const timeString = this.__formatISO(this.__validateTime(obj)) || '';\n    this.value = timeString;\n  }\n\n  /** @private */\n  __updateInputValue(obj) {\n    const timeString = this.i18n.formatTime(this.__validateTime(obj)) || '';\n    this._comboBoxValue = timeString;\n  }\n\n  /** @private */\n  __validateTime(timeObject) {\n    if (timeObject) {\n      timeObject.hours = parseInt(timeObject.hours);\n      timeObject.minutes = parseInt(timeObject.minutes || 0);\n      timeObject.seconds = this.__stepSegment < 3 ? undefined : parseInt(timeObject.seconds || 0);\n      timeObject.milliseconds = this.__stepSegment < 4 ? undefined : parseInt(timeObject.milliseconds || 0);\n    }\n    return timeObject;\n  }\n\n  /** @private */\n  get __stepSegment() {\n    if (this.step % 3600 === 0) {\n      // Accept hours\n      return 1;\n    } else if (this.step % 60 === 0 || !this.step) {\n      // Accept minutes\n      return 2;\n    } else if (this.step % 1 === 0) {\n      // Accept seconds\n      return 3;\n    } else if (this.step < 1) {\n      // Accept milliseconds\n      return 4;\n    }\n    return undefined;\n  }\n\n  /** @private */\n  __formatISO(time) {\n    // The default i18n formatter implementation is ISO 8601 compliant\n    return TimePicker.properties.i18n.value().formatTime(time);\n  }\n\n  /** @private */\n  __parseISO(text) {\n    // The default i18n parser implementation is ISO 8601 compliant\n    return TimePicker.properties.i18n.value().parseTime(text);\n  }\n\n  /**\n   * Returns true if `time` satisfies the `min` and `max` constraints (if any).\n   *\n   * @param {!TimePickerTime} time Value to check against constraints\n   * @return {boolean} True if `time` satisfies the constraints\n   * @protected\n   */\n  _timeAllowed(time) {\n    const parsedMin = this.i18n.parseTime(this.min || MIN_ALLOWED_TIME);\n    const parsedMax = this.i18n.parseTime(this.max || MAX_ALLOWED_TIME);\n\n    return (\n      (!this.__getMsec(parsedMin) || this.__getMsec(time) >= this.__getMsec(parsedMin)) &&\n      (!this.__getMsec(parsedMax) || this.__getMsec(time) <= this.__getMsec(parsedMax))\n    );\n  }\n\n  /**\n   * Override method inherited from `InputControlMixin`.\n   * @protected\n   */\n  _onClearButtonClick() {}\n\n  /**\n   * Override method inherited from `InputConstraintsMixin`.\n   * @protected\n   */\n  _onChange() {}\n\n  /**\n   * Override method inherited from `InputMixin`.\n   * @protected\n   */\n  _onInput() {\n    // Need to invoke _checkInputValue from PatternMixin to prevent invalid input\n    this._checkInputValue();\n  }\n\n  /**\n   * Fired when the user commits a value change.\n   *\n   * @event change\n   */\n}\n\ncustomElements.define(TimePicker.is, TimePicker);\n\nexport { TimePicker };\n", "/**\n * @license\n * Copyright (c) 2019 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/vaadin-material-styles/color.js';\nimport '@vaadin/vaadin-material-styles/typography.js';\nimport { helper } from '@vaadin/vaadin-material-styles/mixins/helper.js';\nimport { requiredField } from '@vaadin/vaadin-material-styles/mixins/required-field.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst customField = css`\n  :host {\n    display: inline-flex;\n    position: relative;\n    margin-bottom: 8px;\n    outline: none;\n    color: var(--material-body-text-color);\n    font-size: var(--material-body-font-size);\n    font-family: var(--material-font-family);\n    line-height: 48px;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  /* align with text-field label */\n  :host([has-label]) {\n    padding-top: 16px;\n  }\n\n  /* align with text-field error message */\n  :host([has-error-message]) [part='error-message'],\n  :host([has-helper]) [part='helper-text'] {\n    margin-top: -8px;\n  }\n\n  :host([disabled]) [part='label'] {\n    color: var(--material-disabled-text-color);\n    -webkit-text-fill-color: var(--material-disabled-text-color);\n  }\n\n  :host([focused]:not([invalid])) [part='label'] {\n    color: var(--material-primary-text-color);\n  }\n`;\n\nregisterStyles('vaadin-custom-field', [requiredField, helper, customField], {\n  moduleId: 'material-custom-field',\n});\n\nexport { customField };\n", "import '@vaadin/date-picker/theme/material/vaadin-date-picker.js';\nimport '@vaadin/time-picker/theme/material/vaadin-time-picker.js';\nimport { customField } from '@vaadin/custom-field/theme/material/vaadin-custom-field-styles.js';\nimport { helper } from '@vaadin/vaadin-material-styles/mixins/helper.js';\nimport { requiredField } from '@vaadin/vaadin-material-styles/mixins/required-field.js';\nimport { registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles('vaadin-date-time-picker', [requiredField, helper, customField], {\n  moduleId: 'material-date-time-picker',\n});\n", "/**\n * @license\n * Copyright (c) 2019 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { DatePicker } from '@vaadin/date-picker/src/vaadin-date-picker.js';\n\n/**\n * An element used internally by `<vaadin-date-time-picker>`. Not intended to be used separately.\n *\n * @extends DatePicker\n * @private\n */\nclass DateTimePickerDatePicker extends DatePicker {\n  static get is() {\n    return 'vaadin-date-time-picker-date-picker';\n  }\n}\n\ncustomElements.define(DateTimePickerDatePicker.is, DateTimePickerDatePicker);\n", "/**\n * @license\n * Copyright (c) 2019 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { TimePicker } from '@vaadin/time-picker/src/vaadin-time-picker.js';\n\n/**\n * An element used internally by `<vaadin-date-time-picker>`. Not intended to be used separately.\n *\n * @extends TimePicker\n * @private\n */\nclass DateTimePickerTimePicker extends TimePicker {\n  static get is() {\n    return 'vaadin-date-time-picker-time-picker';\n  }\n}\n\ncustomElements.define(DateTimePickerTimePicker.is, DateTimePickerTimePicker);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to provide content for named slots defined by component.\n *\n * @polymerMixin\n */\nexport const SlotMixin = dedupingMixin(\n  (superclass) =>\n    class SlotMixinClass extends superclass {\n      /**\n       * List of named slots to initialize.\n       * @protected\n       */\n      get slots() {\n        return {};\n      }\n\n      /** @protected */\n      ready() {\n        super.ready();\n        this._connectSlotMixin();\n      }\n\n      /** @private */\n      _connectSlotMixin() {\n        Object.keys(this.slots).forEach((slotName) => {\n          // Ignore labels of nested components, if any\n          const hasContent = this._getDirectSlotChild(slotName) !== undefined;\n\n          if (!hasContent) {\n            const slotFactory = this.slots[slotName];\n            const slotContent = slotFactory();\n            if (slotContent instanceof Element) {\n              if (slotName !== '') {\n                slotContent.setAttribute('slot', slotName);\n              }\n              this.appendChild(slotContent);\n            }\n          }\n        });\n      }\n\n      /** @protected */\n      _getDirectSlotChild(slotName) {\n        return Array.from(this.childNodes).find((node) => {\n          // Either an element (any slot) or a text node (only un-named slot).\n          return (\n            (node.nodeType === Node.ELEMENT_NODE && node.slot === slotName) ||\n            (node.nodeType === Node.TEXT_NODE && node.textContent.trim() && slotName === '')\n          );\n        });\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2019 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport './vaadin-date-time-picker-date-picker.js';\nimport './vaadin-date-time-picker-time-picker.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { DisabledMixin } from '@vaadin/component-base/src/disabled-mixin.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { FocusMixin } from '@vaadin/component-base/src/focus-mixin.js';\nimport { SlotMixin } from '@vaadin/component-base/src/slot-mixin.js';\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\nimport { dateEquals, parseDate } from '@vaadin/date-picker/src/vaadin-date-picker-helper.js';\nimport { FieldMixin } from '@vaadin/field-base/src/field-mixin.js';\nimport { inputFieldShared } from '@vaadin/field-base/src/styles/input-field-shared-styles.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles('vaadin-date-time-picker', inputFieldShared, { moduleId: 'vaadin-date-time-picker' });\n\n/**\n * @typedef {object} TimePickerTime\n * @property {string | number} hours\n * @property {string | number} minutes\n * @property {string | number} [seconds]\n * @property {string | number} [milliseconds]\n */\n\n// Find a property definition from the prototype chain of a Polymer element class\nfunction getPropertyFromPrototype(clazz, prop) {\n  while (clazz) {\n    if (clazz.properties && clazz.properties[prop]) {\n      return clazz.properties[prop];\n    }\n    clazz = Object.getPrototypeOf(clazz);\n  }\n}\n\nconst datePickerClass = customElements.get('vaadin-date-time-picker-date-picker');\nconst timePickerClass = customElements.get('vaadin-date-time-picker-time-picker');\nconst datePickerI18nDefaults = getPropertyFromPrototype(datePickerClass, 'i18n').value();\nconst timePickerI18nDefaults = getPropertyFromPrototype(timePickerClass, 'i18n').value();\nconst datePickerI18nProps = Object.keys(datePickerI18nDefaults);\nconst timePickerI18nProps = Object.keys(timePickerI18nDefaults);\n\n/**\n * `<vaadin-date-time-picker>` is a Web Component providing a date time selection field.\n *\n * ```html\n * <vaadin-date-time-picker value=\"2019-09-16T15:00\"></vaadin-date-time-picker>\n * ```\n *\n * ```js\n * dateTimePicker.value = '2019-09-16T15:00';\n * ```\n *\n * When the selected `value` is changed, a `value-changed` event is triggered.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name            | Description\n * ---------------------|----------------\n * `label`              | The slotted label element wrapper\n * `helper-text`        | The slotted helper text element wrapper\n * `error-message`      | The slotted error message element wrapper\n * `required-indicator` | The `required` state indicator element\n *\n * The following state attributes are available for styling:\n *\n * Attribute           | Description                               | Part name\n * --------------------|-------------------------------------------|------------\n * `disabled`          | Set when the element is disabled          | :host\n * `focused`           | Set when the element is focused           | :host\n * `focus-ring`        | Set when the element is keyboard focused  | :host\n * `readonly`          | Set when the element is readonly          | :host\n * `invalid`           | Set when the element is invalid           | :host\n * `has-label`         | Set when the element has a label          | :host\n * `has-value`         | Set when the element has a value          | :host\n * `has-helper`        | Set when the element has helper text      | :host\n * `has-error-message` | Set when the element has an error message | :host\n *\n * ### Internal components\n *\n * In addition to `<vaadin-date-time-picker>` itself, the following internal\n * components are themable:\n *\n * - `<vaadin-date-time-picker-date-picker>` - has the same API as [`<vaadin-date-picker>`](#/elements/vaadin-date-picker).\n * - `<vaadin-date-time-picker-time-picker>` - has the same API as [`<vaadin-time-picker>`](#/elements/vaadin-time-picker).\n *\n * Note: the `theme` attribute value set on `<vaadin-date-time-picker>` is\n * propagated to the internal components listed above.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n * @fires {CustomEvent} validated - Fired whenever the field is validated.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes FocusMixin\n * @mixes DisabledMixin\n * @mixes SlotMixin\n * @mixes FieldMixin\n */\nclass DateTimePicker extends FieldMixin(\n  SlotMixin(DisabledMixin(FocusMixin(ThemableMixin(ElementMixin(PolymerElement))))),\n) {\n  static get template() {\n    return html`\n      <style>\n        .vaadin-date-time-picker-container {\n          --vaadin-field-default-width: auto;\n        }\n\n        .slots {\n          display: flex;\n          --vaadin-field-default-width: 12em;\n        }\n\n        .slots ::slotted([slot='date-picker']) {\n          min-width: 0;\n          flex: 1 1 auto;\n        }\n\n        .slots ::slotted([slot='time-picker']) {\n          min-width: 0;\n          flex: 1 1.65 auto;\n        }\n      </style>\n\n      <div class=\"vaadin-date-time-picker-container\">\n        <div part=\"label\" on-click=\"focus\">\n          <slot name=\"label\"></slot>\n          <span part=\"required-indicator\" aria-hidden=\"true\"></span>\n        </div>\n\n        <div class=\"slots\">\n          <slot name=\"date-picker\" id=\"dateSlot\"></slot>\n          <slot name=\"time-picker\" id=\"timeSlot\"></slot>\n        </div>\n\n        <div part=\"helper-text\">\n          <slot name=\"helper\"></slot>\n        </div>\n\n        <div part=\"error-message\">\n          <slot name=\"error-message\"></slot>\n        </div>\n      </div>\n\n      <slot name=\"tooltip\"></slot>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-date-time-picker';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The name of the control, which is submitted with the form data.\n       */\n      name: {\n        type: String,\n      },\n\n      /**\n       * The value for this element.\n       *\n       * Supported date time format is based on ISO 8601 (without a time zone designator):\n       * - Minute precision `\"YYYY-MM-DDThh:mm\"` (default)\n       * - Second precision `\"YYYY-MM-DDThh:mm:ss\"`\n       * - Millisecond precision `\"YYYY-MM-DDThh:mm:ss.fff\"`\n       * @type {string}\n       */\n      value: {\n        type: String,\n        notify: true,\n        value: '',\n        observer: '__valueChanged',\n      },\n\n      /**\n       * The earliest allowed value (date and time) that can be selected. All earlier values will be disabled.\n       *\n       * Supported date time format is based on ISO 8601 (without a time zone designator):\n       * - Minute precision `\"YYYY-MM-DDThh:mm\"`\n       * - Second precision `\"YYYY-MM-DDThh:mm:ss\"`\n       * - Millisecond precision `\"YYYY-MM-DDThh:mm:ss.fff\"`\n       *\n       * @type {string | undefined}\n       */\n      min: {\n        type: String,\n        observer: '__minChanged',\n      },\n\n      /**\n       * The latest value (date and time) that can be selected. All later values will be disabled.\n       *\n       * Supported date time format is based on ISO 8601 (without a time zone designator):\n       * - Minute precision `\"YYYY-MM-DDThh:mm\"`\n       * - Second precision `\"YYYY-MM-DDThh:mm:ss\"`\n       * - Millisecond precision `\"YYYY-MM-DDThh:mm:ss.fff\"`\n       *\n       * @type {string | undefined}\n       */\n      max: {\n        type: String,\n        observer: '__maxChanged',\n      },\n\n      /**\n       * The earliest value that can be selected. All earlier values will be disabled.\n       * @private\n       */\n      __minDateTime: {\n        type: Date,\n        value: '',\n      },\n\n      /**\n       * The latest value that can be selected. All later values will be disabled.\n       * @private\n       */\n      __maxDateTime: {\n        type: Date,\n        value: '',\n      },\n\n      /**\n       * A placeholder string for the date field.\n       * @attr {string} date-placeholder\n       */\n      datePlaceholder: {\n        type: String,\n      },\n\n      /**\n       * A placeholder string for the time field.\n       * @attr {string} time-placeholder\n       */\n      timePlaceholder: {\n        type: String,\n      },\n\n      /**\n       * Defines the time interval (in seconds) between the items displayed\n       * in the time selection box. The default is 1 hour (i.e. `3600`).\n       *\n       * It also configures the precision of the time part of the value string. By default\n       * the component formats time values as `hh:mm` but setting a step value\n       * lower than one minute or one second, format resolution changes to\n       * `hh:mm:ss` and `hh:mm:ss.fff` respectively.\n       *\n       * Unit must be set in seconds, and for correctly configuring intervals\n       * in the dropdown, it need to evenly divide a day.\n       *\n       * Note: it is possible to define step that is dividing an hour in inexact\n       * fragments (i.e. 5760 seconds which equals 1 hour 36 minutes), but it is\n       * not recommended to use it for better UX.\n       */\n      step: {\n        type: Number,\n      },\n\n      /**\n       * Date which should be visible in the date picker overlay when there is no value selected.\n       *\n       * The same date formats as for the `value` property are supported but without the time part.\n       * @attr {string} initial-position\n       */\n      initialPosition: String,\n\n      /**\n       * Set true to display ISO-8601 week numbers in the calendar. Notice that\n       * displaying week numbers is only supported when `i18n.firstDayOfWeek`\n       * is 1 (Monday).\n       * @attr {boolean} show-week-numbers\n       */\n      showWeekNumbers: {\n        type: Boolean,\n      },\n\n      /**\n       * Set to true to prevent the overlays from opening automatically.\n       * @attr {boolean} auto-open-disabled\n       */\n      autoOpenDisabled: Boolean,\n\n      /**\n       * Set to true to make this element read-only.\n       * @type {boolean}\n       */\n      readonly: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Specify that this control should have input focus when the page loads.\n       * @type {boolean}\n       */\n      autofocus: {\n        type: Boolean,\n      },\n\n      /**\n       * The current selected date time.\n       * @private\n       */\n      __selectedDateTime: {\n        type: Date,\n      },\n\n      /**\n       * The object used to localize this component.\n       * To change the default localization, replace the entire\n       * `i18n` object or just the properties you want to modify.\n       *\n       * The object is a combination of the i18n properties supported by\n       * [`<vaadin-date-picker>`](#/elements/vaadin-date-picker) and\n       * [`<vaadin-time-picker>`](#/elements/vaadin-time-picker).\n       * @type {!DateTimePickerI18n}\n       */\n      i18n: {\n        type: Object,\n        value: () => ({ ...datePickerI18nDefaults, ...timePickerI18nDefaults }),\n      },\n\n      /**\n       * The current slotted date picker.\n       * @private\n       */\n      __datePicker: {\n        type: HTMLElement,\n        observer: '__datePickerChanged',\n      },\n\n      /**\n       * The current slotted time picker.\n       * @private\n       */\n      __timePicker: {\n        type: HTMLElement,\n        observer: '__timePickerChanged',\n      },\n    };\n  }\n\n  static get observers() {\n    return [\n      '__selectedDateTimeChanged(__selectedDateTime)',\n      '__datePlaceholderChanged(datePlaceholder)',\n      '__timePlaceholderChanged(timePlaceholder)',\n      '__stepChanged(step)',\n      '__initialPositionChanged(initialPosition)',\n      '__showWeekNumbersChanged(showWeekNumbers)',\n      '__requiredChanged(required)',\n      '__invalidChanged(invalid)',\n      '__disabledChanged(disabled)',\n      '__readonlyChanged(readonly)',\n      '__i18nChanged(i18n.*)',\n      '__autoOpenDisabledChanged(autoOpenDisabled)',\n      '__themeChanged(_theme, __datePicker, __timePicker)',\n      '__pickersChanged(__datePicker, __timePicker)',\n    ];\n  }\n\n  /** @protected */\n  get slots() {\n    return {\n      ...super.slots,\n      'date-picker': () => {\n        const element = document.createElement('vaadin-date-time-picker-date-picker');\n        element.__defaultPicker = true;\n        return element;\n      },\n      'time-picker': () => {\n        const element = document.createElement('vaadin-date-time-picker-time-picker');\n        element.__defaultPicker = true;\n        return element;\n      },\n    };\n  }\n\n  constructor() {\n    super();\n    // Default value for \"min\" and \"max\" properties of vaadin-date-picker (for removing constraint)\n    this.__defaultDateMinMaxValue = undefined;\n    // Default value for \"min\" property of vaadin-time-picker (for removing constraint)\n    this.__defaultTimeMinValue = '00:00:00.000';\n    // Default value for \"max\" property of vaadin-time-picker (for removing constraint)\n    this.__defaultTimeMaxValue = '23:59:59.999';\n\n    this.__changeEventHandler = this.__changeEventHandler.bind(this);\n    this.__valueChangedEventHandler = this.__valueChangedEventHandler.bind(this);\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.__datePicker = this._getDirectSlotChild('date-picker');\n    this.__timePicker = this._getDirectSlotChild('time-picker');\n\n    this._observer = new FlattenedNodesObserver(this, (info) => {\n      this.__onDomChange(info.addedNodes);\n    });\n\n    if (this.autofocus && !this.disabled) {\n      window.requestAnimationFrame(() => this.focus());\n    }\n\n    this.setAttribute('role', 'group');\n\n    this._tooltipController = new TooltipController(this);\n    this.addController(this._tooltipController);\n    this._tooltipController.setPosition('top');\n    this._tooltipController.setShouldShow((target) => {\n      return target.__datePicker && !target.__datePicker.opened && target.__timePicker && !target.__timePicker.opened;\n    });\n\n    this.ariaTarget = this;\n  }\n\n  focus() {\n    this.__datePicker.focus();\n  }\n\n  /**\n   * Override method inherited from `FocusMixin` to validate on blur.\n   * @param {boolean} focused\n   * @protected\n   * @override\n   */\n  _setFocused(focused) {\n    super._setFocused(focused);\n\n    if (!focused) {\n      this.validate();\n    }\n  }\n\n  /**\n   * Override method inherited from `FocusMixin` to not remove focused\n   * state when focus moves between pickers or to the overlay.\n   * @param {FocusEvent} event\n   * @return {boolean}\n   * @protected\n   * @override\n   */\n  _shouldRemoveFocus(event) {\n    const target = event.relatedTarget;\n\n    if (\n      this.__datePicker.contains(target) ||\n      this.__timePicker.contains(target) ||\n      target === this.__datePicker.$.overlay\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /** @private */\n  __syncI18n(target, source, props) {\n    props = props || Object.keys(source.i18n);\n    props.forEach((prop) => {\n      // eslint-disable-next-line no-prototype-builtins\n      if (source.i18n && source.i18n.hasOwnProperty(prop)) {\n        target.set(`i18n.${prop}`, source.i18n[prop]);\n      }\n    });\n  }\n\n  /** @private */\n  __changeEventHandler(event) {\n    event.stopPropagation();\n\n    if (this.__dispatchChangeForValue === this.value) {\n      this.__dispatchChange();\n      this.validate();\n    }\n    this.__dispatchChangeForValue = undefined;\n  }\n\n  /** @private */\n  __addInputListeners(node) {\n    node.addEventListener('change', this.__changeEventHandler);\n    node.addEventListener('value-changed', this.__valueChangedEventHandler);\n  }\n\n  /** @private */\n  __removeInputListeners(node) {\n    node.removeEventListener('change', this.__changeEventHandler);\n    node.removeEventListener('value-changed', this.__valueChangedEventHandler);\n  }\n\n  /** @private */\n  __onDomChange(addedNodes) {\n    addedNodes\n      .filter((node) => node.nodeType === Node.ELEMENT_NODE)\n      .forEach((node) => {\n        const slotAttributeValue = node.getAttribute('slot');\n\n        if (slotAttributeValue === 'date-picker') {\n          this.__datePicker = node;\n        } else if (slotAttributeValue === 'time-picker') {\n          this.__timePicker = node;\n        }\n      });\n\n    if (this.value && (this.min || this.max)) {\n      this.validate();\n    }\n  }\n\n  /** @private */\n  __datePickerChanged(newDatePicker, existingDatePicker) {\n    if (!newDatePicker) {\n      return;\n    }\n    if (existingDatePicker) {\n      // Remove an existing date picker\n      this.__removeInputListeners(existingDatePicker);\n      existingDatePicker.remove();\n    }\n\n    this.__addInputListeners(newDatePicker);\n\n    if (newDatePicker.__defaultPicker) {\n      // Synchronize properties to default date picker\n      newDatePicker.placeholder = this.datePlaceholder;\n      newDatePicker.invalid = this.invalid;\n      newDatePicker.initialPosition = this.initialPosition;\n      newDatePicker.showWeekNumbers = this.showWeekNumbers;\n      this.__syncI18n(newDatePicker, this, datePickerI18nProps);\n    } else {\n      // Synchronize properties from slotted date picker\n      this.datePlaceholder = newDatePicker.placeholder;\n      this.initialPosition = newDatePicker.initialPosition;\n      this.showWeekNumbers = newDatePicker.showWeekNumbers;\n      this.__syncI18n(this, newDatePicker, datePickerI18nProps);\n    }\n\n    // Min and max are always synchronized from date time picker (host) to inner fields because time picker\n    // min and max need to be dynamically set depending on currently selected date instead of simple propagation\n    newDatePicker.min = this.__formatDateISO(this.__minDateTime, this.__defaultDateMinMaxValue);\n    newDatePicker.max = this.__formatDateISO(this.__maxDateTime, this.__defaultDateMinMaxValue);\n    newDatePicker.required = this.required;\n    newDatePicker.disabled = this.disabled;\n    newDatePicker.readonly = this.readonly;\n    newDatePicker.autoOpenDisabled = this.autoOpenDisabled;\n\n    // Disable default internal validation for the component\n    newDatePicker.validate = () => {};\n    newDatePicker._validateInput = () => {};\n  }\n\n  /** @private */\n  __timePickerChanged(newTimePicker, existingTimePicker) {\n    if (!newTimePicker) {\n      return;\n    }\n    if (existingTimePicker) {\n      // Remove an existing time picker\n      this.__removeInputListeners(existingTimePicker);\n      existingTimePicker.remove();\n    }\n\n    this.__addInputListeners(newTimePicker);\n\n    if (newTimePicker.__defaultPicker) {\n      // Synchronize properties to default time picker\n      newTimePicker.placeholder = this.timePlaceholder;\n      newTimePicker.step = this.step;\n      newTimePicker.invalid = this.invalid;\n      this.__syncI18n(newTimePicker, this, timePickerI18nProps);\n    } else {\n      // Synchronize properties from slotted time picker\n      this.timePlaceholder = newTimePicker.placeholder;\n      this.step = newTimePicker.step;\n      this.__syncI18n(this, newTimePicker, timePickerI18nProps);\n    }\n\n    // Min and max are always synchronized from parent to slotted because time picker min and max\n    // need to be dynamically set depending on currently selected date instead of simple propagation\n    this.__updateTimePickerMinMax();\n    newTimePicker.required = this.required;\n    newTimePicker.disabled = this.disabled;\n    newTimePicker.readonly = this.readonly;\n    newTimePicker.autoOpenDisabled = this.autoOpenDisabled;\n\n    // Disable default internal validation for the component\n    newTimePicker.validate = () => {};\n  }\n\n  /** @private */\n  __updateTimePickerMinMax() {\n    if (this.__timePicker && this.__datePicker) {\n      const selectedDate = this.__parseDate(this.__datePicker.value);\n      const isMinMaxSameDay = dateEquals(this.__minDateTime, this.__maxDateTime);\n      const oldTimeValue = this.__timePicker.value;\n\n      if ((this.__minDateTime && dateEquals(selectedDate, this.__minDateTime)) || isMinMaxSameDay) {\n        this.__timePicker.min = this.__dateToIsoTimeString(this.__minDateTime);\n      } else {\n        this.__timePicker.min = this.__defaultTimeMinValue;\n      }\n\n      if ((this.__maxDateTime && dateEquals(selectedDate, this.__maxDateTime)) || isMinMaxSameDay) {\n        this.__timePicker.max = this.__dateToIsoTimeString(this.__maxDateTime);\n      } else {\n        this.__timePicker.max = this.__defaultTimeMaxValue;\n      }\n\n      // If time picker automatically adjusts the time value due to the new min or max\n      // revert the time value\n      if (this.__timePicker.value !== oldTimeValue) {\n        this.__timePicker.value = oldTimeValue;\n      }\n    }\n  }\n\n  /** @private */\n  __i18nChanged(changeRecord) {\n    if (this.__datePicker) {\n      this.__datePicker.set(changeRecord.path, changeRecord.value);\n    }\n\n    if (this.__timePicker) {\n      this.__timePicker.set(changeRecord.path, changeRecord.value);\n    }\n  }\n\n  /** @private */\n  __datePlaceholderChanged(datePlaceholder) {\n    if (this.__datePicker) {\n      this.__datePicker.placeholder = datePlaceholder;\n    }\n  }\n\n  /** @private */\n  __timePlaceholderChanged(timePlaceholder) {\n    if (this.__timePicker) {\n      this.__timePicker.placeholder = timePlaceholder;\n    }\n  }\n\n  /** @private */\n  __stepChanged(step) {\n    if (this.__timePicker && this.__timePicker.step !== step) {\n      this.__timePicker.step = step;\n    }\n  }\n\n  /** @private */\n  __initialPositionChanged(initialPosition) {\n    if (this.__datePicker) {\n      this.__datePicker.initialPosition = initialPosition;\n    }\n  }\n\n  /** @private */\n  __showWeekNumbersChanged(showWeekNumbers) {\n    if (this.__datePicker) {\n      this.__datePicker.showWeekNumbers = showWeekNumbers;\n    }\n  }\n\n  /** @private */\n  __invalidChanged(invalid) {\n    if (this.__datePicker) {\n      this.__datePicker.invalid = invalid;\n    }\n    if (this.__timePicker) {\n      this.__timePicker.invalid = invalid;\n    }\n  }\n\n  /** @private */\n  __requiredChanged(required) {\n    if (this.__datePicker) {\n      this.__datePicker.required = required;\n    }\n    if (this.__timePicker) {\n      this.__timePicker.required = required;\n    }\n  }\n\n  /** @private */\n  __disabledChanged(disabled) {\n    if (this.__datePicker) {\n      this.__datePicker.disabled = disabled;\n    }\n    if (this.__timePicker) {\n      this.__timePicker.disabled = disabled;\n    }\n  }\n\n  /** @private */\n  __readonlyChanged(readonly) {\n    if (this.__datePicker) {\n      this.__datePicker.readonly = readonly;\n    }\n    if (this.__timePicker) {\n      this.__timePicker.readonly = readonly;\n    }\n  }\n\n  /**\n   * String (ISO date) to Date object\n   * @param {string} str e.g. 'yyyy-mm-dd'\n   * @return {Date | undefined}\n   * @private\n   */\n  __parseDate(str) {\n    return parseDate(str);\n  }\n\n  /**\n   * Date object to string (ISO date)\n   * @param {Date} date\n   * @param {string} defaultValue\n   * @return {string} e.g. 'yyyy-mm-dd' (or defaultValue when date is falsy)\n   * @private\n   */\n  __formatDateISO(date, defaultValue) {\n    if (!date) {\n      return defaultValue;\n    }\n    return datePickerClass.prototype._formatISO(date);\n  }\n\n  /**\n   * Custom time object to string (ISO time)\n   * @param {!TimePickerTime} time Time components as properties { hours, minutes, seconds, milliseconds }\n   * @return {string} e.g. 'hh:mm', 'hh:mm:ss', 'hh:mm:ss.fff'\n   * @private\n   */\n  __formatTimeISO(time) {\n    return timePickerI18nDefaults.formatTime(time);\n  }\n\n  /**\n   * String (ISO time) to custom time object\n   * @param {string} str e.g. 'hh:mm', 'hh:mm:ss', 'hh:mm:ss.fff'\n   * @return {!TimePickerTime | undefined} Time components as properties { hours, minutes, seconds, milliseconds }\n   * @private\n   */\n  __parseTimeISO(str) {\n    return timePickerI18nDefaults.parseTime(str);\n  }\n\n  /**\n   * String (ISO date time) to Date object\n   * @param {string} str e.g. 'yyyy-mm-ddThh:mm', 'yyyy-mm-ddThh:mm:ss', 'yyyy-mm-ddThh:mm:ss.fff'\n   * @return {Date | undefined}\n   * @private\n   */\n  __parseDateTime(str) {\n    const [dateValue, timeValue] = str.split('T');\n    /* c8 ignore next 3 */\n    if (!(dateValue && timeValue)) {\n      return;\n    }\n\n    /** @type {Date} */\n    const date = this.__parseDate(dateValue);\n    if (!date) {\n      return;\n    }\n\n    const time = this.__parseTimeISO(timeValue);\n    if (!time) {\n      return;\n    }\n\n    date.setHours(parseInt(time.hours));\n    date.setMinutes(parseInt(time.minutes || 0));\n    date.setSeconds(parseInt(time.seconds || 0));\n    date.setMilliseconds(parseInt(time.milliseconds || 0));\n\n    return date;\n  }\n\n  /**\n   * Date object to string (ISO date time)\n   * @param {Date} date\n   * @return {string} e.g. 'yyyy-mm-ddThh:mm', 'yyyy-mm-ddThh:mm:ss', 'yyyy-mm-ddThh:mm:ss.fff'\n   *                  (depending on precision defined by \"step\" property)\n   * @private\n   */\n  __formatDateTime(date) {\n    if (!date) {\n      return '';\n    }\n    const dateValue = this.__formatDateISO(date, '');\n    const timeValue = this.__dateToIsoTimeString(date);\n    return `${dateValue}T${timeValue}`;\n  }\n\n  /**\n   * Date object to string (ISO time)\n   * @param {Date} date\n   * @return {string} e.g. 'hh:mm', 'hh:mm:ss', 'hh:mm:ss.fff' (depending on precision defined by \"step\" property)\n   * @private\n   */\n  __dateToIsoTimeString(date) {\n    return this.__formatTimeISO(\n      this.__validateTime({\n        hours: date.getHours(),\n        minutes: date.getMinutes(),\n        seconds: date.getSeconds(),\n        milliseconds: date.getMilliseconds(),\n      }),\n    );\n  }\n\n  /**\n   * @param {!TimePickerTime} timeObject\n   * @return {!TimePickerTime}\n   * @private\n   */\n  __validateTime(timeObject) {\n    if (timeObject) {\n      timeObject.seconds = this.__stepSegment < 3 ? undefined : timeObject.seconds;\n      timeObject.milliseconds = this.__stepSegment < 4 ? undefined : timeObject.milliseconds;\n    }\n    return timeObject;\n  }\n\n  /** @private */\n  get __inputs() {\n    return [this.__datePicker, this.__timePicker];\n  }\n\n  /**\n   * Returns true if the current input value satisfies all constraints (if any)\n   *\n   * You can override the `checkValidity` method for custom validations.\n   * @return {boolean}\n   */\n  checkValidity() {\n    const hasInvalidFields = this.__inputs.some((input) => !input.checkValidity());\n    const hasEmptyFields = this.required && this.__inputs.some((el) => !el.value);\n\n    if (hasInvalidFields || hasEmptyFields) {\n      return false;\n    }\n    return true;\n  }\n\n  // Copied from vaadin-time-picker\n  /** @private */\n  // eslint-disable-next-line getter-return\n  get __stepSegment() {\n    const step = this.step == null ? 60 : parseFloat(this.step);\n    if (step % 3600 === 0) {\n      // Accept hours\n      return 1;\n    } else if (step % 60 === 0 || !step) {\n      // Accept minutes\n      return 2;\n    } else if (step % 1 === 0) {\n      // Accept seconds\n      return 3;\n    } else if (step < 1) {\n      // Accept milliseconds\n      return 4;\n    }\n  }\n\n  /**\n   * @param {Date} date1\n   * @param {Date} date2\n   * @return {boolean}\n   * @private\n   */\n  __dateTimeEquals(date1, date2) {\n    if (!dateEquals(date1, date2)) {\n      return false;\n    }\n    return (\n      date1.getHours() === date2.getHours() &&\n      date1.getMinutes() === date2.getMinutes() &&\n      date1.getSeconds() === date2.getSeconds() &&\n      date1.getMilliseconds() === date2.getMilliseconds()\n    );\n  }\n\n  /** @private */\n  __handleDateTimeChange(property, parsedProperty, value, oldValue) {\n    if (!value) {\n      this[property] = '';\n      this[parsedProperty] = '';\n      return;\n    }\n\n    const dateTime = this.__parseDateTime(value);\n    if (!dateTime) {\n      // Invalid date, revert to old value\n      this[property] = oldValue;\n      return;\n    }\n    if (!this.__dateTimeEquals(this[parsedProperty], dateTime)) {\n      this[parsedProperty] = dateTime;\n    }\n  }\n\n  /** @private */\n  __valueChanged(value, oldValue) {\n    this.__handleDateTimeChange('value', '__selectedDateTime', value, oldValue);\n\n    if (oldValue !== undefined) {\n      this.__dispatchChangeForValue = value;\n    }\n\n    this.toggleAttribute('has-value', !!value);\n    this.__updateTimePickerMinMax();\n  }\n\n  /** @private */\n  __dispatchChange() {\n    this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n  }\n\n  /** @private */\n  __minChanged(value, oldValue) {\n    this.__handleDateTimeChange('min', '__minDateTime', value, oldValue);\n    if (this.__datePicker) {\n      this.__datePicker.min = this.__formatDateISO(this.__minDateTime, this.__defaultDateMinMaxValue);\n    }\n    this.__updateTimePickerMinMax();\n\n    if (this.__datePicker && this.__timePicker && this.value) {\n      this.validate();\n    }\n  }\n\n  /** @private */\n  __maxChanged(value, oldValue) {\n    this.__handleDateTimeChange('max', '__maxDateTime', value, oldValue);\n    if (this.__datePicker) {\n      this.__datePicker.max = this.__formatDateISO(this.__maxDateTime, this.__defaultDateMinMaxValue);\n    }\n    this.__updateTimePickerMinMax();\n\n    if (this.__datePicker && this.__timePicker && this.value) {\n      this.validate();\n    }\n  }\n\n  /** @private */\n  __selectedDateTimeChanged(selectedDateTime) {\n    const formattedValue = this.__formatDateTime(selectedDateTime);\n    if (this.value !== formattedValue) {\n      this.value = formattedValue;\n    }\n\n    // Setting the date/time picker value below triggers validation of the components.\n    // If the inputs are slotted (e.g. when using the Java API) and have an initial value this can\n    // happen before date picker ready() which would throw an error when date picker is trying to read\n    // `this.$.input` (as a result of value change triggered by setting the value).\n    // Workaround the problem by setting custom field value only if date picker is ready.\n    const isDatePickerReady = Boolean(this.__datePicker && this.__datePicker.$);\n    if (isDatePickerReady && !this.__ignoreInputValueChange) {\n      // Ignore value changes until both inputs have a value updated\n      // TODO: This logic clears both fields if one of them is cleared :(\n      this.__ignoreInputValueChange = true;\n      const [dateValue, timeValue] = this.value.split('T');\n      this.__datePicker.value = dateValue || '';\n      this.__timePicker.value = timeValue || '';\n      this.__ignoreInputValueChange = false;\n    }\n  }\n\n  /** @private */\n  get __formattedValue() {\n    const dateValue = this.__datePicker.value;\n    const timeValue = this.__timePicker.value;\n    if (dateValue && timeValue) {\n      return [dateValue, timeValue].join('T');\n    }\n    return '';\n  }\n\n  /** @private */\n  __valueChangedEventHandler() {\n    if (this.__ignoreInputValueChange) {\n      return;\n    }\n\n    const value = this.__formattedValue;\n\n    const [date, time] = value.split('T');\n\n    this.__ignoreInputValueChange = true;\n    this.__updateTimePickerMinMax();\n\n    if (date && time) {\n      if (value !== this.value) {\n        this.value = value;\n      }\n    } else {\n      this.value = '';\n    }\n\n    this.__ignoreInputValueChange = false;\n  }\n\n  /** @private */\n  __autoOpenDisabledChanged(autoOpenDisabled) {\n    if (this.__datePicker) {\n      this.__datePicker.autoOpenDisabled = autoOpenDisabled;\n    }\n    if (this.__timePicker) {\n      this.__timePicker.autoOpenDisabled = autoOpenDisabled;\n    }\n  }\n\n  /** @private */\n  __themeChanged(theme, datePicker, timePicker) {\n    if (!datePicker || !timePicker) {\n      // Both pickers are not ready yet\n      return;\n    }\n\n    [datePicker, timePicker].forEach((picker) => {\n      if (theme) {\n        picker.setAttribute('theme', theme);\n      } else {\n        picker.removeAttribute('theme');\n      }\n    });\n  }\n\n  /** @private */\n  __pickersChanged(datePicker, timePicker) {\n    if (!datePicker || !timePicker) {\n      // Both pickers are not ready yet\n      return;\n    }\n\n    if (datePicker.__defaultPicker !== timePicker.__defaultPicker) {\n      // Both pickers are not replaced yet\n      return;\n    }\n\n    if (datePicker.value) {\n      // The new pickers have a value, update the component value\n      this.__valueChangedEventHandler();\n    } else if (this.value) {\n      // The component has a value, update the new pickers values\n      this.__selectedDateTimeChanged(this.__selectedDateTime);\n    }\n  }\n\n  /**\n   * Fired when the user commits a value change.\n   *\n   * @event change\n   */\n}\n\ncustomElements.define(DateTimePicker.is, DateTimePicker);\n\nexport { DateTimePicker };\n"],
  "mappings": "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",
  "names": ["template", "dedupingMixin", "modules", "template", "item", "root", "PropertiesChanged", "proto", "PropertyAccessors", "root", "TemplateStamp", "template", "dedupeId", "dedupeId", "i", "PropertyEffects", "changedProps", "hasPaths", "root", "matches", "template", "PropertiesMixin", "proto", "template", "css", "PolymerElement", "base", "html", "template", "scrollType", "$tpl", "font", "$tpl", "node", "MutableData", "OptionalMutableData", "template", "instances", "template", "microtaskCurrHandle", "microtaskLastHandle", "microtaskCallbacks", "microtaskNodeContent", "microtaskScheduled", "microtaskNode", "microtaskFlush", "timeOut", "microTask", "microtaskScheduled", "microtaskNode", "microtaskNodeContent", "microtaskCallbacks", "microtaskCurrHandle", "microtaskLastHandle", "ElementMixin", "passiveTouchGestures", "wrap", "button", "register", "microTask", "wrap", "e", "ElementMixin", "overlay", "Debouncer", "debouncerQueue", "enqueueDebouncer", "flushDebouncers", "flush", "flushDebouncers", "template", "Debouncer", "enqueueDebouncer", "flush", "item", "date", "timeOut", "matches", "timeOut", "root", "timeOut", "host", "inputFieldShared", "matches", "inputFieldShared", "ElementMixin", "item", "microTask", "timeOut", "ComboBoxPlaceholder", "item", "memoizedTemplate", "loader", "item", "overlay", "root", "timeOut", "inputFieldShared", "ElementMixin", "timePicker", "inputFieldShared", "ElementMixin", "datePicker", "timePicker"]
}
